Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ciclo_clase clase_main
Rule 2     programa -> clase_main
Rule 3     ciclo_clase -> clase
Rule 4     ciclo_clase -> ciclo_clase clase
Rule 5     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
Rule 6     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
Rule 7     clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
Rule 8     clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual
Rule 9     declararClase -> <empty>
Rule 10    limpiarMetodoActual -> <empty>
Rule 11    limpiarInvocador -> <empty>
Rule 12    herencia -> empty
Rule 13    herencia -> UNDER ID agregaAncestro
Rule 14    agregaAncestro -> <empty>
Rule 15    ciclo_vars -> acceso vars
Rule 16    ciclo_vars -> ciclo_vars acceso vars
Rule 17    ciclo_func -> func
Rule 18    ciclo_func -> ciclo_func func
Rule 19    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
Rule 20    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
Rule 21    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
Rule 22    clase_main -> CLASS MAIN declararClase LLIZQ main LLDER
Rule 23    vars -> var_op PYC
Rule 24    var_op -> tipo ciclo_tipo
Rule 25    var_op -> ID revisarExistenciaClase DOSP ciclo_id
Rule 26    revisarExistenciaClase -> <empty>
Rule 27    ciclo_tipo -> ID declararVariable
Rule 28    ciclo_tipo -> ID declararVariable COIZQ exp CODER
Rule 29    ciclo_tipo -> ciclo_tipo COMA ID declararVariable
Rule 30    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER
Rule 31    ciclo_tipo -> ID declararVariable IGUAL exp
Rule 32    ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp
Rule 33    ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp
Rule 34    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp
Rule 35    ciclo_id -> ID declararVariable
Rule 36    ciclo_id -> ID declararVariable COIZQ exp CODER
Rule 37    ciclo_id -> ciclo_id COMA ID declararVariable
Rule 38    ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER
Rule 39    ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador
Rule 40    ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador
Rule 41    declararVariable -> <empty>
Rule 42    tipo -> NUMERAL
Rule 43    tipo -> REAL
Rule 44    tipo -> BOOL
Rule 45    tipo -> CHAR
Rule 46    tipo -> STRING
Rule 47    acceso -> HIDDEN
Rule 48    acceso -> VISIBLE
Rule 49    func -> acceso tipo ID declararMetodo params cuerpo_func
Rule 50    func -> acceso WITHOUT ID declararMetodo params cuerpo_func
Rule 51    declararMetodo -> <empty>
Rule 52    main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
Rule 53    params -> PIZQ params_ciclo PDER
Rule 54    params -> PIZQ PDER
Rule 55    params_ciclo -> tipo ID meterParametros
Rule 56    params_ciclo -> tipo ID CODER COIZQ meterParametros
Rule 57    params_ciclo -> params_ciclo COMA tipo ID meterParametros
Rule 58    params_ciclo -> params_ciclo COMA tipo ID CODER COIZQ meterParametros
Rule 59    meterParametros -> <empty>
Rule 60    cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER
Rule 61    cuerpo_func -> LLIZQ ciclo_vars_func LLDER
Rule 62    cuerpo_func -> LLIZQ ciclo_estatuto LLDER
Rule 63    cuerpo_func -> LLIZQ LLDER
Rule 64    ciclo_vars_func -> vars
Rule 65    ciclo_vars_func -> ciclo_vars_func vars
Rule 66    ciclo_estatuto -> estatuto
Rule 67    ciclo_estatuto -> ciclo_estatuto estatuto
Rule 68    estatuto -> while
Rule 69    estatuto -> asignacion
Rule 70    estatuto -> condicion
Rule 71    estatuto -> escritura
Rule 72    estatuto -> lectura
Rule 73    estatuto -> llamada_func limpiarInvocador PYC
Rule 74    estatuto -> return
Rule 75    llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER
Rule 76    llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
Rule 77    llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
Rule 78    llamada_func -> ID checarFuncion PIZQ PDER
Rule 79    llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
Rule 80    llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
Rule 81    checarFuncion -> <empty>
Rule 82    definirInvocador -> <empty>
Rule 83    exp_ciclo -> exp
Rule 84    exp_ciclo -> exp_ciclo COMA exp
Rule 85    exp -> exp MAS exp
Rule 86    exp -> exp MENOS exp
Rule 87    exp -> exp POR exp
Rule 88    exp -> exp ENTRE exp
Rule 89    exp -> exp MOD exp
Rule 90    exp -> exp IGUALC exp
Rule 91    exp -> exp NOTIGUAL exp
Rule 92    exp -> exp MAYOR exp
Rule 93    exp -> exp MAYORIGUAL exp
Rule 94    exp -> exp MENOR exp
Rule 95    exp -> exp MENORIGUAL exp
Rule 96    exp -> exp AND exp
Rule 97    exp -> exp OR exp
Rule 98    exp -> NOT exp
Rule 99    exp -> MENOS exp
Rule 100   exp -> PIZQ exp PDER
Rule 101   exp -> cte_str
Rule 102   exp -> cte_char
Rule 103   exp -> cte_numeral
Rule 104   exp -> cte_real
Rule 105   exp -> cte_bool
Rule 106   exp -> atom limpiarInvocador
Rule 107   exp -> llamada_func limpiarInvocador
Rule 108   cte_str -> CTE_STR
Rule 109   cte_char -> CTE_CHAR
Rule 110   cte_numeral -> CTE_NUMERAL
Rule 111   cte_real -> CTE_REAL
Rule 112   cte_bool -> TRUE
Rule 113   cte_bool -> FALSE
Rule 114   return -> RETURN exp PYC
Rule 115   return -> RETURN PYC
Rule 116   while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 117   while -> WHILE PIZQ exp PDER LLIZQ LLDER
Rule 118   asignacion -> atom limpiarInvocador IGUAL exp PYC
Rule 119   atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
Rule 120   atom -> ID PUNTO definirInvocador ID checarAtributo
Rule 121   atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
Rule 122   atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
Rule 123   atom -> ID checarAtributo
Rule 124   atom -> ID definirInvocador COIZQ exp CODER checarAtributo2
Rule 125   atom -> THIS PUNTO definirInvocador ID checarAtributo
Rule 126   atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
Rule 127   checarAtributo2 -> <empty>
Rule 128   checarAtributo -> <empty>
Rule 129   condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
Rule 130   condicion -> ciclo_cond ELSE LLIZQ LLDER
Rule 131   condicion -> ciclo_cond
Rule 132   ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 133   ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER
Rule 134   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 135   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER
Rule 136   lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC
Rule 137   escritura -> OUTPUT PIZQ exp PDER PYC
Rule 138   empty -> <empty>

Terminals, with rules where they appear

AND                  : 96
BOOL                 : 44
CHAR                 : 45
CLASS                : 5 6 7 8 19 20 21 22
CODER                : 28 30 32 34 36 38 56 58 77 80 119 121 121 122 124 126
COIZQ                : 28 30 32 34 36 38 56 58 77 80 119 121 121 122 124 126
COMA                 : 29 30 33 34 37 38 40 57 58 84
CTE_CHAR             : 109
CTE_NUMERAL          : 110
CTE_REAL             : 111
CTE_STR              : 108
DOSP                 : 25
ELSE                 : 129 130 134 135
ENTRE                : 88
FALSE                : 113
HIDDEN               : 47
ID                   : 5 6 7 8 13 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 49 50 55 56 57 58 75 76 76 77 77 78 79 79 80 80 119 119 120 120 121 121 122 122 123 124 125 126
IF                   : 132 133 134 135
IGUAL                : 31 32 33 34 39 40 118
IGUALC               : 90
INPUT                : 136
LLDER                : 5 6 7 8 19 20 21 22 60 61 62 63 116 117 129 130 132 133 134 135
LLIZQ                : 5 6 7 8 19 20 21 22 60 61 62 63 116 117 129 130 132 133 134 135
MAIN                 : 19 20 21 22 52
MAS                  : 85
MAYOR                : 92
MAYORIGUAL           : 93
MENOR                : 94
MENORIGUAL           : 95
MENOS                : 86 99
MOD                  : 89
NOT                  : 98
NOTIGUAL             : 91
NUMERAL              : 42
OR                   : 97
OUTPUT               : 137
PDER                 : 52 53 54 75 76 77 78 79 80 100 116 117 132 133 134 135 136 137
PIZQ                 : 52 53 54 75 76 77 78 79 80 100 116 117 132 133 134 135 136 137
POR                  : 87
PUNTO                : 76 77 79 80 119 120 121 122 125 126
PYC                  : 23 73 114 115 118 136 137
REAL                 : 43
RETURN               : 114 115
STRING               : 46
THIS                 : 125 126
TRUE                 : 112
UNDER                : 13
VISIBLE              : 48
WHILE                : 116 117
WITHOUT              : 50 52
error                : 

Nonterminals, with rules where they appear

acceso               : 15 16 49 50 52
agregaAncestro       : 13
asignacion           : 69
atom                 : 39 40 106 118 136
checarAtributo       : 119 120 121 122 123 125 126
checarAtributo2      : 124
checarFuncion        : 75 76 77 78 79 80
ciclo_clase          : 1 4
ciclo_cond           : 129 130 131 134 135
ciclo_estatuto       : 60 62 67 116 129 132 134
ciclo_func           : 5 7 18 19 21
ciclo_id             : 25 37 38 40
ciclo_tipo           : 24 29 30 33 34
ciclo_vars           : 5 6 16 19 20
ciclo_vars_func      : 60 61 65
clase                : 3 4
clase_main           : 1 2
condicion            : 70
cte_bool             : 105
cte_char             : 102
cte_numeral          : 103
cte_real             : 104
cte_str              : 101
cuerpo_func          : 49 50 52
declararClase        : 5 6 7 8 19 20 21 22
declararMetodo       : 49 50 52
declararVariable     : 27 28 29 30 31 32 33 34 35 36 37 38 39 40
definirInvocador     : 76 77 79 80 119 120 121 122 124 125 126
empty                : 12
escritura            : 71
estatuto             : 66 67
exp                  : 28 30 31 32 32 33 34 34 36 38 77 80 83 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 99 100 114 116 117 118 119 121 121 122 124 126 132 133 134 135 137
exp_ciclo            : 75 76 77 84
func                 : 17 18
herencia             : 5 6 7 8
lectura              : 72
limpiarInvocador     : 39 40 73 106 107 118 136
limpiarMetodoActual  : 5 6 7 8
llamada_func         : 73 107
main                 : 19 20 21 22
meterParametros      : 55 56 57 58
params               : 49 50
params_ciclo         : 53 57 58
programa             : 0
return               : 74
revisarExistenciaClase : 25
tipo                 : 24 49 55 56 57 58
var_op               : 23
vars                 : 15 16 64 65
while                : 68

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ciclo_clase clase_main
    (2) programa -> . clase_main
    (3) ciclo_clase -> . clase
    (4) ciclo_clase -> . ciclo_clase clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    ciclo_clase                    shift and go to state 1
    clase_main                     shift and go to state 2
    clase                          shift and go to state 3
    programa                       shift and go to state 4

state 1

    (1) programa -> ciclo_clase . clase_main
    (4) ciclo_clase -> ciclo_clase . clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    clase_main                     shift and go to state 6
    clase                          shift and go to state 7

state 2

    (2) programa -> clase_main .

    $end            reduce using rule 2 (programa -> clase_main .)


state 3

    (3) ciclo_clase -> clase .

    CLASS           reduce using rule 3 (ciclo_clase -> clase .)


state 4

    (0) S' -> programa .



state 5

    (19) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS . MAIN declararClase LLIZQ main LLDER
    (5) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS . ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    MAIN            shift and go to state 8
    ID              shift and go to state 9


state 6

    (1) programa -> ciclo_clase clase_main .

    $end            reduce using rule 1 (programa -> ciclo_clase clase_main .)


state 7

    (4) ciclo_clase -> ciclo_clase clase .

    CLASS           reduce using rule 4 (ciclo_clase -> ciclo_clase clase .)


state 8

    (19) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN . declararClase LLIZQ main LLDER
    (9) declararClase -> .

    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 10

state 9

    (5) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID . declararClase herencia LLIZQ LLDER limpiarMetodoActual
    (9) declararClase -> .

    UNDER           reduce using rule 9 (declararClase -> .)
    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 11

state 10

    (19) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase . LLIZQ main LLDER

    LLIZQ           shift and go to state 12


state 11

    (5) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase . herencia LLIZQ LLDER limpiarMetodoActual
    (12) herencia -> . empty
    (13) herencia -> . UNDER ID agregaAncestro
    (138) empty -> .

    UNDER           shift and go to state 13
    LLIZQ           reduce using rule 138 (empty -> .)

    herencia                       shift and go to state 14
    empty                          shift and go to state 15

state 12

    (19) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase LLIZQ . main LLDER
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 18
    ciclo_func                     shift and go to state 17
    ciclo_vars                     shift and go to state 19
    func                           shift and go to state 21
    main                           shift and go to state 16

state 13

    (13) herencia -> UNDER . ID agregaAncestro

    ID              shift and go to state 23


state 14

    (5) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia . LLIZQ LLDER limpiarMetodoActual

    LLIZQ           shift and go to state 24


state 15

    (12) herencia -> empty .

    LLIZQ           reduce using rule 12 (herencia -> empty .)


state 16

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main . LLDER

    LLDER           shift and go to state 25


state 17

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 28

state 18

    (15) ciclo_vars -> acceso . vars
    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 30
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 19

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . main LLDER
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 41
    ciclo_func                     shift and go to state 40
    func                           shift and go to state 21
    main                           shift and go to state 39

state 20

    (48) acceso -> VISIBLE .

    WITHOUT         reduce using rule 48 (acceso -> VISIBLE .)
    NUMERAL         reduce using rule 48 (acceso -> VISIBLE .)
    REAL            reduce using rule 48 (acceso -> VISIBLE .)
    BOOL            reduce using rule 48 (acceso -> VISIBLE .)
    CHAR            reduce using rule 48 (acceso -> VISIBLE .)
    STRING          reduce using rule 48 (acceso -> VISIBLE .)
    ID              reduce using rule 48 (acceso -> VISIBLE .)


state 21

    (17) ciclo_func -> func .

    LLDER           reduce using rule 17 (ciclo_func -> func .)
    HIDDEN          reduce using rule 17 (ciclo_func -> func .)
    VISIBLE         reduce using rule 17 (ciclo_func -> func .)


state 22

    (47) acceso -> HIDDEN .

    WITHOUT         reduce using rule 47 (acceso -> HIDDEN .)
    NUMERAL         reduce using rule 47 (acceso -> HIDDEN .)
    REAL            reduce using rule 47 (acceso -> HIDDEN .)
    BOOL            reduce using rule 47 (acceso -> HIDDEN .)
    CHAR            reduce using rule 47 (acceso -> HIDDEN .)
    STRING          reduce using rule 47 (acceso -> HIDDEN .)
    ID              reduce using rule 47 (acceso -> HIDDEN .)


state 23

    (13) herencia -> UNDER ID . agregaAncestro
    (14) agregaAncestro -> .

    LLIZQ           reduce using rule 14 (agregaAncestro -> .)

    agregaAncestro                 shift and go to state 42

state 24

    (5) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia LLIZQ . LLDER limpiarMetodoActual
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 43
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 45
    ciclo_func                     shift and go to state 44
    ciclo_vars                     shift and go to state 46
    func                           shift and go to state 21

state 25

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .

    $end            reduce using rule 22 (clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .)


state 26

    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 47

state 27

    (18) ciclo_func -> ciclo_func func .

    LLDER           reduce using rule 18 (ciclo_func -> ciclo_func func .)
    HIDDEN          reduce using rule 18 (ciclo_func -> ciclo_func func .)
    VISIBLE         reduce using rule 18 (ciclo_func -> ciclo_func func .)


state 28

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main . LLDER

    LLDER           shift and go to state 48


state 29

    (43) tipo -> REAL .

    ID              reduce using rule 43 (tipo -> REAL .)


state 30

    (15) ciclo_vars -> acceso vars .

    LLDER           reduce using rule 15 (ciclo_vars -> acceso vars .)
    HIDDEN          reduce using rule 15 (ciclo_vars -> acceso vars .)
    VISIBLE         reduce using rule 15 (ciclo_vars -> acceso vars .)


state 31

    (45) tipo -> CHAR .

    ID              reduce using rule 45 (tipo -> CHAR .)


state 32

    (23) vars -> var_op . PYC

    PYC             shift and go to state 49


state 33

    (42) tipo -> NUMERAL .

    ID              reduce using rule 42 (tipo -> NUMERAL .)


state 34

    (49) func -> acceso tipo . ID declararMetodo params cuerpo_func
    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> . ID declararVariable IGUAL exp
    (32) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 51

    ciclo_tipo                     shift and go to state 50

state 35

    (46) tipo -> STRING .

    ID              reduce using rule 46 (tipo -> STRING .)


state 36

    (52) main -> acceso WITHOUT . MAIN declararMetodo PIZQ PDER cuerpo_func
    (50) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    MAIN            shift and go to state 53
    ID              shift and go to state 52


state 37

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (26) revisarExistenciaClase -> .

    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)

    revisarExistenciaClase         shift and go to state 54

state 38

    (44) tipo -> BOOL .

    ID              reduce using rule 44 (tipo -> BOOL .)


state 39

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main . LLDER

    LLDER           shift and go to state 55


state 40

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 56

state 41

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 57
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 42

    (13) herencia -> UNDER ID agregaAncestro .

    LLIZQ           reduce using rule 13 (herencia -> UNDER ID agregaAncestro .)


state 43

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 58

state 44

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    LLDER           shift and go to state 59
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 45

    (15) ciclo_vars -> acceso . vars
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 30
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 46

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . LLDER limpiarMetodoActual
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 62
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 64
    ciclo_func                     shift and go to state 63
    func                           shift and go to state 21

state 47

    (49) func -> acceso tipo . ID declararMetodo params cuerpo_func

    ID              shift and go to state 65


state 48

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .

    $end            reduce using rule 21 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .)


state 49

    (23) vars -> var_op PYC .

    HIDDEN          reduce using rule 23 (vars -> var_op PYC .)
    VISIBLE         reduce using rule 23 (vars -> var_op PYC .)
    LLDER           reduce using rule 23 (vars -> var_op PYC .)
    ID              reduce using rule 23 (vars -> var_op PYC .)
    WHILE           reduce using rule 23 (vars -> var_op PYC .)
    OUTPUT          reduce using rule 23 (vars -> var_op PYC .)
    INPUT           reduce using rule 23 (vars -> var_op PYC .)
    RETURN          reduce using rule 23 (vars -> var_op PYC .)
    NUMERAL         reduce using rule 23 (vars -> var_op PYC .)
    REAL            reduce using rule 23 (vars -> var_op PYC .)
    BOOL            reduce using rule 23 (vars -> var_op PYC .)
    CHAR            reduce using rule 23 (vars -> var_op PYC .)
    STRING          reduce using rule 23 (vars -> var_op PYC .)
    THIS            reduce using rule 23 (vars -> var_op PYC .)
    IF              reduce using rule 23 (vars -> var_op PYC .)


state 50

    (24) var_op -> tipo ciclo_tipo .
    (29) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER IGUAL exp

    PYC             reduce using rule 24 (var_op -> tipo ciclo_tipo .)
    COMA            shift and go to state 66


state 51

    (49) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> ID . declararVariable IGUAL exp
    (32) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (51) declararMetodo -> .
    (41) declararVariable -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)
    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 67
    declararMetodo                 shift and go to state 68

state 52

    (50) func -> acceso WITHOUT ID . declararMetodo params cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 69

state 53

    (52) main -> acceso WITHOUT MAIN . declararMetodo PIZQ PDER cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 70

state 54

    (25) var_op -> ID revisarExistenciaClase . DOSP ciclo_id

    DOSP            shift and go to state 71


state 55

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .

    $end            reduce using rule 20 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .)


state 56

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main . LLDER

    LLDER           shift and go to state 72


state 57

    (16) ciclo_vars -> ciclo_vars acceso vars .

    LLDER           reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    HIDDEN          reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    VISIBLE         reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)


state 58

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .

    CLASS           reduce using rule 8 (clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .)


state 59

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 73

state 60

    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 47

state 61

    (50) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    ID              shift and go to state 52


state 62

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 74

state 63

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    LLDER           shift and go to state 75
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 64

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 57
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 65

    (49) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 68

state 66

    (29) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 76


state 67

    (27) ciclo_tipo -> ID declararVariable .
    (28) ciclo_tipo -> ID declararVariable . COIZQ exp CODER
    (31) ciclo_tipo -> ID declararVariable . IGUAL exp
    (32) ciclo_tipo -> ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    PYC             reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    COIZQ           shift and go to state 78
    IGUAL           shift and go to state 77


state 68

    (49) func -> acceso tipo ID declararMetodo . params cuerpo_func
    (53) params -> . PIZQ params_ciclo PDER
    (54) params -> . PIZQ PDER

    PIZQ            shift and go to state 79

    params                         shift and go to state 80

state 69

    (50) func -> acceso WITHOUT ID declararMetodo . params cuerpo_func
    (53) params -> . PIZQ params_ciclo PDER
    (54) params -> . PIZQ PDER

    PIZQ            shift and go to state 79

    params                         shift and go to state 81

state 70

    (52) main -> acceso WITHOUT MAIN declararMetodo . PIZQ PDER cuerpo_func

    PIZQ            shift and go to state 82


state 71

    (25) var_op -> ID revisarExistenciaClase DOSP . ciclo_id
    (35) ciclo_id -> . ID declararVariable
    (36) ciclo_id -> . ID declararVariable COIZQ exp CODER
    (37) ciclo_id -> . ciclo_id COMA ID declararVariable
    (38) ciclo_id -> . ciclo_id COMA ID declararVariable COIZQ exp CODER
    (39) ciclo_id -> . ID declararVariable IGUAL atom limpiarInvocador
    (40) ciclo_id -> . ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador

    ID              shift and go to state 84

    ciclo_id                       shift and go to state 83

state 72

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .

    $end            reduce using rule 19 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .)


state 73

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 7 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .)


state 74

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .

    CLASS           reduce using rule 6 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .)


state 75

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 85

state 76

    (29) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER IGUAL exp
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 86

state 77

    (31) ciclo_tipo -> ID declararVariable IGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 104
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 78

    (28) ciclo_tipo -> ID declararVariable COIZQ . exp CODER
    (32) ciclo_tipo -> ID declararVariable COIZQ . exp CODER IGUAL exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 106
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 79

    (53) params -> PIZQ . params_ciclo PDER
    (54) params -> PIZQ . PDER
    (55) params_ciclo -> . tipo ID meterParametros
    (56) params_ciclo -> . tipo ID CODER COIZQ meterParametros
    (57) params_ciclo -> . params_ciclo COMA tipo ID meterParametros
    (58) params_ciclo -> . params_ciclo COMA tipo ID CODER COIZQ meterParametros
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    PDER            shift and go to state 109
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 107
    params_ciclo                   shift and go to state 108

state 80

    (49) func -> acceso tipo ID declararMetodo params . cuerpo_func
    (60) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (61) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (62) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (63) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 110

    cuerpo_func                    shift and go to state 111

state 81

    (50) func -> acceso WITHOUT ID declararMetodo params . cuerpo_func
    (60) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (61) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (62) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (63) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 110

    cuerpo_func                    shift and go to state 112

state 82

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ . PDER cuerpo_func

    PDER            shift and go to state 113


state 83

    (25) var_op -> ID revisarExistenciaClase DOSP ciclo_id .
    (37) ciclo_id -> ciclo_id . COMA ID declararVariable
    (38) ciclo_id -> ciclo_id . COMA ID declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id . COMA ID declararVariable IGUAL atom limpiarInvocador

    PYC             reduce using rule 25 (var_op -> ID revisarExistenciaClase DOSP ciclo_id .)
    COMA            shift and go to state 114


state 84

    (35) ciclo_id -> ID . declararVariable
    (36) ciclo_id -> ID . declararVariable COIZQ exp CODER
    (39) ciclo_id -> ID . declararVariable IGUAL atom limpiarInvocador
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 115

state 85

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 5 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .)


state 86

    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable .
    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    PYC             reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    COIZQ           shift and go to state 117
    IGUAL           shift and go to state 116


state 87

    (100) exp -> PIZQ . exp PDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 118
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 88

    (105) exp -> cte_bool .

    MAS             reduce using rule 105 (exp -> cte_bool .)
    MENOS           reduce using rule 105 (exp -> cte_bool .)
    POR             reduce using rule 105 (exp -> cte_bool .)
    ENTRE           reduce using rule 105 (exp -> cte_bool .)
    MOD             reduce using rule 105 (exp -> cte_bool .)
    IGUALC          reduce using rule 105 (exp -> cte_bool .)
    NOTIGUAL        reduce using rule 105 (exp -> cte_bool .)
    MAYOR           reduce using rule 105 (exp -> cte_bool .)
    MAYORIGUAL      reduce using rule 105 (exp -> cte_bool .)
    MENOR           reduce using rule 105 (exp -> cte_bool .)
    MENORIGUAL      reduce using rule 105 (exp -> cte_bool .)
    AND             reduce using rule 105 (exp -> cte_bool .)
    OR              reduce using rule 105 (exp -> cte_bool .)
    COMA            reduce using rule 105 (exp -> cte_bool .)
    PYC             reduce using rule 105 (exp -> cte_bool .)
    CODER           reduce using rule 105 (exp -> cte_bool .)
    PDER            reduce using rule 105 (exp -> cte_bool .)


state 89

    (112) cte_bool -> TRUE .

    MAS             reduce using rule 112 (cte_bool -> TRUE .)
    MENOS           reduce using rule 112 (cte_bool -> TRUE .)
    POR             reduce using rule 112 (cte_bool -> TRUE .)
    ENTRE           reduce using rule 112 (cte_bool -> TRUE .)
    MOD             reduce using rule 112 (cte_bool -> TRUE .)
    IGUALC          reduce using rule 112 (cte_bool -> TRUE .)
    NOTIGUAL        reduce using rule 112 (cte_bool -> TRUE .)
    MAYOR           reduce using rule 112 (cte_bool -> TRUE .)
    MAYORIGUAL      reduce using rule 112 (cte_bool -> TRUE .)
    MENOR           reduce using rule 112 (cte_bool -> TRUE .)
    MENORIGUAL      reduce using rule 112 (cte_bool -> TRUE .)
    AND             reduce using rule 112 (cte_bool -> TRUE .)
    OR              reduce using rule 112 (cte_bool -> TRUE .)
    COMA            reduce using rule 112 (cte_bool -> TRUE .)
    PYC             reduce using rule 112 (cte_bool -> TRUE .)
    CODER           reduce using rule 112 (cte_bool -> TRUE .)
    PDER            reduce using rule 112 (cte_bool -> TRUE .)


state 90

    (103) exp -> cte_numeral .

    MAS             reduce using rule 103 (exp -> cte_numeral .)
    MENOS           reduce using rule 103 (exp -> cte_numeral .)
    POR             reduce using rule 103 (exp -> cte_numeral .)
    ENTRE           reduce using rule 103 (exp -> cte_numeral .)
    MOD             reduce using rule 103 (exp -> cte_numeral .)
    IGUALC          reduce using rule 103 (exp -> cte_numeral .)
    NOTIGUAL        reduce using rule 103 (exp -> cte_numeral .)
    MAYOR           reduce using rule 103 (exp -> cte_numeral .)
    MAYORIGUAL      reduce using rule 103 (exp -> cte_numeral .)
    MENOR           reduce using rule 103 (exp -> cte_numeral .)
    MENORIGUAL      reduce using rule 103 (exp -> cte_numeral .)
    AND             reduce using rule 103 (exp -> cte_numeral .)
    OR              reduce using rule 103 (exp -> cte_numeral .)
    COMA            reduce using rule 103 (exp -> cte_numeral .)
    PYC             reduce using rule 103 (exp -> cte_numeral .)
    CODER           reduce using rule 103 (exp -> cte_numeral .)
    PDER            reduce using rule 103 (exp -> cte_numeral .)


state 91

    (109) cte_char -> CTE_CHAR .

    MAS             reduce using rule 109 (cte_char -> CTE_CHAR .)
    MENOS           reduce using rule 109 (cte_char -> CTE_CHAR .)
    POR             reduce using rule 109 (cte_char -> CTE_CHAR .)
    ENTRE           reduce using rule 109 (cte_char -> CTE_CHAR .)
    MOD             reduce using rule 109 (cte_char -> CTE_CHAR .)
    IGUALC          reduce using rule 109 (cte_char -> CTE_CHAR .)
    NOTIGUAL        reduce using rule 109 (cte_char -> CTE_CHAR .)
    MAYOR           reduce using rule 109 (cte_char -> CTE_CHAR .)
    MAYORIGUAL      reduce using rule 109 (cte_char -> CTE_CHAR .)
    MENOR           reduce using rule 109 (cte_char -> CTE_CHAR .)
    MENORIGUAL      reduce using rule 109 (cte_char -> CTE_CHAR .)
    AND             reduce using rule 109 (cte_char -> CTE_CHAR .)
    OR              reduce using rule 109 (cte_char -> CTE_CHAR .)
    COMA            reduce using rule 109 (cte_char -> CTE_CHAR .)
    PYC             reduce using rule 109 (cte_char -> CTE_CHAR .)
    CODER           reduce using rule 109 (cte_char -> CTE_CHAR .)
    PDER            reduce using rule 109 (cte_char -> CTE_CHAR .)


state 92

    (107) exp -> llamada_func . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 119

state 93

    (110) cte_numeral -> CTE_NUMERAL .

    PDER            reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    MAS             reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    MENOS           reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    POR             reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    ENTRE           reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    MOD             reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    IGUALC          reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    MAYOR           reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    MENOR           reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    AND             reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    OR              reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    CODER           reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    COMA            reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)
    PYC             reduce using rule 110 (cte_numeral -> CTE_NUMERAL .)


state 94

    (111) cte_real -> CTE_REAL .

    MAS             reduce using rule 111 (cte_real -> CTE_REAL .)
    MENOS           reduce using rule 111 (cte_real -> CTE_REAL .)
    POR             reduce using rule 111 (cte_real -> CTE_REAL .)
    ENTRE           reduce using rule 111 (cte_real -> CTE_REAL .)
    MOD             reduce using rule 111 (cte_real -> CTE_REAL .)
    IGUALC          reduce using rule 111 (cte_real -> CTE_REAL .)
    NOTIGUAL        reduce using rule 111 (cte_real -> CTE_REAL .)
    MAYOR           reduce using rule 111 (cte_real -> CTE_REAL .)
    MAYORIGUAL      reduce using rule 111 (cte_real -> CTE_REAL .)
    MENOR           reduce using rule 111 (cte_real -> CTE_REAL .)
    MENORIGUAL      reduce using rule 111 (cte_real -> CTE_REAL .)
    AND             reduce using rule 111 (cte_real -> CTE_REAL .)
    OR              reduce using rule 111 (cte_real -> CTE_REAL .)
    COMA            reduce using rule 111 (cte_real -> CTE_REAL .)
    PYC             reduce using rule 111 (cte_real -> CTE_REAL .)
    CODER           reduce using rule 111 (cte_real -> CTE_REAL .)
    PDER            reduce using rule 111 (cte_real -> CTE_REAL .)


state 95

    (101) exp -> cte_str .

    MAS             reduce using rule 101 (exp -> cte_str .)
    MENOS           reduce using rule 101 (exp -> cte_str .)
    POR             reduce using rule 101 (exp -> cte_str .)
    ENTRE           reduce using rule 101 (exp -> cte_str .)
    MOD             reduce using rule 101 (exp -> cte_str .)
    IGUALC          reduce using rule 101 (exp -> cte_str .)
    NOTIGUAL        reduce using rule 101 (exp -> cte_str .)
    MAYOR           reduce using rule 101 (exp -> cte_str .)
    MAYORIGUAL      reduce using rule 101 (exp -> cte_str .)
    MENOR           reduce using rule 101 (exp -> cte_str .)
    MENORIGUAL      reduce using rule 101 (exp -> cte_str .)
    AND             reduce using rule 101 (exp -> cte_str .)
    OR              reduce using rule 101 (exp -> cte_str .)
    COMA            reduce using rule 101 (exp -> cte_str .)
    PYC             reduce using rule 101 (exp -> cte_str .)
    CODER           reduce using rule 101 (exp -> cte_str .)
    PDER            reduce using rule 101 (exp -> cte_str .)


state 96

    (104) exp -> cte_real .

    MAS             reduce using rule 104 (exp -> cte_real .)
    MENOS           reduce using rule 104 (exp -> cte_real .)
    POR             reduce using rule 104 (exp -> cte_real .)
    ENTRE           reduce using rule 104 (exp -> cte_real .)
    MOD             reduce using rule 104 (exp -> cte_real .)
    IGUALC          reduce using rule 104 (exp -> cte_real .)
    NOTIGUAL        reduce using rule 104 (exp -> cte_real .)
    MAYOR           reduce using rule 104 (exp -> cte_real .)
    MAYORIGUAL      reduce using rule 104 (exp -> cte_real .)
    MENOR           reduce using rule 104 (exp -> cte_real .)
    MENORIGUAL      reduce using rule 104 (exp -> cte_real .)
    AND             reduce using rule 104 (exp -> cte_real .)
    OR              reduce using rule 104 (exp -> cte_real .)
    COMA            reduce using rule 104 (exp -> cte_real .)
    PYC             reduce using rule 104 (exp -> cte_real .)
    CODER           reduce using rule 104 (exp -> cte_real .)
    PDER            reduce using rule 104 (exp -> cte_real .)


state 97

    (106) exp -> atom . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 120

state 98

    (102) exp -> cte_char .

    MAS             reduce using rule 102 (exp -> cte_char .)
    MENOS           reduce using rule 102 (exp -> cte_char .)
    POR             reduce using rule 102 (exp -> cte_char .)
    ENTRE           reduce using rule 102 (exp -> cte_char .)
    MOD             reduce using rule 102 (exp -> cte_char .)
    IGUALC          reduce using rule 102 (exp -> cte_char .)
    NOTIGUAL        reduce using rule 102 (exp -> cte_char .)
    MAYOR           reduce using rule 102 (exp -> cte_char .)
    MAYORIGUAL      reduce using rule 102 (exp -> cte_char .)
    MENOR           reduce using rule 102 (exp -> cte_char .)
    MENORIGUAL      reduce using rule 102 (exp -> cte_char .)
    AND             reduce using rule 102 (exp -> cte_char .)
    OR              reduce using rule 102 (exp -> cte_char .)
    COMA            reduce using rule 102 (exp -> cte_char .)
    PYC             reduce using rule 102 (exp -> cte_char .)
    CODER           reduce using rule 102 (exp -> cte_char .)
    PDER            reduce using rule 102 (exp -> cte_char .)


state 99

    (119) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (121) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> ID . checarAtributo
    (124) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (75) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID . checarFuncion PIZQ PDER
    (79) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (82) definirInvocador -> .
    (128) checarAtributo -> .
    (81) checarFuncion -> .

    PUNTO           shift and go to state 123
    COIZQ           reduce using rule 82 (definirInvocador -> .)
    MAS             reduce using rule 128 (checarAtributo -> .)
    MENOS           reduce using rule 128 (checarAtributo -> .)
    POR             reduce using rule 128 (checarAtributo -> .)
    ENTRE           reduce using rule 128 (checarAtributo -> .)
    MOD             reduce using rule 128 (checarAtributo -> .)
    IGUALC          reduce using rule 128 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 128 (checarAtributo -> .)
    MAYOR           reduce using rule 128 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 128 (checarAtributo -> .)
    MENOR           reduce using rule 128 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 128 (checarAtributo -> .)
    AND             reduce using rule 128 (checarAtributo -> .)
    OR              reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    CODER           reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    PIZQ            reduce using rule 81 (checarFuncion -> .)

    definirInvocador               shift and go to state 121
    checarAtributo                 shift and go to state 122
    checarFuncion                  shift and go to state 124

state 100

    (113) cte_bool -> FALSE .

    MAS             reduce using rule 113 (cte_bool -> FALSE .)
    MENOS           reduce using rule 113 (cte_bool -> FALSE .)
    POR             reduce using rule 113 (cte_bool -> FALSE .)
    ENTRE           reduce using rule 113 (cte_bool -> FALSE .)
    MOD             reduce using rule 113 (cte_bool -> FALSE .)
    IGUALC          reduce using rule 113 (cte_bool -> FALSE .)
    NOTIGUAL        reduce using rule 113 (cte_bool -> FALSE .)
    MAYOR           reduce using rule 113 (cte_bool -> FALSE .)
    MAYORIGUAL      reduce using rule 113 (cte_bool -> FALSE .)
    MENOR           reduce using rule 113 (cte_bool -> FALSE .)
    MENORIGUAL      reduce using rule 113 (cte_bool -> FALSE .)
    AND             reduce using rule 113 (cte_bool -> FALSE .)
    OR              reduce using rule 113 (cte_bool -> FALSE .)
    COMA            reduce using rule 113 (cte_bool -> FALSE .)
    PYC             reduce using rule 113 (cte_bool -> FALSE .)
    CODER           reduce using rule 113 (cte_bool -> FALSE .)
    PDER            reduce using rule 113 (cte_bool -> FALSE .)


state 101

    (108) cte_str -> CTE_STR .

    CODER           reduce using rule 108 (cte_str -> CTE_STR .)
    MAS             reduce using rule 108 (cte_str -> CTE_STR .)
    MENOS           reduce using rule 108 (cte_str -> CTE_STR .)
    POR             reduce using rule 108 (cte_str -> CTE_STR .)
    ENTRE           reduce using rule 108 (cte_str -> CTE_STR .)
    MOD             reduce using rule 108 (cte_str -> CTE_STR .)
    IGUALC          reduce using rule 108 (cte_str -> CTE_STR .)
    NOTIGUAL        reduce using rule 108 (cte_str -> CTE_STR .)
    MAYOR           reduce using rule 108 (cte_str -> CTE_STR .)
    MAYORIGUAL      reduce using rule 108 (cte_str -> CTE_STR .)
    MENOR           reduce using rule 108 (cte_str -> CTE_STR .)
    MENORIGUAL      reduce using rule 108 (cte_str -> CTE_STR .)
    AND             reduce using rule 108 (cte_str -> CTE_STR .)
    OR              reduce using rule 108 (cte_str -> CTE_STR .)
    PDER            reduce using rule 108 (cte_str -> CTE_STR .)
    PYC             reduce using rule 108 (cte_str -> CTE_STR .)
    COMA            reduce using rule 108 (cte_str -> CTE_STR .)


state 102

    (125) atom -> THIS . PUNTO definirInvocador ID checarAtributo
    (126) atom -> THIS . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    PUNTO           shift and go to state 125


state 103

    (99) exp -> MENOS . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 126
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 104

    (31) ciclo_tipo -> ID declararVariable IGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    COMA            reduce using rule 31 (ciclo_tipo -> ID declararVariable IGUAL exp .)
    PYC             reduce using rule 31 (ciclo_tipo -> ID declararVariable IGUAL exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 105

    (98) exp -> NOT . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 140
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 106

    (28) ciclo_tipo -> ID declararVariable COIZQ exp . CODER
    (32) ciclo_tipo -> ID declararVariable COIZQ exp . CODER IGUAL exp
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 141
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 107

    (55) params_ciclo -> tipo . ID meterParametros
    (56) params_ciclo -> tipo . ID CODER COIZQ meterParametros

    ID              shift and go to state 142


state 108

    (53) params -> PIZQ params_ciclo . PDER
    (57) params_ciclo -> params_ciclo . COMA tipo ID meterParametros
    (58) params_ciclo -> params_ciclo . COMA tipo ID CODER COIZQ meterParametros

    PDER            shift and go to state 143
    COMA            shift and go to state 144


state 109

    (54) params -> PIZQ PDER .

    LLIZQ           reduce using rule 54 (params -> PIZQ PDER .)


state 110

    (60) cuerpo_func -> LLIZQ . ciclo_vars_func ciclo_estatuto LLDER
    (61) cuerpo_func -> LLIZQ . ciclo_vars_func LLDER
    (62) cuerpo_func -> LLIZQ . ciclo_estatuto LLDER
    (63) cuerpo_func -> LLIZQ . LLDER
    (64) ciclo_vars_func -> . vars
    (65) ciclo_vars_func -> . ciclo_vars_func vars
    (66) ciclo_estatuto -> . estatuto
    (67) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 155
    ID              shift and go to state 158
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    RETURN          shift and go to state 145
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    THIS            shift and go to state 102
    IF              shift and go to state 159

    vars                           shift and go to state 146
    var_op                         shift and go to state 32
    tipo                           shift and go to state 150
    estatuto                       shift and go to state 151
    ciclo_vars_func                shift and go to state 152
    condicion                      shift and go to state 153
    lectura                        shift and go to state 154
    return                         shift and go to state 149
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    asignacion                     shift and go to state 160
    ciclo_estatuto                 shift and go to state 161
    ciclo_cond                     shift and go to state 162
    while                          shift and go to state 163
    escritura                      shift and go to state 165

state 111

    (49) func -> acceso tipo ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)


state 112

    (50) func -> acceso WITHOUT ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)


state 113

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER . cuerpo_func
    (60) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (61) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (62) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (63) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 110

    cuerpo_func                    shift and go to state 166

state 114

    (37) ciclo_id -> ciclo_id COMA . ID declararVariable
    (38) ciclo_id -> ciclo_id COMA . ID declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA . ID declararVariable IGUAL atom limpiarInvocador

    ID              shift and go to state 167


state 115

    (35) ciclo_id -> ID declararVariable .
    (36) ciclo_id -> ID declararVariable . COIZQ exp CODER
    (39) ciclo_id -> ID declararVariable . IGUAL atom limpiarInvocador

    COMA            reduce using rule 35 (ciclo_id -> ID declararVariable .)
    PYC             reduce using rule 35 (ciclo_id -> ID declararVariable .)
    COIZQ           shift and go to state 169
    IGUAL           shift and go to state 168


state 116

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    atom                           shift and go to state 97
    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 170
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 117

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER IGUAL exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    atom                           shift and go to state 97
    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 171
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 118

    (100) exp -> PIZQ exp . PDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 172
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 119

    (107) exp -> llamada_func limpiarInvocador .

    MAS             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MENOS           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    POR             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    ENTRE           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MOD             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    IGUALC          reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    NOTIGUAL        reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MAYOR           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MAYORIGUAL      reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MENOR           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MENORIGUAL      reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    AND             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    OR              reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    COMA            reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    PYC             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    CODER           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    PDER            reduce using rule 107 (exp -> llamada_func limpiarInvocador .)


state 120

    (106) exp -> atom limpiarInvocador .

    MAS             reduce using rule 106 (exp -> atom limpiarInvocador .)
    MENOS           reduce using rule 106 (exp -> atom limpiarInvocador .)
    POR             reduce using rule 106 (exp -> atom limpiarInvocador .)
    ENTRE           reduce using rule 106 (exp -> atom limpiarInvocador .)
    MOD             reduce using rule 106 (exp -> atom limpiarInvocador .)
    IGUALC          reduce using rule 106 (exp -> atom limpiarInvocador .)
    NOTIGUAL        reduce using rule 106 (exp -> atom limpiarInvocador .)
    MAYOR           reduce using rule 106 (exp -> atom limpiarInvocador .)
    MAYORIGUAL      reduce using rule 106 (exp -> atom limpiarInvocador .)
    MENOR           reduce using rule 106 (exp -> atom limpiarInvocador .)
    MENORIGUAL      reduce using rule 106 (exp -> atom limpiarInvocador .)
    AND             reduce using rule 106 (exp -> atom limpiarInvocador .)
    OR              reduce using rule 106 (exp -> atom limpiarInvocador .)
    COMA            reduce using rule 106 (exp -> atom limpiarInvocador .)
    PYC             reduce using rule 106 (exp -> atom limpiarInvocador .)
    CODER           reduce using rule 106 (exp -> atom limpiarInvocador .)
    PDER            reduce using rule 106 (exp -> atom limpiarInvocador .)


state 121

    (121) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2
    (77) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    COIZQ           shift and go to state 173


state 122

    (123) atom -> ID checarAtributo .

    MAS             reduce using rule 123 (atom -> ID checarAtributo .)
    MENOS           reduce using rule 123 (atom -> ID checarAtributo .)
    POR             reduce using rule 123 (atom -> ID checarAtributo .)
    ENTRE           reduce using rule 123 (atom -> ID checarAtributo .)
    MOD             reduce using rule 123 (atom -> ID checarAtributo .)
    IGUALC          reduce using rule 123 (atom -> ID checarAtributo .)
    NOTIGUAL        reduce using rule 123 (atom -> ID checarAtributo .)
    MAYOR           reduce using rule 123 (atom -> ID checarAtributo .)
    MAYORIGUAL      reduce using rule 123 (atom -> ID checarAtributo .)
    MENOR           reduce using rule 123 (atom -> ID checarAtributo .)
    MENORIGUAL      reduce using rule 123 (atom -> ID checarAtributo .)
    AND             reduce using rule 123 (atom -> ID checarAtributo .)
    OR              reduce using rule 123 (atom -> ID checarAtributo .)
    COMA            reduce using rule 123 (atom -> ID checarAtributo .)
    PYC             reduce using rule 123 (atom -> ID checarAtributo .)
    CODER           reduce using rule 123 (atom -> ID checarAtributo .)
    PDER            reduce using rule 123 (atom -> ID checarAtributo .)
    IGUAL           reduce using rule 123 (atom -> ID checarAtributo .)


state 123

    (119) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (76) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ PDER
    (82) definirInvocador -> .

    ID              reduce using rule 82 (definirInvocador -> .)

    definirInvocador               shift and go to state 174

state 124

    (75) llamada_func -> ID checarFuncion . PIZQ exp_ciclo PDER
    (78) llamada_func -> ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 175


state 125

    (125) atom -> THIS PUNTO . definirInvocador ID checarAtributo
    (126) atom -> THIS PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (82) definirInvocador -> .

    ID              reduce using rule 82 (definirInvocador -> .)

    definirInvocador               shift and go to state 176

state 126

    (99) exp -> MENOS exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    MAS             reduce using rule 99 (exp -> MENOS exp .)
    MENOS           reduce using rule 99 (exp -> MENOS exp .)
    POR             reduce using rule 99 (exp -> MENOS exp .)
    ENTRE           reduce using rule 99 (exp -> MENOS exp .)
    MOD             reduce using rule 99 (exp -> MENOS exp .)
    IGUALC          reduce using rule 99 (exp -> MENOS exp .)
    NOTIGUAL        reduce using rule 99 (exp -> MENOS exp .)
    MAYOR           reduce using rule 99 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 99 (exp -> MENOS exp .)
    MENOR           reduce using rule 99 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 99 (exp -> MENOS exp .)
    AND             reduce using rule 99 (exp -> MENOS exp .)
    OR              reduce using rule 99 (exp -> MENOS exp .)
    COMA            reduce using rule 99 (exp -> MENOS exp .)
    PYC             reduce using rule 99 (exp -> MENOS exp .)
    CODER           reduce using rule 99 (exp -> MENOS exp .)
    PDER            reduce using rule 99 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 129 ]
  ! MENOS           [ shift and go to state 135 ]
  ! POR             [ shift and go to state 133 ]
  ! ENTRE           [ shift and go to state 131 ]
  ! MOD             [ shift and go to state 139 ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 127

    (96) exp -> exp AND . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 177
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 128

    (97) exp -> exp OR . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 178
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 129

    (85) exp -> exp MAS . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 179
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 130

    (91) exp -> exp NOTIGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 180
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 131

    (88) exp -> exp ENTRE . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 181
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 132

    (92) exp -> exp MAYOR . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 182
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 133

    (87) exp -> exp POR . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 183
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 134

    (94) exp -> exp MENOR . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 184
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 135

    (86) exp -> exp MENOS . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 185
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 136

    (93) exp -> exp MAYORIGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 186
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 137

    (95) exp -> exp MENORIGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 187
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 138

    (90) exp -> exp IGUALC . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 188
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 139

    (89) exp -> exp MOD . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 189
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 140

    (98) exp -> NOT exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    AND             reduce using rule 98 (exp -> NOT exp .)
    OR              reduce using rule 98 (exp -> NOT exp .)
    COMA            reduce using rule 98 (exp -> NOT exp .)
    PYC             reduce using rule 98 (exp -> NOT exp .)
    CODER           reduce using rule 98 (exp -> NOT exp .)
    PDER            reduce using rule 98 (exp -> NOT exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137

  ! MAS             [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MENOS           [ reduce using rule 98 (exp -> NOT exp .) ]
  ! POR             [ reduce using rule 98 (exp -> NOT exp .) ]
  ! ENTRE           [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MOD             [ reduce using rule 98 (exp -> NOT exp .) ]
  ! IGUALC          [ reduce using rule 98 (exp -> NOT exp .) ]
  ! NOTIGUAL        [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MAYOR           [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MENOR           [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MENORIGUAL      [ reduce using rule 98 (exp -> NOT exp .) ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 141

    (28) ciclo_tipo -> ID declararVariable COIZQ exp CODER .
    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 28 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 28 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 190


state 142

    (55) params_ciclo -> tipo ID . meterParametros
    (56) params_ciclo -> tipo ID . CODER COIZQ meterParametros
    (59) meterParametros -> .

    CODER           shift and go to state 191
    PDER            reduce using rule 59 (meterParametros -> .)
    COMA            reduce using rule 59 (meterParametros -> .)

    meterParametros                shift and go to state 192

state 143

    (53) params -> PIZQ params_ciclo PDER .

    LLIZQ           reduce using rule 53 (params -> PIZQ params_ciclo PDER .)


state 144

    (57) params_ciclo -> params_ciclo COMA . tipo ID meterParametros
    (58) params_ciclo -> params_ciclo COMA . tipo ID CODER COIZQ meterParametros
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 193

state 145

    (114) return -> RETURN . exp PYC
    (115) return -> RETURN . PYC
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PYC             shift and go to state 195
    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 194
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 146

    (64) ciclo_vars_func -> vars .

    LLDER           reduce using rule 64 (ciclo_vars_func -> vars .)
    ID              reduce using rule 64 (ciclo_vars_func -> vars .)
    WHILE           reduce using rule 64 (ciclo_vars_func -> vars .)
    OUTPUT          reduce using rule 64 (ciclo_vars_func -> vars .)
    INPUT           reduce using rule 64 (ciclo_vars_func -> vars .)
    RETURN          reduce using rule 64 (ciclo_vars_func -> vars .)
    NUMERAL         reduce using rule 64 (ciclo_vars_func -> vars .)
    REAL            reduce using rule 64 (ciclo_vars_func -> vars .)
    BOOL            reduce using rule 64 (ciclo_vars_func -> vars .)
    CHAR            reduce using rule 64 (ciclo_vars_func -> vars .)
    STRING          reduce using rule 64 (ciclo_vars_func -> vars .)
    THIS            reduce using rule 64 (ciclo_vars_func -> vars .)
    IF              reduce using rule 64 (ciclo_vars_func -> vars .)


state 147

    (118) asignacion -> atom . limpiarInvocador IGUAL exp PYC
    (11) limpiarInvocador -> .

    IGUAL           reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 196

state 148

    (116) while -> WHILE . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> WHILE . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 197


state 149

    (74) estatuto -> return .

    LLDER           reduce using rule 74 (estatuto -> return .)
    WHILE           reduce using rule 74 (estatuto -> return .)
    OUTPUT          reduce using rule 74 (estatuto -> return .)
    INPUT           reduce using rule 74 (estatuto -> return .)
    ID              reduce using rule 74 (estatuto -> return .)
    RETURN          reduce using rule 74 (estatuto -> return .)
    THIS            reduce using rule 74 (estatuto -> return .)
    IF              reduce using rule 74 (estatuto -> return .)


state 150

    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> . ID declararVariable IGUAL exp
    (32) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 198

    ciclo_tipo                     shift and go to state 50

state 151

    (66) ciclo_estatuto -> estatuto .

    LLDER           reduce using rule 66 (ciclo_estatuto -> estatuto .)
    WHILE           reduce using rule 66 (ciclo_estatuto -> estatuto .)
    OUTPUT          reduce using rule 66 (ciclo_estatuto -> estatuto .)
    INPUT           reduce using rule 66 (ciclo_estatuto -> estatuto .)
    ID              reduce using rule 66 (ciclo_estatuto -> estatuto .)
    RETURN          reduce using rule 66 (ciclo_estatuto -> estatuto .)
    THIS            reduce using rule 66 (ciclo_estatuto -> estatuto .)
    IF              reduce using rule 66 (ciclo_estatuto -> estatuto .)


state 152

    (60) cuerpo_func -> LLIZQ ciclo_vars_func . ciclo_estatuto LLDER
    (61) cuerpo_func -> LLIZQ ciclo_vars_func . LLDER
    (65) ciclo_vars_func -> ciclo_vars_func . vars
    (66) ciclo_estatuto -> . estatuto
    (67) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 200
    ID              shift and go to state 158
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    RETURN          shift and go to state 145
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    THIS            shift and go to state 102
    IF              shift and go to state 159

    vars                           shift and go to state 199
    var_op                         shift and go to state 32
    tipo                           shift and go to state 150
    estatuto                       shift and go to state 151
    condicion                      shift and go to state 153
    lectura                        shift and go to state 154
    return                         shift and go to state 149
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    asignacion                     shift and go to state 160
    ciclo_estatuto                 shift and go to state 201
    ciclo_cond                     shift and go to state 162
    while                          shift and go to state 163
    escritura                      shift and go to state 165

state 153

    (70) estatuto -> condicion .

    LLDER           reduce using rule 70 (estatuto -> condicion .)
    WHILE           reduce using rule 70 (estatuto -> condicion .)
    OUTPUT          reduce using rule 70 (estatuto -> condicion .)
    INPUT           reduce using rule 70 (estatuto -> condicion .)
    ID              reduce using rule 70 (estatuto -> condicion .)
    RETURN          reduce using rule 70 (estatuto -> condicion .)
    THIS            reduce using rule 70 (estatuto -> condicion .)
    IF              reduce using rule 70 (estatuto -> condicion .)


state 154

    (72) estatuto -> lectura .

    LLDER           reduce using rule 72 (estatuto -> lectura .)
    WHILE           reduce using rule 72 (estatuto -> lectura .)
    OUTPUT          reduce using rule 72 (estatuto -> lectura .)
    INPUT           reduce using rule 72 (estatuto -> lectura .)
    ID              reduce using rule 72 (estatuto -> lectura .)
    RETURN          reduce using rule 72 (estatuto -> lectura .)
    THIS            reduce using rule 72 (estatuto -> lectura .)
    IF              reduce using rule 72 (estatuto -> lectura .)


state 155

    (63) cuerpo_func -> LLIZQ LLDER .

    HIDDEN          reduce using rule 63 (cuerpo_func -> LLIZQ LLDER .)
    VISIBLE         reduce using rule 63 (cuerpo_func -> LLIZQ LLDER .)
    LLDER           reduce using rule 63 (cuerpo_func -> LLIZQ LLDER .)


state 156

    (136) lectura -> INPUT . PIZQ atom limpiarInvocador PDER PYC

    PIZQ            shift and go to state 202


state 157

    (73) estatuto -> llamada_func . limpiarInvocador PYC
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 203

state 158

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (75) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID . checarFuncion PIZQ PDER
    (79) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (119) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (121) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> ID . checarAtributo
    (124) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (26) revisarExistenciaClase -> .
    (81) checarFuncion -> .
    (82) definirInvocador -> .
    (128) checarAtributo -> .

    PUNTO           shift and go to state 205
    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)
    PIZQ            reduce using rule 81 (checarFuncion -> .)
    COIZQ           reduce using rule 82 (definirInvocador -> .)
    IGUAL           reduce using rule 128 (checarAtributo -> .)

    definirInvocador               shift and go to state 204
    checarAtributo                 shift and go to state 122
    checarFuncion                  shift and go to state 124
    revisarExistenciaClase         shift and go to state 54

state 159

    (132) ciclo_cond -> IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 206


state 160

    (69) estatuto -> asignacion .

    LLDER           reduce using rule 69 (estatuto -> asignacion .)
    WHILE           reduce using rule 69 (estatuto -> asignacion .)
    OUTPUT          reduce using rule 69 (estatuto -> asignacion .)
    INPUT           reduce using rule 69 (estatuto -> asignacion .)
    ID              reduce using rule 69 (estatuto -> asignacion .)
    RETURN          reduce using rule 69 (estatuto -> asignacion .)
    THIS            reduce using rule 69 (estatuto -> asignacion .)
    IF              reduce using rule 69 (estatuto -> asignacion .)


state 161

    (62) cuerpo_func -> LLIZQ ciclo_estatuto . LLDER
    (67) ciclo_estatuto -> ciclo_estatuto . estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 208
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    estatuto                       shift and go to state 207
    ciclo_cond                     shift and go to state 162
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    lectura                        shift and go to state 154
    escritura                      shift and go to state 165

state 162

    (129) condicion -> ciclo_cond . ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> ciclo_cond . ELSE LLIZQ LLDER
    (131) condicion -> ciclo_cond .
    (134) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ LLDER

    ELSE            shift and go to state 210
    LLDER           reduce using rule 131 (condicion -> ciclo_cond .)
    WHILE           reduce using rule 131 (condicion -> ciclo_cond .)
    OUTPUT          reduce using rule 131 (condicion -> ciclo_cond .)
    INPUT           reduce using rule 131 (condicion -> ciclo_cond .)
    ID              reduce using rule 131 (condicion -> ciclo_cond .)
    RETURN          reduce using rule 131 (condicion -> ciclo_cond .)
    THIS            reduce using rule 131 (condicion -> ciclo_cond .)
    IF              reduce using rule 131 (condicion -> ciclo_cond .)


state 163

    (68) estatuto -> while .

    LLDER           reduce using rule 68 (estatuto -> while .)
    WHILE           reduce using rule 68 (estatuto -> while .)
    OUTPUT          reduce using rule 68 (estatuto -> while .)
    INPUT           reduce using rule 68 (estatuto -> while .)
    ID              reduce using rule 68 (estatuto -> while .)
    RETURN          reduce using rule 68 (estatuto -> while .)
    THIS            reduce using rule 68 (estatuto -> while .)
    IF              reduce using rule 68 (estatuto -> while .)


state 164

    (137) escritura -> OUTPUT . PIZQ exp PDER PYC

    PIZQ            shift and go to state 211


state 165

    (71) estatuto -> escritura .

    LLDER           reduce using rule 71 (estatuto -> escritura .)
    WHILE           reduce using rule 71 (estatuto -> escritura .)
    OUTPUT          reduce using rule 71 (estatuto -> escritura .)
    INPUT           reduce using rule 71 (estatuto -> escritura .)
    ID              reduce using rule 71 (estatuto -> escritura .)
    RETURN          reduce using rule 71 (estatuto -> escritura .)
    THIS            reduce using rule 71 (estatuto -> escritura .)
    IF              reduce using rule 71 (estatuto -> escritura .)


state 166

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .

    LLDER           reduce using rule 52 (main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .)


state 167

    (37) ciclo_id -> ciclo_id COMA ID . declararVariable
    (38) ciclo_id -> ciclo_id COMA ID . declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA ID . declararVariable IGUAL atom limpiarInvocador
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 212

state 168

    (39) ciclo_id -> ID declararVariable IGUAL . atom limpiarInvocador
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 214
    THIS            shift and go to state 102

    atom                           shift and go to state 213

state 169

    (36) ciclo_id -> ID declararVariable COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 215
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 170

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    COMA            reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)
    PYC             reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 171

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER IGUAL exp
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 216
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 172

    (100) exp -> PIZQ exp PDER .

    MAS             reduce using rule 100 (exp -> PIZQ exp PDER .)
    MENOS           reduce using rule 100 (exp -> PIZQ exp PDER .)
    POR             reduce using rule 100 (exp -> PIZQ exp PDER .)
    ENTRE           reduce using rule 100 (exp -> PIZQ exp PDER .)
    MOD             reduce using rule 100 (exp -> PIZQ exp PDER .)
    IGUALC          reduce using rule 100 (exp -> PIZQ exp PDER .)
    NOTIGUAL        reduce using rule 100 (exp -> PIZQ exp PDER .)
    MAYOR           reduce using rule 100 (exp -> PIZQ exp PDER .)
    MAYORIGUAL      reduce using rule 100 (exp -> PIZQ exp PDER .)
    MENOR           reduce using rule 100 (exp -> PIZQ exp PDER .)
    MENORIGUAL      reduce using rule 100 (exp -> PIZQ exp PDER .)
    AND             reduce using rule 100 (exp -> PIZQ exp PDER .)
    OR              reduce using rule 100 (exp -> PIZQ exp PDER .)
    COMA            reduce using rule 100 (exp -> PIZQ exp PDER .)
    PYC             reduce using rule 100 (exp -> PIZQ exp PDER .)
    CODER           reduce using rule 100 (exp -> PIZQ exp PDER .)
    PDER            reduce using rule 100 (exp -> PIZQ exp PDER .)


state 173

    (121) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (77) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ PDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_str                        shift and go to state 95
    cte_bool                       shift and go to state 88
    cte_real                       shift and go to state 96
    exp                            shift and go to state 217
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 174

    (119) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (120) atom -> ID PUNTO definirInvocador . ID checarAtributo
    (76) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ PDER

    ID              shift and go to state 218


state 175

    (75) llamada_func -> ID checarFuncion PIZQ . exp_ciclo PDER
    (78) llamada_func -> ID checarFuncion PIZQ . PDER
    (83) exp_ciclo -> . exp
    (84) exp_ciclo -> . exp_ciclo COMA exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 219
    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    exp_ciclo                      shift and go to state 220
    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 221
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 176

    (125) atom -> THIS PUNTO definirInvocador . ID checarAtributo
    (126) atom -> THIS PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 222


state 177

    (96) exp -> exp AND exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    AND             reduce using rule 96 (exp -> exp AND exp .)
    OR              reduce using rule 96 (exp -> exp AND exp .)
    COMA            reduce using rule 96 (exp -> exp AND exp .)
    PYC             reduce using rule 96 (exp -> exp AND exp .)
    CODER           reduce using rule 96 (exp -> exp AND exp .)
    PDER            reduce using rule 96 (exp -> exp AND exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137

  ! MAS             [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MENOS           [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! POR             [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! ENTRE           [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MOD             [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! IGUALC          [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! NOTIGUAL        [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MAYOR           [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MAYORIGUAL      [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MENOR           [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MENORIGUAL      [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 178

    (97) exp -> exp OR exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    OR              reduce using rule 97 (exp -> exp OR exp .)
    COMA            reduce using rule 97 (exp -> exp OR exp .)
    PYC             reduce using rule 97 (exp -> exp OR exp .)
    CODER           reduce using rule 97 (exp -> exp OR exp .)
    PDER            reduce using rule 97 (exp -> exp OR exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127

  ! MAS             [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MENOS           [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! POR             [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! ENTRE           [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MOD             [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! IGUALC          [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! NOTIGUAL        [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MAYOR           [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MENOR           [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MENORIGUAL      [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! OR              [ shift and go to state 128 ]


state 179

    (85) exp -> exp MAS exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    MAS             reduce using rule 85 (exp -> exp MAS exp .)
    MENOS           reduce using rule 85 (exp -> exp MAS exp .)
    IGUALC          reduce using rule 85 (exp -> exp MAS exp .)
    NOTIGUAL        reduce using rule 85 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 85 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 85 (exp -> exp MAS exp .)
    MENOR           reduce using rule 85 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 85 (exp -> exp MAS exp .)
    AND             reduce using rule 85 (exp -> exp MAS exp .)
    OR              reduce using rule 85 (exp -> exp MAS exp .)
    COMA            reduce using rule 85 (exp -> exp MAS exp .)
    PYC             reduce using rule 85 (exp -> exp MAS exp .)
    CODER           reduce using rule 85 (exp -> exp MAS exp .)
    PDER            reduce using rule 85 (exp -> exp MAS exp .)
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139

  ! POR             [ reduce using rule 85 (exp -> exp MAS exp .) ]
  ! ENTRE           [ reduce using rule 85 (exp -> exp MAS exp .) ]
  ! MOD             [ reduce using rule 85 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 129 ]
  ! MENOS           [ shift and go to state 135 ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 180

    (91) exp -> exp NOTIGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    IGUALC          reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    NOTIGUAL        reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MAYOR           reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MAYORIGUAL      reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MENOR           reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MENORIGUAL      reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    AND             reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    OR              reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    COMA            reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    PYC             reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    CODER           reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    PDER            reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139

  ! MAS             [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! MENOS           [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! POR             [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! MOD             [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 181

    (88) exp -> exp ENTRE exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    MAS             reduce using rule 88 (exp -> exp ENTRE exp .)
    MENOS           reduce using rule 88 (exp -> exp ENTRE exp .)
    POR             reduce using rule 88 (exp -> exp ENTRE exp .)
    ENTRE           reduce using rule 88 (exp -> exp ENTRE exp .)
    MOD             reduce using rule 88 (exp -> exp ENTRE exp .)
    IGUALC          reduce using rule 88 (exp -> exp ENTRE exp .)
    NOTIGUAL        reduce using rule 88 (exp -> exp ENTRE exp .)
    MAYOR           reduce using rule 88 (exp -> exp ENTRE exp .)
    MAYORIGUAL      reduce using rule 88 (exp -> exp ENTRE exp .)
    MENOR           reduce using rule 88 (exp -> exp ENTRE exp .)
    MENORIGUAL      reduce using rule 88 (exp -> exp ENTRE exp .)
    AND             reduce using rule 88 (exp -> exp ENTRE exp .)
    OR              reduce using rule 88 (exp -> exp ENTRE exp .)
    COMA            reduce using rule 88 (exp -> exp ENTRE exp .)
    PYC             reduce using rule 88 (exp -> exp ENTRE exp .)
    CODER           reduce using rule 88 (exp -> exp ENTRE exp .)
    PDER            reduce using rule 88 (exp -> exp ENTRE exp .)

  ! MAS             [ shift and go to state 129 ]
  ! MENOS           [ shift and go to state 135 ]
  ! POR             [ shift and go to state 133 ]
  ! ENTRE           [ shift and go to state 131 ]
  ! MOD             [ shift and go to state 139 ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 182

    (92) exp -> exp MAYOR exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    IGUALC          reduce using rule 92 (exp -> exp MAYOR exp .)
    NOTIGUAL        reduce using rule 92 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 92 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 92 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 92 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 92 (exp -> exp MAYOR exp .)
    AND             reduce using rule 92 (exp -> exp MAYOR exp .)
    OR              reduce using rule 92 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 92 (exp -> exp MAYOR exp .)
    PYC             reduce using rule 92 (exp -> exp MAYOR exp .)
    CODER           reduce using rule 92 (exp -> exp MAYOR exp .)
    PDER            reduce using rule 92 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139

  ! MAS             [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! POR             [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! ENTRE           [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! MOD             [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 183

    (87) exp -> exp POR exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    MAS             reduce using rule 87 (exp -> exp POR exp .)
    MENOS           reduce using rule 87 (exp -> exp POR exp .)
    POR             reduce using rule 87 (exp -> exp POR exp .)
    ENTRE           reduce using rule 87 (exp -> exp POR exp .)
    MOD             reduce using rule 87 (exp -> exp POR exp .)
    IGUALC          reduce using rule 87 (exp -> exp POR exp .)
    NOTIGUAL        reduce using rule 87 (exp -> exp POR exp .)
    MAYOR           reduce using rule 87 (exp -> exp POR exp .)
    MAYORIGUAL      reduce using rule 87 (exp -> exp POR exp .)
    MENOR           reduce using rule 87 (exp -> exp POR exp .)
    MENORIGUAL      reduce using rule 87 (exp -> exp POR exp .)
    AND             reduce using rule 87 (exp -> exp POR exp .)
    OR              reduce using rule 87 (exp -> exp POR exp .)
    COMA            reduce using rule 87 (exp -> exp POR exp .)
    PYC             reduce using rule 87 (exp -> exp POR exp .)
    CODER           reduce using rule 87 (exp -> exp POR exp .)
    PDER            reduce using rule 87 (exp -> exp POR exp .)

  ! MAS             [ shift and go to state 129 ]
  ! MENOS           [ shift and go to state 135 ]
  ! POR             [ shift and go to state 133 ]
  ! ENTRE           [ shift and go to state 131 ]
  ! MOD             [ shift and go to state 139 ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 184

    (94) exp -> exp MENOR exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    IGUALC          reduce using rule 94 (exp -> exp MENOR exp .)
    NOTIGUAL        reduce using rule 94 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 94 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 94 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 94 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 94 (exp -> exp MENOR exp .)
    AND             reduce using rule 94 (exp -> exp MENOR exp .)
    OR              reduce using rule 94 (exp -> exp MENOR exp .)
    COMA            reduce using rule 94 (exp -> exp MENOR exp .)
    PYC             reduce using rule 94 (exp -> exp MENOR exp .)
    CODER           reduce using rule 94 (exp -> exp MENOR exp .)
    PDER            reduce using rule 94 (exp -> exp MENOR exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139

  ! MAS             [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! POR             [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! ENTRE           [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! MOD             [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 185

    (86) exp -> exp MENOS exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    MAS             reduce using rule 86 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 86 (exp -> exp MENOS exp .)
    IGUALC          reduce using rule 86 (exp -> exp MENOS exp .)
    NOTIGUAL        reduce using rule 86 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 86 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 86 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 86 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 86 (exp -> exp MENOS exp .)
    AND             reduce using rule 86 (exp -> exp MENOS exp .)
    OR              reduce using rule 86 (exp -> exp MENOS exp .)
    COMA            reduce using rule 86 (exp -> exp MENOS exp .)
    PYC             reduce using rule 86 (exp -> exp MENOS exp .)
    CODER           reduce using rule 86 (exp -> exp MENOS exp .)
    PDER            reduce using rule 86 (exp -> exp MENOS exp .)
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139

  ! POR             [ reduce using rule 86 (exp -> exp MENOS exp .) ]
  ! ENTRE           [ reduce using rule 86 (exp -> exp MENOS exp .) ]
  ! MOD             [ reduce using rule 86 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 129 ]
  ! MENOS           [ shift and go to state 135 ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 186

    (93) exp -> exp MAYORIGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    IGUALC          reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    NOTIGUAL        reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    AND             reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    OR              reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    PYC             reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    CODER           reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    PDER            reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139

  ! MAS             [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! POR             [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! MOD             [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 187

    (95) exp -> exp MENORIGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    IGUALC          reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    NOTIGUAL        reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    AND             reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    OR              reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    PYC             reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    CODER           reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    PDER            reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139

  ! MAS             [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! POR             [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! MOD             [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 188

    (90) exp -> exp IGUALC exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    IGUALC          reduce using rule 90 (exp -> exp IGUALC exp .)
    NOTIGUAL        reduce using rule 90 (exp -> exp IGUALC exp .)
    MAYOR           reduce using rule 90 (exp -> exp IGUALC exp .)
    MAYORIGUAL      reduce using rule 90 (exp -> exp IGUALC exp .)
    MENOR           reduce using rule 90 (exp -> exp IGUALC exp .)
    MENORIGUAL      reduce using rule 90 (exp -> exp IGUALC exp .)
    AND             reduce using rule 90 (exp -> exp IGUALC exp .)
    OR              reduce using rule 90 (exp -> exp IGUALC exp .)
    COMA            reduce using rule 90 (exp -> exp IGUALC exp .)
    PYC             reduce using rule 90 (exp -> exp IGUALC exp .)
    CODER           reduce using rule 90 (exp -> exp IGUALC exp .)
    PDER            reduce using rule 90 (exp -> exp IGUALC exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139

  ! MAS             [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! MENOS           [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! POR             [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! ENTRE           [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! MOD             [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 189

    (89) exp -> exp MOD exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    MAS             reduce using rule 89 (exp -> exp MOD exp .)
    MENOS           reduce using rule 89 (exp -> exp MOD exp .)
    POR             reduce using rule 89 (exp -> exp MOD exp .)
    ENTRE           reduce using rule 89 (exp -> exp MOD exp .)
    MOD             reduce using rule 89 (exp -> exp MOD exp .)
    IGUALC          reduce using rule 89 (exp -> exp MOD exp .)
    NOTIGUAL        reduce using rule 89 (exp -> exp MOD exp .)
    MAYOR           reduce using rule 89 (exp -> exp MOD exp .)
    MAYORIGUAL      reduce using rule 89 (exp -> exp MOD exp .)
    MENOR           reduce using rule 89 (exp -> exp MOD exp .)
    MENORIGUAL      reduce using rule 89 (exp -> exp MOD exp .)
    AND             reduce using rule 89 (exp -> exp MOD exp .)
    OR              reduce using rule 89 (exp -> exp MOD exp .)
    COMA            reduce using rule 89 (exp -> exp MOD exp .)
    PYC             reduce using rule 89 (exp -> exp MOD exp .)
    CODER           reduce using rule 89 (exp -> exp MOD exp .)
    PDER            reduce using rule 89 (exp -> exp MOD exp .)

  ! MAS             [ shift and go to state 129 ]
  ! MENOS           [ shift and go to state 135 ]
  ! POR             [ shift and go to state 133 ]
  ! ENTRE           [ shift and go to state 131 ]
  ! MOD             [ shift and go to state 139 ]
  ! IGUALC          [ shift and go to state 138 ]
  ! NOTIGUAL        [ shift and go to state 130 ]
  ! MAYOR           [ shift and go to state 132 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 137 ]
  ! AND             [ shift and go to state 127 ]
  ! OR              [ shift and go to state 128 ]


state 190

    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 223
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 191

    (56) params_ciclo -> tipo ID CODER . COIZQ meterParametros

    COIZQ           shift and go to state 224


state 192

    (55) params_ciclo -> tipo ID meterParametros .

    PDER            reduce using rule 55 (params_ciclo -> tipo ID meterParametros .)
    COMA            reduce using rule 55 (params_ciclo -> tipo ID meterParametros .)


state 193

    (57) params_ciclo -> params_ciclo COMA tipo . ID meterParametros
    (58) params_ciclo -> params_ciclo COMA tipo . ID CODER COIZQ meterParametros

    ID              shift and go to state 225


state 194

    (114) return -> RETURN exp . PYC
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PYC             shift and go to state 226
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 195

    (115) return -> RETURN PYC .

    LLDER           reduce using rule 115 (return -> RETURN PYC .)
    WHILE           reduce using rule 115 (return -> RETURN PYC .)
    OUTPUT          reduce using rule 115 (return -> RETURN PYC .)
    INPUT           reduce using rule 115 (return -> RETURN PYC .)
    ID              reduce using rule 115 (return -> RETURN PYC .)
    RETURN          reduce using rule 115 (return -> RETURN PYC .)
    THIS            reduce using rule 115 (return -> RETURN PYC .)
    IF              reduce using rule 115 (return -> RETURN PYC .)


state 196

    (118) asignacion -> atom limpiarInvocador . IGUAL exp PYC

    IGUAL           shift and go to state 227


state 197

    (116) while -> WHILE PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> WHILE PIZQ . exp PDER LLIZQ LLDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 228
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 198

    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> ID . declararVariable IGUAL exp
    (32) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 67

state 199

    (65) ciclo_vars_func -> ciclo_vars_func vars .

    LLDER           reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    ID              reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    WHILE           reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    OUTPUT          reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    INPUT           reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    RETURN          reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    NUMERAL         reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    REAL            reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    BOOL            reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    CHAR            reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    STRING          reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    THIS            reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)
    IF              reduce using rule 65 (ciclo_vars_func -> ciclo_vars_func vars .)


state 200

    (61) cuerpo_func -> LLIZQ ciclo_vars_func LLDER .

    HIDDEN          reduce using rule 61 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    VISIBLE         reduce using rule 61 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    LLDER           reduce using rule 61 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)


state 201

    (60) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto . LLDER
    (67) ciclo_estatuto -> ciclo_estatuto . estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 229
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    estatuto                       shift and go to state 207
    ciclo_cond                     shift and go to state 162
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    lectura                        shift and go to state 154
    escritura                      shift and go to state 165

state 202

    (136) lectura -> INPUT PIZQ . atom limpiarInvocador PDER PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 214
    THIS            shift and go to state 102

    atom                           shift and go to state 230

state 203

    (73) estatuto -> llamada_func limpiarInvocador . PYC

    PYC             shift and go to state 231


state 204

    (77) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (121) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2

    COIZQ           shift and go to state 232


state 205

    (76) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ PDER
    (119) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (82) definirInvocador -> .

    ID              reduce using rule 82 (definirInvocador -> .)

    definirInvocador               shift and go to state 233

state 206

    (132) ciclo_cond -> IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> IF PIZQ . exp PDER LLIZQ LLDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 234
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 207

    (67) ciclo_estatuto -> ciclo_estatuto estatuto .

    LLDER           reduce using rule 67 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    WHILE           reduce using rule 67 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    OUTPUT          reduce using rule 67 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    INPUT           reduce using rule 67 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    ID              reduce using rule 67 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    RETURN          reduce using rule 67 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    THIS            reduce using rule 67 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    IF              reduce using rule 67 (ciclo_estatuto -> ciclo_estatuto estatuto .)


state 208

    (62) cuerpo_func -> LLIZQ ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 62 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 62 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    LLDER           reduce using rule 62 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)


state 209

    (75) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID . checarFuncion PIZQ PDER
    (79) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (119) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (121) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> ID . checarAtributo
    (124) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (81) checarFuncion -> .
    (82) definirInvocador -> .
    (128) checarAtributo -> .

    PUNTO           shift and go to state 205
    PIZQ            reduce using rule 81 (checarFuncion -> .)
    COIZQ           reduce using rule 82 (definirInvocador -> .)
    IGUAL           reduce using rule 128 (checarAtributo -> .)

    definirInvocador               shift and go to state 204
    checarAtributo                 shift and go to state 122
    checarFuncion                  shift and go to state 124

state 210

    (129) condicion -> ciclo_cond ELSE . LLIZQ ciclo_estatuto LLDER
    (130) condicion -> ciclo_cond ELSE . LLIZQ LLDER
    (134) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ LLDER

    LLIZQ           shift and go to state 235
    IF              shift and go to state 236


state 211

    (137) escritura -> OUTPUT PIZQ . exp PDER PYC
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 237
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 212

    (37) ciclo_id -> ciclo_id COMA ID declararVariable .
    (38) ciclo_id -> ciclo_id COMA ID declararVariable . COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA ID declararVariable . IGUAL atom limpiarInvocador

    COMA            reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    PYC             reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    COIZQ           shift and go to state 239
    IGUAL           shift and go to state 238


state 213

    (39) ciclo_id -> ID declararVariable IGUAL atom . limpiarInvocador
    (11) limpiarInvocador -> .

    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 240

state 214

    (119) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (121) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> ID . checarAtributo
    (124) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (82) definirInvocador -> .
    (128) checarAtributo -> .

    PUNTO           shift and go to state 242
    COIZQ           reduce using rule 82 (definirInvocador -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)

    definirInvocador               shift and go to state 241
    checarAtributo                 shift and go to state 122

state 215

    (36) ciclo_id -> ID declararVariable COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 243
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 216

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 244


state 217

    (121) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2
    (77) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ PDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 245
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 218

    (119) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (120) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (76) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ PDER
    (128) checarAtributo -> .
    (81) checarFuncion -> .

    COIZQ           reduce using rule 128 (checarAtributo -> .)
    MAS             reduce using rule 128 (checarAtributo -> .)
    MENOS           reduce using rule 128 (checarAtributo -> .)
    POR             reduce using rule 128 (checarAtributo -> .)
    ENTRE           reduce using rule 128 (checarAtributo -> .)
    MOD             reduce using rule 128 (checarAtributo -> .)
    IGUALC          reduce using rule 128 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 128 (checarAtributo -> .)
    MAYOR           reduce using rule 128 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 128 (checarAtributo -> .)
    MENOR           reduce using rule 128 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 128 (checarAtributo -> .)
    AND             reduce using rule 128 (checarAtributo -> .)
    OR              reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    CODER           reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    PIZQ            reduce using rule 81 (checarFuncion -> .)

    checarFuncion                  shift and go to state 247
    checarAtributo                 shift and go to state 246

state 219

    (78) llamada_func -> ID checarFuncion PIZQ PDER .

    PYC             reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAS             reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 78 (llamada_func -> ID checarFuncion PIZQ PDER .)


state 220

    (75) llamada_func -> ID checarFuncion PIZQ exp_ciclo . PDER
    (84) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 249
    COMA            shift and go to state 248


state 221

    (83) exp_ciclo -> exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            reduce using rule 83 (exp_ciclo -> exp .)
    COMA            reduce using rule 83 (exp_ciclo -> exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 222

    (125) atom -> THIS PUNTO definirInvocador ID . checarAtributo
    (126) atom -> THIS PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (128) checarAtributo -> .

    COIZQ           reduce using rule 128 (checarAtributo -> .)
    MAS             reduce using rule 128 (checarAtributo -> .)
    MENOS           reduce using rule 128 (checarAtributo -> .)
    POR             reduce using rule 128 (checarAtributo -> .)
    ENTRE           reduce using rule 128 (checarAtributo -> .)
    MOD             reduce using rule 128 (checarAtributo -> .)
    IGUALC          reduce using rule 128 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 128 (checarAtributo -> .)
    MAYOR           reduce using rule 128 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 128 (checarAtributo -> .)
    MENOR           reduce using rule 128 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 128 (checarAtributo -> .)
    AND             reduce using rule 128 (checarAtributo -> .)
    OR              reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    CODER           reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    IGUAL           reduce using rule 128 (checarAtributo -> .)

    checarAtributo                 shift and go to state 250

state 223

    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    COMA            reduce using rule 32 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 32 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 224

    (56) params_ciclo -> tipo ID CODER COIZQ . meterParametros
    (59) meterParametros -> .

    PDER            reduce using rule 59 (meterParametros -> .)
    COMA            reduce using rule 59 (meterParametros -> .)

    meterParametros                shift and go to state 251

state 225

    (57) params_ciclo -> params_ciclo COMA tipo ID . meterParametros
    (58) params_ciclo -> params_ciclo COMA tipo ID . CODER COIZQ meterParametros
    (59) meterParametros -> .

    CODER           shift and go to state 252
    PDER            reduce using rule 59 (meterParametros -> .)
    COMA            reduce using rule 59 (meterParametros -> .)

    meterParametros                shift and go to state 253

state 226

    (114) return -> RETURN exp PYC .

    LLDER           reduce using rule 114 (return -> RETURN exp PYC .)
    WHILE           reduce using rule 114 (return -> RETURN exp PYC .)
    OUTPUT          reduce using rule 114 (return -> RETURN exp PYC .)
    INPUT           reduce using rule 114 (return -> RETURN exp PYC .)
    ID              reduce using rule 114 (return -> RETURN exp PYC .)
    RETURN          reduce using rule 114 (return -> RETURN exp PYC .)
    THIS            reduce using rule 114 (return -> RETURN exp PYC .)
    IF              reduce using rule 114 (return -> RETURN exp PYC .)


state 227

    (118) asignacion -> atom limpiarInvocador IGUAL . exp PYC
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    exp                            shift and go to state 254
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90
    cte_real                       shift and go to state 96

state 228

    (116) while -> WHILE PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> WHILE PIZQ exp . PDER LLIZQ LLDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 255
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 229

    (60) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    LLDER           reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)


state 230

    (136) lectura -> INPUT PIZQ atom . limpiarInvocador PDER PYC
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 256

state 231

    (73) estatuto -> llamada_func limpiarInvocador PYC .

    LLDER           reduce using rule 73 (estatuto -> llamada_func limpiarInvocador PYC .)
    WHILE           reduce using rule 73 (estatuto -> llamada_func limpiarInvocador PYC .)
    OUTPUT          reduce using rule 73 (estatuto -> llamada_func limpiarInvocador PYC .)
    INPUT           reduce using rule 73 (estatuto -> llamada_func limpiarInvocador PYC .)
    ID              reduce using rule 73 (estatuto -> llamada_func limpiarInvocador PYC .)
    RETURN          reduce using rule 73 (estatuto -> llamada_func limpiarInvocador PYC .)
    THIS            reduce using rule 73 (estatuto -> llamada_func limpiarInvocador PYC .)
    IF              reduce using rule 73 (estatuto -> llamada_func limpiarInvocador PYC .)


state 232

    (77) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ PDER
    (121) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_str                        shift and go to state 95
    cte_bool                       shift and go to state 88
    cte_real                       shift and go to state 96
    exp                            shift and go to state 257
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 233

    (76) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ PDER
    (119) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (120) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 258


state 234

    (132) ciclo_cond -> IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> IF PIZQ exp . PDER LLIZQ LLDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 259
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 235

    (129) condicion -> ciclo_cond ELSE LLIZQ . ciclo_estatuto LLDER
    (130) condicion -> ciclo_cond ELSE LLIZQ . LLDER
    (66) ciclo_estatuto -> . estatuto
    (67) ciclo_estatuto -> . ciclo_estatuto estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 260
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    ciclo_estatuto                 shift and go to state 261
    estatuto                       shift and go to state 151
    lectura                        shift and go to state 154
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    ciclo_cond                     shift and go to state 162
    escritura                      shift and go to state 165

state 236

    (134) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 262


state 237

    (137) escritura -> OUTPUT PIZQ exp . PDER PYC
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 263
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 238

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL . atom limpiarInvocador
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 214
    THIS            shift and go to state 102

    atom                           shift and go to state 264

state 239

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 265
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 240

    (39) ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .

    COMA            reduce using rule 39 (ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .)
    PYC             reduce using rule 39 (ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .)


state 241

    (121) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2

    COIZQ           shift and go to state 266


state 242

    (119) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (82) definirInvocador -> .

    ID              reduce using rule 82 (definirInvocador -> .)

    definirInvocador               shift and go to state 267

state 243

    (36) ciclo_id -> ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 36 (ciclo_id -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 36 (ciclo_id -> ID declararVariable COIZQ exp CODER .)


state 244

    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    atom                           shift and go to state 97
    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 268
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 245

    (121) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (77) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ PDER
    (127) checarAtributo2 -> .

    PUNTO           shift and go to state 270
    MAS             reduce using rule 127 (checarAtributo2 -> .)
    MENOS           reduce using rule 127 (checarAtributo2 -> .)
    POR             reduce using rule 127 (checarAtributo2 -> .)
    ENTRE           reduce using rule 127 (checarAtributo2 -> .)
    MOD             reduce using rule 127 (checarAtributo2 -> .)
    IGUALC          reduce using rule 127 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 127 (checarAtributo2 -> .)
    MAYOR           reduce using rule 127 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 127 (checarAtributo2 -> .)
    MENOR           reduce using rule 127 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 127 (checarAtributo2 -> .)
    AND             reduce using rule 127 (checarAtributo2 -> .)
    OR              reduce using rule 127 (checarAtributo2 -> .)
    COMA            reduce using rule 127 (checarAtributo2 -> .)
    PYC             reduce using rule 127 (checarAtributo2 -> .)
    CODER           reduce using rule 127 (checarAtributo2 -> .)
    PDER            reduce using rule 127 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 269

state 246

    (119) atom -> ID PUNTO definirInvocador ID checarAtributo . COIZQ exp CODER
    (120) atom -> ID PUNTO definirInvocador ID checarAtributo .

    COIZQ           shift and go to state 271
    MAS             reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUAL           reduce using rule 120 (atom -> ID PUNTO definirInvocador ID checarAtributo .)


state 247

    (76) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . PIZQ exp_ciclo PDER
    (79) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 272


state 248

    (84) exp_ciclo -> exp_ciclo COMA . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 273
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 249

    (75) llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .

    PYC             reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAS             reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 75 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)


state 250

    (125) atom -> THIS PUNTO definirInvocador ID checarAtributo .
    (126) atom -> THIS PUNTO definirInvocador ID checarAtributo . COIZQ exp CODER

    MAS             reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUAL           reduce using rule 125 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COIZQ           shift and go to state 274


state 251

    (56) params_ciclo -> tipo ID CODER COIZQ meterParametros .

    PDER            reduce using rule 56 (params_ciclo -> tipo ID CODER COIZQ meterParametros .)
    COMA            reduce using rule 56 (params_ciclo -> tipo ID CODER COIZQ meterParametros .)


state 252

    (58) params_ciclo -> params_ciclo COMA tipo ID CODER . COIZQ meterParametros

    COIZQ           shift and go to state 275


state 253

    (57) params_ciclo -> params_ciclo COMA tipo ID meterParametros .

    PDER            reduce using rule 57 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)
    COMA            reduce using rule 57 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)


state 254

    (118) asignacion -> atom limpiarInvocador IGUAL exp . PYC
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PYC             shift and go to state 276
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 255

    (116) while -> WHILE PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (117) while -> WHILE PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 277


state 256

    (136) lectura -> INPUT PIZQ atom limpiarInvocador . PDER PYC

    PDER            shift and go to state 278


state 257

    (77) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ PDER
    (121) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 279
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 258

    (76) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ PDER
    (119) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (120) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (81) checarFuncion -> .
    (128) checarAtributo -> .

    PIZQ            reduce using rule 81 (checarFuncion -> .)
    COIZQ           reduce using rule 128 (checarAtributo -> .)
    IGUAL           reduce using rule 128 (checarAtributo -> .)

    checarFuncion                  shift and go to state 247
    checarAtributo                 shift and go to state 246

state 259

    (132) ciclo_cond -> IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 280


state 260

    (130) condicion -> ciclo_cond ELSE LLIZQ LLDER .

    LLDER           reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    WHILE           reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    OUTPUT          reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    INPUT           reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    ID              reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    RETURN          reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    THIS            reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    IF              reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)


state 261

    (129) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto . LLDER
    (67) ciclo_estatuto -> ciclo_estatuto . estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 281
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    estatuto                       shift and go to state 207
    lectura                        shift and go to state 154
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    ciclo_cond                     shift and go to state 162
    escritura                      shift and go to state 165

state 262

    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ LLDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 282
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 263

    (137) escritura -> OUTPUT PIZQ exp PDER . PYC

    PYC             shift and go to state 283


state 264

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom . limpiarInvocador
    (11) limpiarInvocador -> .

    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 284

state 265

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 285
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 266

    (121) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 286
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 267

    (119) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (120) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 287


state 268

    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    COMA            reduce using rule 34 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 34 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 269

    (124) atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .

    MAS             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENOS           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    POR             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    ENTRE           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MOD             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    IGUALC          reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    NOTIGUAL        reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAYOR           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAYORIGUAL      reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENOR           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENORIGUAL      reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    AND             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    OR              reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    COMA            reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    PYC             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    CODER           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    PDER            reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    IGUAL           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)


state 270

    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo
    (77) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ PDER

    ID              shift and go to state 288


state 271

    (119) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 289
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 272

    (76) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ . exp_ciclo PDER
    (79) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ . PDER
    (83) exp_ciclo -> . exp
    (84) exp_ciclo -> . exp_ciclo COMA exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 290
    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    exp_ciclo                      shift and go to state 291
    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 221
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 273

    (84) exp_ciclo -> exp_ciclo COMA exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            reduce using rule 84 (exp_ciclo -> exp_ciclo COMA exp .)
    COMA            reduce using rule 84 (exp_ciclo -> exp_ciclo COMA exp .)
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 274

    (126) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 292
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 275

    (58) params_ciclo -> params_ciclo COMA tipo ID CODER COIZQ . meterParametros
    (59) meterParametros -> .

    PDER            reduce using rule 59 (meterParametros -> .)
    COMA            reduce using rule 59 (meterParametros -> .)

    meterParametros                shift and go to state 293

state 276

    (118) asignacion -> atom limpiarInvocador IGUAL exp PYC .

    LLDER           reduce using rule 118 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    WHILE           reduce using rule 118 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    OUTPUT          reduce using rule 118 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    INPUT           reduce using rule 118 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    ID              reduce using rule 118 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    RETURN          reduce using rule 118 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    THIS            reduce using rule 118 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    IF              reduce using rule 118 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)


state 277

    (116) while -> WHILE PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (117) while -> WHILE PIZQ exp PDER LLIZQ . LLDER
    (66) ciclo_estatuto -> . estatuto
    (67) ciclo_estatuto -> . ciclo_estatuto estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 294
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    ciclo_estatuto                 shift and go to state 295
    estatuto                       shift and go to state 151
    ciclo_cond                     shift and go to state 162
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    lectura                        shift and go to state 154
    escritura                      shift and go to state 165

state 278

    (136) lectura -> INPUT PIZQ atom limpiarInvocador PDER . PYC

    PYC             shift and go to state 296


state 279

    (77) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ PDER
    (121) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (127) checarAtributo2 -> .

    PUNTO           shift and go to state 297
    IGUAL           reduce using rule 127 (checarAtributo2 -> .)
    CODER           reduce using rule 127 (checarAtributo2 -> .)
    MAS             reduce using rule 127 (checarAtributo2 -> .)
    MENOS           reduce using rule 127 (checarAtributo2 -> .)
    POR             reduce using rule 127 (checarAtributo2 -> .)
    ENTRE           reduce using rule 127 (checarAtributo2 -> .)
    MOD             reduce using rule 127 (checarAtributo2 -> .)
    IGUALC          reduce using rule 127 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 127 (checarAtributo2 -> .)
    MAYOR           reduce using rule 127 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 127 (checarAtributo2 -> .)
    MENOR           reduce using rule 127 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 127 (checarAtributo2 -> .)
    AND             reduce using rule 127 (checarAtributo2 -> .)
    OR              reduce using rule 127 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 269

state 280

    (132) ciclo_cond -> IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (133) ciclo_cond -> IF PIZQ exp PDER LLIZQ . LLDER
    (66) ciclo_estatuto -> . estatuto
    (67) ciclo_estatuto -> . ciclo_estatuto estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 298
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    ciclo_estatuto                 shift and go to state 299
    estatuto                       shift and go to state 151
    ciclo_cond                     shift and go to state 162
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    lectura                        shift and go to state 154
    escritura                      shift and go to state 165

state 281

    (129) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)


state 282

    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ LLDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 300
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 283

    (137) escritura -> OUTPUT PIZQ exp PDER PYC .

    LLDER           reduce using rule 137 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    WHILE           reduce using rule 137 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    OUTPUT          reduce using rule 137 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    INPUT           reduce using rule 137 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    ID              reduce using rule 137 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    RETURN          reduce using rule 137 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    THIS            reduce using rule 137 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    IF              reduce using rule 137 (escritura -> OUTPUT PIZQ exp PDER PYC .)


state 284

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .

    COMA            reduce using rule 40 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .)
    PYC             reduce using rule 40 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .)


state 285

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 38 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 38 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)


state 286

    (121) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 301
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 287

    (119) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (120) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (128) checarAtributo -> .

    COIZQ           reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)

    checarAtributo                 shift and go to state 246

state 288

    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (77) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ PDER
    (128) checarAtributo -> .
    (81) checarFuncion -> .

    COIZQ           reduce using rule 128 (checarAtributo -> .)
    MAS             reduce using rule 128 (checarAtributo -> .)
    MENOS           reduce using rule 128 (checarAtributo -> .)
    POR             reduce using rule 128 (checarAtributo -> .)
    ENTRE           reduce using rule 128 (checarAtributo -> .)
    MOD             reduce using rule 128 (checarAtributo -> .)
    IGUALC          reduce using rule 128 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 128 (checarAtributo -> .)
    MAYOR           reduce using rule 128 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 128 (checarAtributo -> .)
    MENOR           reduce using rule 128 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 128 (checarAtributo -> .)
    AND             reduce using rule 128 (checarAtributo -> .)
    OR              reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    CODER           reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    PIZQ            reduce using rule 81 (checarFuncion -> .)

    checarFuncion                  shift and go to state 303
    checarAtributo                 shift and go to state 302

state 289

    (119) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 304
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 290

    (79) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .

    PYC             reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAS             reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 79 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)


state 291

    (76) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo . PDER
    (84) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 305
    COMA            shift and go to state 248


state 292

    (126) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 306
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 293

    (58) params_ciclo -> params_ciclo COMA tipo ID CODER COIZQ meterParametros .

    PDER            reduce using rule 58 (params_ciclo -> params_ciclo COMA tipo ID CODER COIZQ meterParametros .)
    COMA            reduce using rule 58 (params_ciclo -> params_ciclo COMA tipo ID CODER COIZQ meterParametros .)


state 294

    (117) while -> WHILE PIZQ exp PDER LLIZQ LLDER .

    LLDER           reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    WHILE           reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    OUTPUT          reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    INPUT           reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    ID              reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    RETURN          reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    THIS            reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    IF              reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)


state 295

    (116) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (67) ciclo_estatuto -> ciclo_estatuto . estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 307
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    estatuto                       shift and go to state 207
    ciclo_cond                     shift and go to state 162
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    lectura                        shift and go to state 154
    escritura                      shift and go to state 165

state 296

    (136) lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .

    LLDER           reduce using rule 136 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    WHILE           reduce using rule 136 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    OUTPUT          reduce using rule 136 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    INPUT           reduce using rule 136 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    ID              reduce using rule 136 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    RETURN          reduce using rule 136 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    THIS            reduce using rule 136 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    IF              reduce using rule 136 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)


state 297

    (77) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ PDER
    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo

    ID              shift and go to state 308


state 298

    (133) ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)
    LLDER           reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)
    WHILE           reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)
    OUTPUT          reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)
    INPUT           reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)
    ID              reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)
    RETURN          reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)
    THIS            reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)
    IF              reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)


state 299

    (132) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (67) ciclo_estatuto -> ciclo_estatuto . estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 309
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    estatuto                       shift and go to state 207
    ciclo_cond                     shift and go to state 162
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    lectura                        shift and go to state 154
    escritura                      shift and go to state 165

state 300

    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 310


state 301

    (121) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (124) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (127) checarAtributo2 -> .

    PUNTO           shift and go to state 311
    COMA            reduce using rule 127 (checarAtributo2 -> .)
    PYC             reduce using rule 127 (checarAtributo2 -> .)
    PDER            reduce using rule 127 (checarAtributo2 -> .)
    CODER           reduce using rule 127 (checarAtributo2 -> .)
    MAS             reduce using rule 127 (checarAtributo2 -> .)
    MENOS           reduce using rule 127 (checarAtributo2 -> .)
    POR             reduce using rule 127 (checarAtributo2 -> .)
    ENTRE           reduce using rule 127 (checarAtributo2 -> .)
    MOD             reduce using rule 127 (checarAtributo2 -> .)
    IGUALC          reduce using rule 127 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 127 (checarAtributo2 -> .)
    MAYOR           reduce using rule 127 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 127 (checarAtributo2 -> .)
    MENOR           reduce using rule 127 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 127 (checarAtributo2 -> .)
    AND             reduce using rule 127 (checarAtributo2 -> .)
    OR              reduce using rule 127 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 269

state 302

    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo . COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .

    COIZQ           shift and go to state 312
    MAS             reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENOS           reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    POR             reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    ENTRE           reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MOD             reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    IGUALC          reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    NOTIGUAL        reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAYOR           reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAYORIGUAL      reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENOR           reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENORIGUAL      reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    AND             reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    OR              reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    COMA            reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    PYC             reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    CODER           reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    PDER            reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    IGUAL           reduce using rule 122 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)


state 303

    (77) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion . PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 313


state 304

    (119) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .

    MAS             reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUAL           reduce using rule 119 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)


state 305

    (76) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .

    PYC             reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAS             reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 76 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)


state 306

    (126) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .

    MAS             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUAL           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)


state 307

    (116) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 308

    (77) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ PDER
    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (81) checarFuncion -> .
    (128) checarAtributo -> .

    PIZQ            reduce using rule 81 (checarFuncion -> .)
    COIZQ           reduce using rule 128 (checarAtributo -> .)
    IGUAL           reduce using rule 128 (checarAtributo -> .)
    CODER           reduce using rule 128 (checarAtributo -> .)
    MAS             reduce using rule 128 (checarAtributo -> .)
    MENOS           reduce using rule 128 (checarAtributo -> .)
    POR             reduce using rule 128 (checarAtributo -> .)
    ENTRE           reduce using rule 128 (checarAtributo -> .)
    MOD             reduce using rule 128 (checarAtributo -> .)
    IGUALC          reduce using rule 128 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 128 (checarAtributo -> .)
    MAYOR           reduce using rule 128 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 128 (checarAtributo -> .)
    MENOR           reduce using rule 128 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 128 (checarAtributo -> .)
    AND             reduce using rule 128 (checarAtributo -> .)
    OR              reduce using rule 128 (checarAtributo -> .)

    checarFuncion                  shift and go to state 303
    checarAtributo                 shift and go to state 302

state 309

    (132) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    LLDER           reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 310

    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . LLDER
    (66) ciclo_estatuto -> . estatuto
    (67) ciclo_estatuto -> . ciclo_estatuto estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 314
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    ciclo_estatuto                 shift and go to state 315
    estatuto                       shift and go to state 151
    lectura                        shift and go to state 154
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    ciclo_cond                     shift and go to state 162
    escritura                      shift and go to state 165

state 311

    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo

    ID              shift and go to state 316


state 312

    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 317
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 313

    (77) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ . exp_ciclo PDER
    (80) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ . PDER
    (83) exp_ciclo -> . exp
    (84) exp_ciclo -> . exp_ciclo COMA exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . cte_str
    (102) exp -> . cte_char
    (103) exp -> . cte_numeral
    (104) exp -> . cte_real
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (108) cte_str -> . CTE_STR
    (109) cte_char -> . CTE_CHAR
    (110) cte_numeral -> . CTE_NUMERAL
    (111) cte_real -> . CTE_REAL
    (112) cte_bool -> . TRUE
    (113) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 318
    NOT             shift and go to state 105
    MENOS           shift and go to state 103
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 101
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 89
    FALSE           shift and go to state 100
    ID              shift and go to state 99
    THIS            shift and go to state 102

    exp_ciclo                      shift and go to state 319
    cte_bool                       shift and go to state 88
    cte_str                        shift and go to state 95
    cte_real                       shift and go to state 96
    exp                            shift and go to state 221
    atom                           shift and go to state 97
    cte_char                       shift and go to state 98
    llamada_func                   shift and go to state 92
    cte_numeral                    shift and go to state 90

state 314

    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)
    LLDER           reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)
    WHILE           reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)
    OUTPUT          reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)
    INPUT           reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)
    ID              reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)
    RETURN          reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)
    THIS            reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)
    IF              reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)


state 315

    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (67) ciclo_estatuto -> ciclo_estatuto . estatuto
    (68) estatuto -> . while
    (69) estatuto -> . asignacion
    (70) estatuto -> . condicion
    (71) estatuto -> . escritura
    (72) estatuto -> . lectura
    (73) estatuto -> . llamada_func limpiarInvocador PYC
    (74) estatuto -> . return
    (116) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (117) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (118) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (131) condicion -> . ciclo_cond
    (137) escritura -> . OUTPUT PIZQ exp PDER PYC
    (136) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (75) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> . ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (80) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (114) return -> . RETURN exp PYC
    (115) return -> . RETURN PYC
    (119) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (120) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (121) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (123) atom -> . ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (125) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 320
    WHILE           shift and go to state 148
    OUTPUT          shift and go to state 164
    INPUT           shift and go to state 156
    ID              shift and go to state 209
    RETURN          shift and go to state 145
    THIS            shift and go to state 102
    IF              shift and go to state 159

    return                         shift and go to state 149
    asignacion                     shift and go to state 160
    estatuto                       shift and go to state 207
    lectura                        shift and go to state 154
    while                          shift and go to state 163
    condicion                      shift and go to state 153
    atom                           shift and go to state 147
    llamada_func                   shift and go to state 157
    ciclo_cond                     shift and go to state 162
    escritura                      shift and go to state 165

state 316

    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (122) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (128) checarAtributo -> .

    COIZQ           reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    CODER           reduce using rule 128 (checarAtributo -> .)
    MAS             reduce using rule 128 (checarAtributo -> .)
    MENOS           reduce using rule 128 (checarAtributo -> .)
    POR             reduce using rule 128 (checarAtributo -> .)
    ENTRE           reduce using rule 128 (checarAtributo -> .)
    MOD             reduce using rule 128 (checarAtributo -> .)
    IGUALC          reduce using rule 128 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 128 (checarAtributo -> .)
    MAYOR           reduce using rule 128 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 128 (checarAtributo -> .)
    MENOR           reduce using rule 128 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 128 (checarAtributo -> .)
    AND             reduce using rule 128 (checarAtributo -> .)
    OR              reduce using rule 128 (checarAtributo -> .)

    checarAtributo                 shift and go to state 302

state 317

    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 321
    MAS             shift and go to state 129
    MENOS           shift and go to state 135
    POR             shift and go to state 133
    ENTRE           shift and go to state 131
    MOD             shift and go to state 139
    IGUALC          shift and go to state 138
    NOTIGUAL        shift and go to state 130
    MAYOR           shift and go to state 132
    MAYORIGUAL      shift and go to state 136
    MENOR           shift and go to state 134
    MENORIGUAL      shift and go to state 137
    AND             shift and go to state 127
    OR              shift and go to state 128


state 318

    (80) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .

    PYC             reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAS             reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 80 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)


state 319

    (77) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo . PDER
    (84) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 322
    COMA            shift and go to state 248


state 320

    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    LLDER           reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 321

    (121) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .

    MAS             reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    IGUAL           reduce using rule 121 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)


state 322

    (77) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .

    PYC             reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAS             reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 77 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)

