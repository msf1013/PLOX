Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ciclo_clase clase_main
Rule 2     programa -> clase_main
Rule 3     ciclo_clase -> clase
Rule 4     ciclo_clase -> ciclo_clase clase
Rule 5     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
Rule 6     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
Rule 7     clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
Rule 8     clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual
Rule 9     declararClase -> <empty>
Rule 10    limpiarMetodoActual -> <empty>
Rule 11    herencia -> empty
Rule 12    herencia -> UNDER ID agregaAncestro
Rule 13    agregaAncestro -> <empty>
Rule 14    ciclo_vars -> acceso vars
Rule 15    ciclo_vars -> ciclo_vars acceso vars
Rule 16    ciclo_func -> func
Rule 17    ciclo_func -> ciclo_func func
Rule 18    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
Rule 19    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
Rule 20    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
Rule 21    clase_main -> CLASS MAIN declararClase LLIZQ main LLDER
Rule 22    vars -> var_op PYC
Rule 23    var_op -> tipo ciclo_tipo
Rule 24    var_op -> ID revisarExistenciaClase ciclo_id
Rule 25    revisarExistenciaClase -> <empty>
Rule 26    ciclo_tipo -> ID declararVariable
Rule 27    ciclo_tipo -> ID declararVariable COIZQ exp CODER
Rule 28    ciclo_tipo -> ciclo_tipo COMA ID declararVariable
Rule 29    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER
Rule 30    ciclo_tipo -> ID declararVariable IGUAL exp
Rule 31    ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp
Rule 32    ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp
Rule 33    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp
Rule 34    ciclo_id -> ID declararVariable
Rule 35    ciclo_id -> ID declararVariable COIZQ exp CODER
Rule 36    ciclo_id -> ciclo_id COMA ID declararVariable
Rule 37    ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER
Rule 38    ciclo_id -> ID declararVariable IGUAL atom
Rule 39    ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom
Rule 40    declararVariable -> <empty>
Rule 41    tipo -> NUMERAL
Rule 42    tipo -> REAL
Rule 43    tipo -> BOOL
Rule 44    tipo -> CHAR
Rule 45    tipo -> STRING
Rule 46    acceso -> HIDDEN
Rule 47    acceso -> VISIBLE
Rule 48    func -> acceso tipo ID declararMetodo params cuerpo_func
Rule 49    func -> acceso WITHOUT ID declararMetodo params cuerpo_func
Rule 50    declararMetodo -> <empty>
Rule 51    main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
Rule 52    params -> PIZQ params_ciclo PDER
Rule 53    params -> PIZQ PDER
Rule 54    params_ciclo -> tipo ID meterParametros
Rule 55    params_ciclo -> params_ciclo COMA tipo ID meterParametros
Rule 56    meterParametros -> <empty>
Rule 57    cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER
Rule 58    cuerpo_func -> LLIZQ ciclo_vars_func LLDER
Rule 59    cuerpo_func -> LLIZQ ciclo_estatuto LLDER
Rule 60    cuerpo_func -> LLIZQ LLDER
Rule 61    ciclo_vars_func -> vars
Rule 62    ciclo_vars_func -> ciclo_vars_func vars
Rule 63    ciclo_estatuto -> estatuto
Rule 64    ciclo_estatuto -> ciclo_estatuto estatuto
Rule 65    estatuto -> while
Rule 66    estatuto -> asignacion
Rule 67    estatuto -> condicion
Rule 68    estatuto -> escritura
Rule 69    estatuto -> lectura
Rule 70    estatuto -> llamada_func PYC
Rule 71    estatuto -> return
Rule 72    llamada_func -> ID PIZQ exp_ciclo PDER
Rule 73    llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER
Rule 74    llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER
Rule 75    llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
Rule 76    llamada_func -> ID PIZQ PDER
Rule 77    llamada_func -> THIS PUNTO ID PIZQ PDER
Rule 78    llamada_func -> ID PUNTO ID PIZQ PDER
Rule 79    llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER
Rule 80    exp_ciclo -> exp
Rule 81    exp_ciclo -> exp_ciclo COMA exp
Rule 82    cte_bool -> TRUE
Rule 83    cte_bool -> FALSE
Rule 84    exp -> opciones ope exp
Rule 85    exp -> opciones
Rule 86    exp -> PIZQ exp PDER
Rule 87    exp -> PIZQ exp PDER ope exp
Rule 88    exp -> MENOS PIZQ exp PDER ope exp
Rule 89    exp -> NOT exp
Rule 90    exp -> MENOS PIZQ exp PDER
Rule 91    opciones -> CTE_STR
Rule 92    opciones -> CTE_CHAR
Rule 93    opciones -> CTE_NUMERAL
Rule 94    opciones -> CTE_REAL
Rule 95    opciones -> cte_bool
Rule 96    opciones -> atom
Rule 97    opciones -> llamada_func
Rule 98    opciones -> MENOS CTE_NUMERAL
Rule 99    opciones -> MENOS CTE_REAL
Rule 100   opciones -> MENOS atom
Rule 101   opciones -> MENOS llamada_func
Rule 102   ope -> MAS
Rule 103   ope -> MENOS
Rule 104   ope -> MOD
Rule 105   ope -> ENTRE
Rule 106   ope -> POR
Rule 107   ope -> IGUALC
Rule 108   ope -> MENOR
Rule 109   ope -> MENORIGUAL
Rule 110   ope -> MAYOR
Rule 111   ope -> MAYORIGUAL
Rule 112   ope -> NOTIGUAL
Rule 113   ope -> AND
Rule 114   ope -> OR
Rule 115   return -> RETURN exp PYC
Rule 116   return -> RETURN PYC
Rule 117   while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 118   while -> WHILE PIZQ exp PDER LLIZQ LLDER
Rule 119   asignacion -> atom IGUAL exp PYC
Rule 120   asignacion -> atom IGUAL NEW ID PIZQ PDER PYC
Rule 121   atom -> ID PUNTO ID COIZQ exp CODER
Rule 122   atom -> ID PUNTO ID
Rule 123   atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
Rule 124   atom -> ID COIZQ exp CODER PUNTO ID
Rule 125   atom -> ID
Rule 126   atom -> ID COIZQ exp CODER
Rule 127   atom -> THIS PUNTO ID
Rule 128   atom -> THIS PUNTO ID COIZQ exp CODER
Rule 129   condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
Rule 130   condicion -> ciclo_cond ELSE LLIZQ LLDER
Rule 131   ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 132   ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER
Rule 133   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 134   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER
Rule 135   lectura -> INPUT PIZQ atom PDER PYC
Rule 136   escritura -> OUTPUT PIZQ exp PDER PYC
Rule 137   empty -> <empty>

Terminals, with rules where they appear

AND                  : 113
BOOL                 : 43
CHAR                 : 44
CLASS                : 5 6 7 8 18 19 20 21
CODER                : 27 29 31 33 35 37 75 79 121 123 123 124 126 128
COIZQ                : 27 29 31 33 35 37 75 79 121 123 123 124 126 128
COMA                 : 28 29 32 33 36 37 39 55 81
CTE_CHAR             : 92
CTE_NUMERAL          : 93 98
CTE_REAL             : 94 99
CTE_STR              : 91
ELSE                 : 129 130 133 134
ENTRE                : 105
FALSE                : 83
HIDDEN               : 46
ID                   : 5 6 7 8 12 24 26 27 28 29 30 31 32 33 34 35 36 37 38 39 48 49 54 55 72 73 74 74 75 75 76 77 78 78 79 79 120 121 121 122 122 123 123 124 124 125 126 127 128
IF                   : 131 132 133 134
IGUAL                : 30 31 32 33 38 39 119 120
IGUALC               : 107
INPUT                : 135
LLDER                : 5 6 7 8 18 19 20 21 57 58 59 60 117 118 129 130 131 132 133 134
LLIZQ                : 5 6 7 8 18 19 20 21 57 58 59 60 117 118 129 130 131 132 133 134
MAIN                 : 18 19 20 21 51
MAS                  : 102
MAYOR                : 110
MAYORIGUAL           : 111
MENOR                : 108
MENORIGUAL           : 109
MENOS                : 88 90 98 99 100 101 103
MOD                  : 104
NEW                  : 120
NOT                  : 89
NOTIGUAL             : 112
NUMERAL              : 41
OR                   : 114
OUTPUT               : 136
PDER                 : 51 52 53 72 73 74 75 76 77 78 79 86 87 88 90 117 118 120 131 132 133 134 135 136
PIZQ                 : 51 52 53 72 73 74 75 76 77 78 79 86 87 88 90 117 118 120 131 132 133 134 135 136
POR                  : 106
PUNTO                : 73 74 75 77 78 79 121 122 123 124 127 128
PYC                  : 22 70 115 116 119 120 135 136
REAL                 : 42
RETURN               : 115 116
STRING               : 45
THIS                 : 73 77 127 128
TRUE                 : 82
UNDER                : 12
VISIBLE              : 47
WHILE                : 117 118
WITHOUT              : 49 51
error                : 

Nonterminals, with rules where they appear

acceso               : 14 15 48 49 51
agregaAncestro       : 12
asignacion           : 66
atom                 : 38 39 96 100 119 120 135
ciclo_clase          : 1 4
ciclo_cond           : 129 130 133 134
ciclo_estatuto       : 57 59 64 117 129 131 133
ciclo_func           : 5 7 17 18 20
ciclo_id             : 24 36 37 39
ciclo_tipo           : 23 28 29 32 33
ciclo_vars           : 5 6 15 18 19
ciclo_vars_func      : 57 58 62
clase                : 3 4
clase_main           : 1 2
condicion            : 67
cte_bool             : 95
cuerpo_func          : 48 49 51
declararClase        : 5 6 7 8 18 19 20 21
declararMetodo       : 48 49 51
declararVariable     : 26 27 28 29 30 31 32 33 34 35 36 37 38 39
empty                : 11
escritura            : 68
estatuto             : 63 64
exp                  : 27 29 30 31 31 32 33 33 35 37 75 79 80 81 84 86 87 87 88 88 89 90 115 117 118 119 121 123 123 124 126 128 131 132 133 134 136
exp_ciclo            : 72 73 74 75 81
func                 : 16 17
herencia             : 5 6 7 8
lectura              : 69
limpiarMetodoActual  : 5 6 7 8
llamada_func         : 70 97 101
main                 : 18 19 20 21
meterParametros      : 54 55
opciones             : 84 85
ope                  : 84 87 88
params               : 48 49
params_ciclo         : 52 55
programa             : 0
return               : 71
revisarExistenciaClase : 24
tipo                 : 23 48 54 55
var_op               : 22
vars                 : 14 15 61 62
while                : 65

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ciclo_clase clase_main
    (2) programa -> . clase_main
    (3) ciclo_clase -> . clase
    (4) ciclo_clase -> . ciclo_clase clase
    (18) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    ciclo_clase                    shift and go to state 1
    clase_main                     shift and go to state 2
    clase                          shift and go to state 3
    programa                       shift and go to state 4

state 1

    (1) programa -> ciclo_clase . clase_main
    (4) ciclo_clase -> ciclo_clase . clase
    (18) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    clase_main                     shift and go to state 6
    clase                          shift and go to state 7

state 2

    (2) programa -> clase_main .

    $end            reduce using rule 2 (programa -> clase_main .)


state 3

    (3) ciclo_clase -> clase .

    CLASS           reduce using rule 3 (ciclo_clase -> clase .)


state 4

    (0) S' -> programa .



state 5

    (18) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (19) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars main LLDER
    (20) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_func main LLDER
    (21) clase_main -> CLASS . MAIN declararClase LLIZQ main LLDER
    (5) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS . ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    MAIN            shift and go to state 8
    ID              shift and go to state 9


state 6

    (1) programa -> ciclo_clase clase_main .

    $end            reduce using rule 1 (programa -> ciclo_clase clase_main .)


state 7

    (4) ciclo_clase -> ciclo_clase clase .

    CLASS           reduce using rule 4 (ciclo_clase -> ciclo_clase clase .)


state 8

    (18) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (19) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars main LLDER
    (20) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_func main LLDER
    (21) clase_main -> CLASS MAIN . declararClase LLIZQ main LLDER
    (9) declararClase -> .

    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 10

state 9

    (5) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID . declararClase herencia LLIZQ LLDER limpiarMetodoActual
    (9) declararClase -> .

    UNDER           reduce using rule 9 (declararClase -> .)
    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 11

state 10

    (18) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars ciclo_func main LLDER
    (19) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars main LLDER
    (20) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_func main LLDER
    (21) clase_main -> CLASS MAIN declararClase . LLIZQ main LLDER

    LLIZQ           shift and go to state 12


state 11

    (5) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase . herencia LLIZQ LLDER limpiarMetodoActual
    (11) herencia -> . empty
    (12) herencia -> . UNDER ID agregaAncestro
    (137) empty -> .

    UNDER           shift and go to state 13
    LLIZQ           reduce using rule 137 (empty -> .)

    herencia                       shift and go to state 14
    empty                          shift and go to state 15

state 12

    (18) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars ciclo_func main LLDER
    (19) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_func main LLDER
    (21) clase_main -> CLASS MAIN declararClase LLIZQ . main LLDER
    (14) ciclo_vars -> . acceso vars
    (15) ciclo_vars -> . ciclo_vars acceso vars
    (16) ciclo_func -> . func
    (17) ciclo_func -> . ciclo_func func
    (51) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE
    (48) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (49) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 18
    ciclo_func                     shift and go to state 17
    ciclo_vars                     shift and go to state 19
    func                           shift and go to state 21
    main                           shift and go to state 16

state 13

    (12) herencia -> UNDER . ID agregaAncestro

    ID              shift and go to state 23


state 14

    (5) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia . LLIZQ LLDER limpiarMetodoActual

    LLIZQ           shift and go to state 24


state 15

    (11) herencia -> empty .

    LLIZQ           reduce using rule 11 (herencia -> empty .)


state 16

    (21) clase_main -> CLASS MAIN declararClase LLIZQ main . LLDER

    LLDER           shift and go to state 25


state 17

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func . main LLDER
    (17) ciclo_func -> ciclo_func . func
    (51) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (48) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (49) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 28

state 18

    (14) ciclo_vars -> acceso . vars
    (51) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (48) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (49) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (22) vars -> . var_op PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (23) var_op -> . tipo ciclo_tipo
    (24) var_op -> . ID revisarExistenciaClase ciclo_id

    WITHOUT         shift and go to state 34
    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    ID              shift and go to state 32

    vars                           shift and go to state 31
    tipo                           shift and go to state 38
    var_op                         shift and go to state 36

state 19

    (18) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . ciclo_func main LLDER
    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . main LLDER
    (15) ciclo_vars -> ciclo_vars . acceso vars
    (16) ciclo_func -> . func
    (17) ciclo_func -> . ciclo_func func
    (51) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE
    (48) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (49) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 41
    ciclo_func                     shift and go to state 40
    func                           shift and go to state 21
    main                           shift and go to state 39

state 20

    (47) acceso -> VISIBLE .

    WITHOUT         reduce using rule 47 (acceso -> VISIBLE .)
    NUMERAL         reduce using rule 47 (acceso -> VISIBLE .)
    REAL            reduce using rule 47 (acceso -> VISIBLE .)
    BOOL            reduce using rule 47 (acceso -> VISIBLE .)
    CHAR            reduce using rule 47 (acceso -> VISIBLE .)
    STRING          reduce using rule 47 (acceso -> VISIBLE .)
    ID              reduce using rule 47 (acceso -> VISIBLE .)


state 21

    (16) ciclo_func -> func .

    LLDER           reduce using rule 16 (ciclo_func -> func .)
    HIDDEN          reduce using rule 16 (ciclo_func -> func .)
    VISIBLE         reduce using rule 16 (ciclo_func -> func .)


state 22

    (46) acceso -> HIDDEN .

    WITHOUT         reduce using rule 46 (acceso -> HIDDEN .)
    NUMERAL         reduce using rule 46 (acceso -> HIDDEN .)
    REAL            reduce using rule 46 (acceso -> HIDDEN .)
    BOOL            reduce using rule 46 (acceso -> HIDDEN .)
    CHAR            reduce using rule 46 (acceso -> HIDDEN .)
    STRING          reduce using rule 46 (acceso -> HIDDEN .)
    ID              reduce using rule 46 (acceso -> HIDDEN .)


state 23

    (12) herencia -> UNDER ID . agregaAncestro
    (13) agregaAncestro -> .

    LLIZQ           reduce using rule 13 (agregaAncestro -> .)

    agregaAncestro                 shift and go to state 42

state 24

    (5) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia LLIZQ . LLDER limpiarMetodoActual
    (14) ciclo_vars -> . acceso vars
    (15) ciclo_vars -> . ciclo_vars acceso vars
    (16) ciclo_func -> . func
    (17) ciclo_func -> . ciclo_func func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE
    (48) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (49) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 43
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 45
    ciclo_func                     shift and go to state 44
    ciclo_vars                     shift and go to state 46
    func                           shift and go to state 21

state 25

    (21) clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .

    $end            reduce using rule 21 (clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .)


state 26

    (51) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (48) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (49) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING

    WITHOUT         shift and go to state 34
    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37

    tipo                           shift and go to state 47

state 27

    (17) ciclo_func -> ciclo_func func .

    LLDER           reduce using rule 17 (ciclo_func -> ciclo_func func .)
    HIDDEN          reduce using rule 17 (ciclo_func -> ciclo_func func .)
    VISIBLE         reduce using rule 17 (ciclo_func -> ciclo_func func .)


state 28

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main . LLDER

    LLDER           shift and go to state 48


state 29

    (42) tipo -> REAL .

    ID              reduce using rule 42 (tipo -> REAL .)


state 30

    (41) tipo -> NUMERAL .

    ID              reduce using rule 41 (tipo -> NUMERAL .)


state 31

    (14) ciclo_vars -> acceso vars .

    LLDER           reduce using rule 14 (ciclo_vars -> acceso vars .)
    HIDDEN          reduce using rule 14 (ciclo_vars -> acceso vars .)
    VISIBLE         reduce using rule 14 (ciclo_vars -> acceso vars .)


state 32

    (24) var_op -> ID . revisarExistenciaClase ciclo_id
    (25) revisarExistenciaClase -> .

    ID              reduce using rule 25 (revisarExistenciaClase -> .)

    revisarExistenciaClase         shift and go to state 49

state 33

    (44) tipo -> CHAR .

    ID              reduce using rule 44 (tipo -> CHAR .)


state 34

    (51) main -> acceso WITHOUT . MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    MAIN            shift and go to state 51
    ID              shift and go to state 50


state 35

    (43) tipo -> BOOL .

    ID              reduce using rule 43 (tipo -> BOOL .)


state 36

    (22) vars -> var_op . PYC

    PYC             shift and go to state 52


state 37

    (45) tipo -> STRING .

    ID              reduce using rule 45 (tipo -> STRING .)


state 38

    (48) func -> acceso tipo . ID declararMetodo params cuerpo_func
    (23) var_op -> tipo . ciclo_tipo
    (26) ciclo_tipo -> . ID declararVariable
    (27) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (28) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (30) ciclo_tipo -> . ID declararVariable IGUAL exp
    (31) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (32) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 54

    ciclo_tipo                     shift and go to state 53

state 39

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main . LLDER

    LLDER           shift and go to state 55


state 40

    (18) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func . main LLDER
    (17) ciclo_func -> ciclo_func . func
    (51) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (48) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (49) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 56

state 41

    (15) ciclo_vars -> ciclo_vars acceso . vars
    (51) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (48) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (49) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (22) vars -> . var_op PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (23) var_op -> . tipo ciclo_tipo
    (24) var_op -> . ID revisarExistenciaClase ciclo_id

    WITHOUT         shift and go to state 34
    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    ID              shift and go to state 32

    vars                           shift and go to state 57
    tipo                           shift and go to state 38
    var_op                         shift and go to state 36

state 42

    (12) herencia -> UNDER ID agregaAncestro .

    LLIZQ           reduce using rule 12 (herencia -> UNDER ID agregaAncestro .)


state 43

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 58

state 44

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func . LLDER limpiarMetodoActual
    (17) ciclo_func -> ciclo_func . func
    (48) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (49) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE

    LLDER           shift and go to state 59
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 45

    (14) ciclo_vars -> acceso . vars
    (48) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (49) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (22) vars -> . var_op PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (23) var_op -> . tipo ciclo_tipo
    (24) var_op -> . ID revisarExistenciaClase ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    ID              shift and go to state 32

    vars                           shift and go to state 31
    tipo                           shift and go to state 38
    var_op                         shift and go to state 36

state 46

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . LLDER limpiarMetodoActual
    (15) ciclo_vars -> ciclo_vars . acceso vars
    (16) ciclo_func -> . func
    (17) ciclo_func -> . ciclo_func func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE
    (48) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (49) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 62
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 64
    ciclo_func                     shift and go to state 63
    func                           shift and go to state 21

state 47

    (48) func -> acceso tipo . ID declararMetodo params cuerpo_func

    ID              shift and go to state 65


state 48

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .

    $end            reduce using rule 20 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .)


state 49

    (24) var_op -> ID revisarExistenciaClase . ciclo_id
    (34) ciclo_id -> . ID declararVariable
    (35) ciclo_id -> . ID declararVariable COIZQ exp CODER
    (36) ciclo_id -> . ciclo_id COMA ID declararVariable
    (37) ciclo_id -> . ciclo_id COMA ID declararVariable COIZQ exp CODER
    (38) ciclo_id -> . ID declararVariable IGUAL atom
    (39) ciclo_id -> . ciclo_id COMA ID declararVariable IGUAL atom

    ID              shift and go to state 67

    ciclo_id                       shift and go to state 66

state 50

    (49) func -> acceso WITHOUT ID . declararMetodo params cuerpo_func
    (50) declararMetodo -> .

    PIZQ            reduce using rule 50 (declararMetodo -> .)

    declararMetodo                 shift and go to state 68

state 51

    (51) main -> acceso WITHOUT MAIN . declararMetodo PIZQ PDER cuerpo_func
    (50) declararMetodo -> .

    PIZQ            reduce using rule 50 (declararMetodo -> .)

    declararMetodo                 shift and go to state 69

state 52

    (22) vars -> var_op PYC .

    HIDDEN          reduce using rule 22 (vars -> var_op PYC .)
    VISIBLE         reduce using rule 22 (vars -> var_op PYC .)
    LLDER           reduce using rule 22 (vars -> var_op PYC .)
    ID              reduce using rule 22 (vars -> var_op PYC .)
    WHILE           reduce using rule 22 (vars -> var_op PYC .)
    OUTPUT          reduce using rule 22 (vars -> var_op PYC .)
    INPUT           reduce using rule 22 (vars -> var_op PYC .)
    THIS            reduce using rule 22 (vars -> var_op PYC .)
    RETURN          reduce using rule 22 (vars -> var_op PYC .)
    NUMERAL         reduce using rule 22 (vars -> var_op PYC .)
    REAL            reduce using rule 22 (vars -> var_op PYC .)
    BOOL            reduce using rule 22 (vars -> var_op PYC .)
    CHAR            reduce using rule 22 (vars -> var_op PYC .)
    STRING          reduce using rule 22 (vars -> var_op PYC .)
    IF              reduce using rule 22 (vars -> var_op PYC .)


state 53

    (23) var_op -> tipo ciclo_tipo .
    (28) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable
    (29) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER
    (32) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable IGUAL exp
    (33) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER IGUAL exp

    PYC             reduce using rule 23 (var_op -> tipo ciclo_tipo .)
    COMA            shift and go to state 70


state 54

    (48) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (26) ciclo_tipo -> ID . declararVariable
    (27) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (30) ciclo_tipo -> ID . declararVariable IGUAL exp
    (31) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (50) declararMetodo -> .
    (40) declararVariable -> .

    PIZQ            reduce using rule 50 (declararMetodo -> .)
    COIZQ           reduce using rule 40 (declararVariable -> .)
    IGUAL           reduce using rule 40 (declararVariable -> .)
    COMA            reduce using rule 40 (declararVariable -> .)
    PYC             reduce using rule 40 (declararVariable -> .)

    declararVariable               shift and go to state 71
    declararMetodo                 shift and go to state 72

state 55

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .

    $end            reduce using rule 19 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .)


state 56

    (18) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main . LLDER

    LLDER           shift and go to state 73


state 57

    (15) ciclo_vars -> ciclo_vars acceso vars .

    LLDER           reduce using rule 15 (ciclo_vars -> ciclo_vars acceso vars .)
    HIDDEN          reduce using rule 15 (ciclo_vars -> ciclo_vars acceso vars .)
    VISIBLE         reduce using rule 15 (ciclo_vars -> ciclo_vars acceso vars .)


state 58

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .

    CLASS           reduce using rule 8 (clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .)


state 59

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 74

state 60

    (48) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (49) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37

    tipo                           shift and go to state 47

state 61

    (49) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    ID              shift and go to state 50


state 62

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 75

state 63

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func . LLDER limpiarMetodoActual
    (17) ciclo_func -> ciclo_func . func
    (48) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (49) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE

    LLDER           shift and go to state 76
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 64

    (15) ciclo_vars -> ciclo_vars acceso . vars
    (48) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (49) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (22) vars -> . var_op PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (23) var_op -> . tipo ciclo_tipo
    (24) var_op -> . ID revisarExistenciaClase ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    ID              shift and go to state 32

    vars                           shift and go to state 57
    tipo                           shift and go to state 38
    var_op                         shift and go to state 36

state 65

    (48) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (50) declararMetodo -> .

    PIZQ            reduce using rule 50 (declararMetodo -> .)

    declararMetodo                 shift and go to state 72

state 66

    (24) var_op -> ID revisarExistenciaClase ciclo_id .
    (36) ciclo_id -> ciclo_id . COMA ID declararVariable
    (37) ciclo_id -> ciclo_id . COMA ID declararVariable COIZQ exp CODER
    (39) ciclo_id -> ciclo_id . COMA ID declararVariable IGUAL atom

    PYC             reduce using rule 24 (var_op -> ID revisarExistenciaClase ciclo_id .)
    COMA            shift and go to state 77


state 67

    (34) ciclo_id -> ID . declararVariable
    (35) ciclo_id -> ID . declararVariable COIZQ exp CODER
    (38) ciclo_id -> ID . declararVariable IGUAL atom
    (40) declararVariable -> .

    COIZQ           reduce using rule 40 (declararVariable -> .)
    IGUAL           reduce using rule 40 (declararVariable -> .)
    COMA            reduce using rule 40 (declararVariable -> .)
    PYC             reduce using rule 40 (declararVariable -> .)

    declararVariable               shift and go to state 78

state 68

    (49) func -> acceso WITHOUT ID declararMetodo . params cuerpo_func
    (52) params -> . PIZQ params_ciclo PDER
    (53) params -> . PIZQ PDER

    PIZQ            shift and go to state 79

    params                         shift and go to state 80

state 69

    (51) main -> acceso WITHOUT MAIN declararMetodo . PIZQ PDER cuerpo_func

    PIZQ            shift and go to state 81


state 70

    (28) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable
    (29) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER
    (32) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable IGUAL exp
    (33) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 82


state 71

    (26) ciclo_tipo -> ID declararVariable .
    (27) ciclo_tipo -> ID declararVariable . COIZQ exp CODER
    (30) ciclo_tipo -> ID declararVariable . IGUAL exp
    (31) ciclo_tipo -> ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 26 (ciclo_tipo -> ID declararVariable .)
    PYC             reduce using rule 26 (ciclo_tipo -> ID declararVariable .)
    COIZQ           shift and go to state 84
    IGUAL           shift and go to state 83


state 72

    (48) func -> acceso tipo ID declararMetodo . params cuerpo_func
    (52) params -> . PIZQ params_ciclo PDER
    (53) params -> . PIZQ PDER

    PIZQ            shift and go to state 79

    params                         shift and go to state 85

state 73

    (18) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .

    $end            reduce using rule 18 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .)


state 74

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 7 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .)


state 75

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .

    CLASS           reduce using rule 6 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .)


state 76

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 86

state 77

    (36) ciclo_id -> ciclo_id COMA . ID declararVariable
    (37) ciclo_id -> ciclo_id COMA . ID declararVariable COIZQ exp CODER
    (39) ciclo_id -> ciclo_id COMA . ID declararVariable IGUAL atom

    ID              shift and go to state 87


state 78

    (34) ciclo_id -> ID declararVariable .
    (35) ciclo_id -> ID declararVariable . COIZQ exp CODER
    (38) ciclo_id -> ID declararVariable . IGUAL atom

    COMA            reduce using rule 34 (ciclo_id -> ID declararVariable .)
    PYC             reduce using rule 34 (ciclo_id -> ID declararVariable .)
    COIZQ           shift and go to state 89
    IGUAL           shift and go to state 88


state 79

    (52) params -> PIZQ . params_ciclo PDER
    (53) params -> PIZQ . PDER
    (54) params_ciclo -> . tipo ID meterParametros
    (55) params_ciclo -> . params_ciclo COMA tipo ID meterParametros
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING

    PDER            shift and go to state 92
    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37

    tipo                           shift and go to state 90
    params_ciclo                   shift and go to state 91

state 80

    (49) func -> acceso WITHOUT ID declararMetodo params . cuerpo_func
    (57) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (58) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (59) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (60) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 93

    cuerpo_func                    shift and go to state 94

state 81

    (51) main -> acceso WITHOUT MAIN declararMetodo PIZQ . PDER cuerpo_func

    PDER            shift and go to state 95


state 82

    (28) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable
    (29) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER
    (32) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable IGUAL exp
    (33) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER IGUAL exp
    (40) declararVariable -> .

    COIZQ           reduce using rule 40 (declararVariable -> .)
    IGUAL           reduce using rule 40 (declararVariable -> .)
    COMA            reduce using rule 40 (declararVariable -> .)
    PYC             reduce using rule 40 (declararVariable -> .)

    declararVariable               shift and go to state 96

state 83

    (30) ciclo_tipo -> ID declararVariable IGUAL . exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 111
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 84

    (27) ciclo_tipo -> ID declararVariable COIZQ . exp CODER
    (31) ciclo_tipo -> ID declararVariable COIZQ . exp CODER IGUAL exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 113
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 85

    (48) func -> acceso tipo ID declararMetodo params . cuerpo_func
    (57) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (58) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (59) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (60) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 93

    cuerpo_func                    shift and go to state 114

state 86

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 5 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .)


state 87

    (36) ciclo_id -> ciclo_id COMA ID . declararVariable
    (37) ciclo_id -> ciclo_id COMA ID . declararVariable COIZQ exp CODER
    (39) ciclo_id -> ciclo_id COMA ID . declararVariable IGUAL atom
    (40) declararVariable -> .

    COIZQ           reduce using rule 40 (declararVariable -> .)
    IGUAL           reduce using rule 40 (declararVariable -> .)
    COMA            reduce using rule 40 (declararVariable -> .)
    PYC             reduce using rule 40 (declararVariable -> .)

    declararVariable               shift and go to state 115

state 88

    (38) ciclo_id -> ID declararVariable IGUAL . atom
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER

    ID              shift and go to state 118
    THIS            shift and go to state 116

    atom                           shift and go to state 117

state 89

    (35) ciclo_id -> ID declararVariable COIZQ . exp CODER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 119
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 90

    (54) params_ciclo -> tipo . ID meterParametros

    ID              shift and go to state 120


state 91

    (52) params -> PIZQ params_ciclo . PDER
    (55) params_ciclo -> params_ciclo . COMA tipo ID meterParametros

    PDER            shift and go to state 121
    COMA            shift and go to state 122


state 92

    (53) params -> PIZQ PDER .

    LLIZQ           reduce using rule 53 (params -> PIZQ PDER .)


state 93

    (57) cuerpo_func -> LLIZQ . ciclo_vars_func ciclo_estatuto LLDER
    (58) cuerpo_func -> LLIZQ . ciclo_vars_func LLDER
    (59) cuerpo_func -> LLIZQ . ciclo_estatuto LLDER
    (60) cuerpo_func -> LLIZQ . LLDER
    (61) ciclo_vars_func -> . vars
    (62) ciclo_vars_func -> . ciclo_vars_func vars
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (22) vars -> . var_op PYC
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (23) var_op -> . tipo ciclo_tipo
    (24) var_op -> . ID revisarExistenciaClase ciclo_id
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 133
    ID              shift and go to state 136
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    IF              shift and go to state 137

    atom                           shift and go to state 125
    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    vars                           shift and go to state 124
    ciclo_estatuto                 shift and go to state 140
    estatuto                       shift and go to state 129
    tipo                           shift and go to state 128
    ciclo_vars_func                shift and go to state 130
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    var_op                         shift and go to state 36
    llamada_func                   shift and go to state 135
    lectura                        shift and go to state 132
    ciclo_cond                     shift and go to state 141
    escritura                      shift and go to state 144

state 94

    (49) func -> acceso WITHOUT ID declararMetodo params cuerpo_func .

    LLDER           reduce using rule 49 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    HIDDEN          reduce using rule 49 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 49 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)


state 95

    (51) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER . cuerpo_func
    (57) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (58) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (59) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (60) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 93

    cuerpo_func                    shift and go to state 145

state 96

    (28) ciclo_tipo -> ciclo_tipo COMA ID declararVariable .
    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER
    (32) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . IGUAL exp
    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 28 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    PYC             reduce using rule 28 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    COIZQ           shift and go to state 147
    IGUAL           shift and go to state 146


state 97

    (86) exp -> PIZQ . exp PDER
    (87) exp -> PIZQ . exp PDER ope exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 148
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 98

    (95) opciones -> cte_bool .

    MAS             reduce using rule 95 (opciones -> cte_bool .)
    MENOS           reduce using rule 95 (opciones -> cte_bool .)
    MOD             reduce using rule 95 (opciones -> cte_bool .)
    ENTRE           reduce using rule 95 (opciones -> cte_bool .)
    POR             reduce using rule 95 (opciones -> cte_bool .)
    IGUALC          reduce using rule 95 (opciones -> cte_bool .)
    MENOR           reduce using rule 95 (opciones -> cte_bool .)
    MENORIGUAL      reduce using rule 95 (opciones -> cte_bool .)
    MAYOR           reduce using rule 95 (opciones -> cte_bool .)
    MAYORIGUAL      reduce using rule 95 (opciones -> cte_bool .)
    NOTIGUAL        reduce using rule 95 (opciones -> cte_bool .)
    AND             reduce using rule 95 (opciones -> cte_bool .)
    OR              reduce using rule 95 (opciones -> cte_bool .)
    PDER            reduce using rule 95 (opciones -> cte_bool .)
    COMA            reduce using rule 95 (opciones -> cte_bool .)
    CODER           reduce using rule 95 (opciones -> cte_bool .)
    PYC             reduce using rule 95 (opciones -> cte_bool .)


state 99

    (82) cte_bool -> TRUE .

    MAS             reduce using rule 82 (cte_bool -> TRUE .)
    MENOS           reduce using rule 82 (cte_bool -> TRUE .)
    MOD             reduce using rule 82 (cte_bool -> TRUE .)
    ENTRE           reduce using rule 82 (cte_bool -> TRUE .)
    POR             reduce using rule 82 (cte_bool -> TRUE .)
    IGUALC          reduce using rule 82 (cte_bool -> TRUE .)
    MENOR           reduce using rule 82 (cte_bool -> TRUE .)
    MENORIGUAL      reduce using rule 82 (cte_bool -> TRUE .)
    MAYOR           reduce using rule 82 (cte_bool -> TRUE .)
    MAYORIGUAL      reduce using rule 82 (cte_bool -> TRUE .)
    NOTIGUAL        reduce using rule 82 (cte_bool -> TRUE .)
    AND             reduce using rule 82 (cte_bool -> TRUE .)
    OR              reduce using rule 82 (cte_bool -> TRUE .)
    PDER            reduce using rule 82 (cte_bool -> TRUE .)
    COMA            reduce using rule 82 (cte_bool -> TRUE .)
    PYC             reduce using rule 82 (cte_bool -> TRUE .)
    CODER           reduce using rule 82 (cte_bool -> TRUE .)


state 100

    (93) opciones -> CTE_NUMERAL .

    MAS             reduce using rule 93 (opciones -> CTE_NUMERAL .)
    MENOS           reduce using rule 93 (opciones -> CTE_NUMERAL .)
    MOD             reduce using rule 93 (opciones -> CTE_NUMERAL .)
    ENTRE           reduce using rule 93 (opciones -> CTE_NUMERAL .)
    POR             reduce using rule 93 (opciones -> CTE_NUMERAL .)
    IGUALC          reduce using rule 93 (opciones -> CTE_NUMERAL .)
    MENOR           reduce using rule 93 (opciones -> CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 93 (opciones -> CTE_NUMERAL .)
    MAYOR           reduce using rule 93 (opciones -> CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 93 (opciones -> CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 93 (opciones -> CTE_NUMERAL .)
    AND             reduce using rule 93 (opciones -> CTE_NUMERAL .)
    OR              reduce using rule 93 (opciones -> CTE_NUMERAL .)
    PDER            reduce using rule 93 (opciones -> CTE_NUMERAL .)
    COMA            reduce using rule 93 (opciones -> CTE_NUMERAL .)
    CODER           reduce using rule 93 (opciones -> CTE_NUMERAL .)
    PYC             reduce using rule 93 (opciones -> CTE_NUMERAL .)


state 101

    (94) opciones -> CTE_REAL .

    MAS             reduce using rule 94 (opciones -> CTE_REAL .)
    MENOS           reduce using rule 94 (opciones -> CTE_REAL .)
    MOD             reduce using rule 94 (opciones -> CTE_REAL .)
    ENTRE           reduce using rule 94 (opciones -> CTE_REAL .)
    POR             reduce using rule 94 (opciones -> CTE_REAL .)
    IGUALC          reduce using rule 94 (opciones -> CTE_REAL .)
    MENOR           reduce using rule 94 (opciones -> CTE_REAL .)
    MENORIGUAL      reduce using rule 94 (opciones -> CTE_REAL .)
    MAYOR           reduce using rule 94 (opciones -> CTE_REAL .)
    MAYORIGUAL      reduce using rule 94 (opciones -> CTE_REAL .)
    NOTIGUAL        reduce using rule 94 (opciones -> CTE_REAL .)
    AND             reduce using rule 94 (opciones -> CTE_REAL .)
    OR              reduce using rule 94 (opciones -> CTE_REAL .)
    PDER            reduce using rule 94 (opciones -> CTE_REAL .)
    COMA            reduce using rule 94 (opciones -> CTE_REAL .)
    CODER           reduce using rule 94 (opciones -> CTE_REAL .)
    PYC             reduce using rule 94 (opciones -> CTE_REAL .)


state 102

    (92) opciones -> CTE_CHAR .

    MAS             reduce using rule 92 (opciones -> CTE_CHAR .)
    MENOS           reduce using rule 92 (opciones -> CTE_CHAR .)
    MOD             reduce using rule 92 (opciones -> CTE_CHAR .)
    ENTRE           reduce using rule 92 (opciones -> CTE_CHAR .)
    POR             reduce using rule 92 (opciones -> CTE_CHAR .)
    IGUALC          reduce using rule 92 (opciones -> CTE_CHAR .)
    MENOR           reduce using rule 92 (opciones -> CTE_CHAR .)
    MENORIGUAL      reduce using rule 92 (opciones -> CTE_CHAR .)
    MAYOR           reduce using rule 92 (opciones -> CTE_CHAR .)
    MAYORIGUAL      reduce using rule 92 (opciones -> CTE_CHAR .)
    NOTIGUAL        reduce using rule 92 (opciones -> CTE_CHAR .)
    AND             reduce using rule 92 (opciones -> CTE_CHAR .)
    OR              reduce using rule 92 (opciones -> CTE_CHAR .)
    PDER            reduce using rule 92 (opciones -> CTE_CHAR .)
    COMA            reduce using rule 92 (opciones -> CTE_CHAR .)
    CODER           reduce using rule 92 (opciones -> CTE_CHAR .)
    PYC             reduce using rule 92 (opciones -> CTE_CHAR .)


state 103

    (84) exp -> opciones . ope exp
    (85) exp -> opciones .
    (102) ope -> . MAS
    (103) ope -> . MENOS
    (104) ope -> . MOD
    (105) ope -> . ENTRE
    (106) ope -> . POR
    (107) ope -> . IGUALC
    (108) ope -> . MENOR
    (109) ope -> . MENORIGUAL
    (110) ope -> . MAYOR
    (111) ope -> . MAYORIGUAL
    (112) ope -> . NOTIGUAL
    (113) ope -> . AND
    (114) ope -> . OR

    CODER           reduce using rule 85 (exp -> opciones .)
    COMA            reduce using rule 85 (exp -> opciones .)
    PYC             reduce using rule 85 (exp -> opciones .)
    PDER            reduce using rule 85 (exp -> opciones .)
    MAS             shift and go to state 150
    MENOS           shift and go to state 157
    MOD             shift and go to state 162
    ENTRE           shift and go to state 152
    POR             shift and go to state 153
    IGUALC          shift and go to state 160
    MENOR           shift and go to state 156
    MENORIGUAL      shift and go to state 159
    MAYOR           shift and go to state 161
    MAYORIGUAL      shift and go to state 158
    NOTIGUAL        shift and go to state 151
    AND             shift and go to state 149
    OR              shift and go to state 154

    ope                            shift and go to state 155

state 104

    (91) opciones -> CTE_STR .

    MAS             reduce using rule 91 (opciones -> CTE_STR .)
    MENOS           reduce using rule 91 (opciones -> CTE_STR .)
    MOD             reduce using rule 91 (opciones -> CTE_STR .)
    ENTRE           reduce using rule 91 (opciones -> CTE_STR .)
    POR             reduce using rule 91 (opciones -> CTE_STR .)
    IGUALC          reduce using rule 91 (opciones -> CTE_STR .)
    MENOR           reduce using rule 91 (opciones -> CTE_STR .)
    MENORIGUAL      reduce using rule 91 (opciones -> CTE_STR .)
    MAYOR           reduce using rule 91 (opciones -> CTE_STR .)
    MAYORIGUAL      reduce using rule 91 (opciones -> CTE_STR .)
    NOTIGUAL        reduce using rule 91 (opciones -> CTE_STR .)
    AND             reduce using rule 91 (opciones -> CTE_STR .)
    OR              reduce using rule 91 (opciones -> CTE_STR .)
    PDER            reduce using rule 91 (opciones -> CTE_STR .)
    COMA            reduce using rule 91 (opciones -> CTE_STR .)
    CODER           reduce using rule 91 (opciones -> CTE_STR .)
    PYC             reduce using rule 91 (opciones -> CTE_STR .)


state 105

    (96) opciones -> atom .

    MAS             reduce using rule 96 (opciones -> atom .)
    MENOS           reduce using rule 96 (opciones -> atom .)
    MOD             reduce using rule 96 (opciones -> atom .)
    ENTRE           reduce using rule 96 (opciones -> atom .)
    POR             reduce using rule 96 (opciones -> atom .)
    IGUALC          reduce using rule 96 (opciones -> atom .)
    MENOR           reduce using rule 96 (opciones -> atom .)
    MENORIGUAL      reduce using rule 96 (opciones -> atom .)
    MAYOR           reduce using rule 96 (opciones -> atom .)
    MAYORIGUAL      reduce using rule 96 (opciones -> atom .)
    NOTIGUAL        reduce using rule 96 (opciones -> atom .)
    AND             reduce using rule 96 (opciones -> atom .)
    OR              reduce using rule 96 (opciones -> atom .)
    PDER            reduce using rule 96 (opciones -> atom .)
    COMA            reduce using rule 96 (opciones -> atom .)
    CODER           reduce using rule 96 (opciones -> atom .)
    PYC             reduce using rule 96 (opciones -> atom .)


state 106

    (97) opciones -> llamada_func .

    MAS             reduce using rule 97 (opciones -> llamada_func .)
    MENOS           reduce using rule 97 (opciones -> llamada_func .)
    MOD             reduce using rule 97 (opciones -> llamada_func .)
    ENTRE           reduce using rule 97 (opciones -> llamada_func .)
    POR             reduce using rule 97 (opciones -> llamada_func .)
    IGUALC          reduce using rule 97 (opciones -> llamada_func .)
    MENOR           reduce using rule 97 (opciones -> llamada_func .)
    MENORIGUAL      reduce using rule 97 (opciones -> llamada_func .)
    MAYOR           reduce using rule 97 (opciones -> llamada_func .)
    MAYORIGUAL      reduce using rule 97 (opciones -> llamada_func .)
    NOTIGUAL        reduce using rule 97 (opciones -> llamada_func .)
    AND             reduce using rule 97 (opciones -> llamada_func .)
    OR              reduce using rule 97 (opciones -> llamada_func .)
    PDER            reduce using rule 97 (opciones -> llamada_func .)
    COMA            reduce using rule 97 (opciones -> llamada_func .)
    CODER           reduce using rule 97 (opciones -> llamada_func .)
    PYC             reduce using rule 97 (opciones -> llamada_func .)


state 107

    (121) atom -> ID . PUNTO ID COIZQ exp CODER
    (122) atom -> ID . PUNTO ID
    (123) atom -> ID . COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID . COIZQ exp CODER PUNTO ID
    (125) atom -> ID .
    (126) atom -> ID . COIZQ exp CODER
    (72) llamada_func -> ID . PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . PIZQ PDER
    (78) llamada_func -> ID . PUNTO ID PIZQ PDER
    (79) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ PDER

    PUNTO           shift and go to state 164
    COIZQ           shift and go to state 165
    MAS             reduce using rule 125 (atom -> ID .)
    MENOS           reduce using rule 125 (atom -> ID .)
    MOD             reduce using rule 125 (atom -> ID .)
    ENTRE           reduce using rule 125 (atom -> ID .)
    POR             reduce using rule 125 (atom -> ID .)
    IGUALC          reduce using rule 125 (atom -> ID .)
    MENOR           reduce using rule 125 (atom -> ID .)
    MENORIGUAL      reduce using rule 125 (atom -> ID .)
    MAYOR           reduce using rule 125 (atom -> ID .)
    MAYORIGUAL      reduce using rule 125 (atom -> ID .)
    NOTIGUAL        reduce using rule 125 (atom -> ID .)
    AND             reduce using rule 125 (atom -> ID .)
    OR              reduce using rule 125 (atom -> ID .)
    COMA            reduce using rule 125 (atom -> ID .)
    PYC             reduce using rule 125 (atom -> ID .)
    CODER           reduce using rule 125 (atom -> ID .)
    PDER            reduce using rule 125 (atom -> ID .)
    PIZQ            shift and go to state 163


state 108

    (83) cte_bool -> FALSE .

    MAS             reduce using rule 83 (cte_bool -> FALSE .)
    MENOS           reduce using rule 83 (cte_bool -> FALSE .)
    MOD             reduce using rule 83 (cte_bool -> FALSE .)
    ENTRE           reduce using rule 83 (cte_bool -> FALSE .)
    POR             reduce using rule 83 (cte_bool -> FALSE .)
    IGUALC          reduce using rule 83 (cte_bool -> FALSE .)
    MENOR           reduce using rule 83 (cte_bool -> FALSE .)
    MENORIGUAL      reduce using rule 83 (cte_bool -> FALSE .)
    MAYOR           reduce using rule 83 (cte_bool -> FALSE .)
    MAYORIGUAL      reduce using rule 83 (cte_bool -> FALSE .)
    NOTIGUAL        reduce using rule 83 (cte_bool -> FALSE .)
    AND             reduce using rule 83 (cte_bool -> FALSE .)
    OR              reduce using rule 83 (cte_bool -> FALSE .)
    PDER            reduce using rule 83 (cte_bool -> FALSE .)
    COMA            reduce using rule 83 (cte_bool -> FALSE .)
    PYC             reduce using rule 83 (cte_bool -> FALSE .)
    CODER           reduce using rule 83 (cte_bool -> FALSE .)


state 109

    (127) atom -> THIS . PUNTO ID
    (128) atom -> THIS . PUNTO ID COIZQ exp CODER
    (73) llamada_func -> THIS . PUNTO ID PIZQ exp_ciclo PDER
    (77) llamada_func -> THIS . PUNTO ID PIZQ PDER

    PUNTO           shift and go to state 166


state 110

    (88) exp -> MENOS . PIZQ exp PDER ope exp
    (90) exp -> MENOS . PIZQ exp PDER
    (98) opciones -> MENOS . CTE_NUMERAL
    (99) opciones -> MENOS . CTE_REAL
    (100) opciones -> MENOS . atom
    (101) opciones -> MENOS . llamada_func
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 167
    CTE_NUMERAL     shift and go to state 171
    CTE_REAL        shift and go to state 168
    ID              shift and go to state 107
    THIS            shift and go to state 109

    llamada_func                   shift and go to state 170
    atom                           shift and go to state 169

state 111

    (30) ciclo_tipo -> ID declararVariable IGUAL exp .

    COMA            reduce using rule 30 (ciclo_tipo -> ID declararVariable IGUAL exp .)
    PYC             reduce using rule 30 (ciclo_tipo -> ID declararVariable IGUAL exp .)


state 112

    (89) exp -> NOT . exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 172
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 113

    (27) ciclo_tipo -> ID declararVariable COIZQ exp . CODER
    (31) ciclo_tipo -> ID declararVariable COIZQ exp . CODER IGUAL exp

    CODER           shift and go to state 173


state 114

    (48) func -> acceso tipo ID declararMetodo params cuerpo_func .

    LLDER           reduce using rule 48 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    HIDDEN          reduce using rule 48 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 48 (func -> acceso tipo ID declararMetodo params cuerpo_func .)


state 115

    (36) ciclo_id -> ciclo_id COMA ID declararVariable .
    (37) ciclo_id -> ciclo_id COMA ID declararVariable . COIZQ exp CODER
    (39) ciclo_id -> ciclo_id COMA ID declararVariable . IGUAL atom

    COMA            reduce using rule 36 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    PYC             reduce using rule 36 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    COIZQ           shift and go to state 175
    IGUAL           shift and go to state 174


state 116

    (127) atom -> THIS . PUNTO ID
    (128) atom -> THIS . PUNTO ID COIZQ exp CODER

    PUNTO           shift and go to state 176


state 117

    (38) ciclo_id -> ID declararVariable IGUAL atom .

    COMA            reduce using rule 38 (ciclo_id -> ID declararVariable IGUAL atom .)
    PYC             reduce using rule 38 (ciclo_id -> ID declararVariable IGUAL atom .)


state 118

    (121) atom -> ID . PUNTO ID COIZQ exp CODER
    (122) atom -> ID . PUNTO ID
    (123) atom -> ID . COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID . COIZQ exp CODER PUNTO ID
    (125) atom -> ID .
    (126) atom -> ID . COIZQ exp CODER

    PUNTO           shift and go to state 178
    COIZQ           shift and go to state 177
    PDER            reduce using rule 125 (atom -> ID .)
    COMA            reduce using rule 125 (atom -> ID .)
    PYC             reduce using rule 125 (atom -> ID .)


state 119

    (35) ciclo_id -> ID declararVariable COIZQ exp . CODER

    CODER           shift and go to state 179


state 120

    (54) params_ciclo -> tipo ID . meterParametros
    (56) meterParametros -> .

    PDER            reduce using rule 56 (meterParametros -> .)
    COMA            reduce using rule 56 (meterParametros -> .)

    meterParametros                shift and go to state 180

state 121

    (52) params -> PIZQ params_ciclo PDER .

    LLIZQ           reduce using rule 52 (params -> PIZQ params_ciclo PDER .)


state 122

    (55) params_ciclo -> params_ciclo COMA . tipo ID meterParametros
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING

    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37

    tipo                           shift and go to state 181

state 123

    (115) return -> RETURN . exp PYC
    (116) return -> RETURN . PYC
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PYC             shift and go to state 183
    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 182
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 124

    (61) ciclo_vars_func -> vars .

    LLDER           reduce using rule 61 (ciclo_vars_func -> vars .)
    ID              reduce using rule 61 (ciclo_vars_func -> vars .)
    WHILE           reduce using rule 61 (ciclo_vars_func -> vars .)
    OUTPUT          reduce using rule 61 (ciclo_vars_func -> vars .)
    INPUT           reduce using rule 61 (ciclo_vars_func -> vars .)
    THIS            reduce using rule 61 (ciclo_vars_func -> vars .)
    RETURN          reduce using rule 61 (ciclo_vars_func -> vars .)
    NUMERAL         reduce using rule 61 (ciclo_vars_func -> vars .)
    REAL            reduce using rule 61 (ciclo_vars_func -> vars .)
    BOOL            reduce using rule 61 (ciclo_vars_func -> vars .)
    CHAR            reduce using rule 61 (ciclo_vars_func -> vars .)
    STRING          reduce using rule 61 (ciclo_vars_func -> vars .)
    IF              reduce using rule 61 (ciclo_vars_func -> vars .)


state 125

    (119) asignacion -> atom . IGUAL exp PYC
    (120) asignacion -> atom . IGUAL NEW ID PIZQ PDER PYC

    IGUAL           shift and go to state 184


state 126

    (117) while -> WHILE . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> WHILE . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 185


state 127

    (71) estatuto -> return .

    LLDER           reduce using rule 71 (estatuto -> return .)
    WHILE           reduce using rule 71 (estatuto -> return .)
    OUTPUT          reduce using rule 71 (estatuto -> return .)
    INPUT           reduce using rule 71 (estatuto -> return .)
    ID              reduce using rule 71 (estatuto -> return .)
    THIS            reduce using rule 71 (estatuto -> return .)
    RETURN          reduce using rule 71 (estatuto -> return .)
    IF              reduce using rule 71 (estatuto -> return .)


state 128

    (23) var_op -> tipo . ciclo_tipo
    (26) ciclo_tipo -> . ID declararVariable
    (27) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (28) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (30) ciclo_tipo -> . ID declararVariable IGUAL exp
    (31) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (32) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 186

    ciclo_tipo                     shift and go to state 53

state 129

    (63) ciclo_estatuto -> estatuto .

    LLDER           reduce using rule 63 (ciclo_estatuto -> estatuto .)
    WHILE           reduce using rule 63 (ciclo_estatuto -> estatuto .)
    OUTPUT          reduce using rule 63 (ciclo_estatuto -> estatuto .)
    INPUT           reduce using rule 63 (ciclo_estatuto -> estatuto .)
    ID              reduce using rule 63 (ciclo_estatuto -> estatuto .)
    THIS            reduce using rule 63 (ciclo_estatuto -> estatuto .)
    RETURN          reduce using rule 63 (ciclo_estatuto -> estatuto .)
    IF              reduce using rule 63 (ciclo_estatuto -> estatuto .)


state 130

    (57) cuerpo_func -> LLIZQ ciclo_vars_func . ciclo_estatuto LLDER
    (58) cuerpo_func -> LLIZQ ciclo_vars_func . LLDER
    (62) ciclo_vars_func -> ciclo_vars_func . vars
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (22) vars -> . var_op PYC
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (23) var_op -> . tipo ciclo_tipo
    (24) var_op -> . ID revisarExistenciaClase ciclo_id
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 188
    ID              shift and go to state 136
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    NUMERAL         shift and go to state 30
    REAL            shift and go to state 29
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    IF              shift and go to state 137

    atom                           shift and go to state 125
    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    vars                           shift and go to state 187
    ciclo_estatuto                 shift and go to state 189
    estatuto                       shift and go to state 129
    tipo                           shift and go to state 128
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    var_op                         shift and go to state 36
    llamada_func                   shift and go to state 135
    lectura                        shift and go to state 132
    ciclo_cond                     shift and go to state 141
    escritura                      shift and go to state 144

state 131

    (67) estatuto -> condicion .

    LLDER           reduce using rule 67 (estatuto -> condicion .)
    WHILE           reduce using rule 67 (estatuto -> condicion .)
    OUTPUT          reduce using rule 67 (estatuto -> condicion .)
    INPUT           reduce using rule 67 (estatuto -> condicion .)
    ID              reduce using rule 67 (estatuto -> condicion .)
    THIS            reduce using rule 67 (estatuto -> condicion .)
    RETURN          reduce using rule 67 (estatuto -> condicion .)
    IF              reduce using rule 67 (estatuto -> condicion .)


state 132

    (69) estatuto -> lectura .

    LLDER           reduce using rule 69 (estatuto -> lectura .)
    WHILE           reduce using rule 69 (estatuto -> lectura .)
    OUTPUT          reduce using rule 69 (estatuto -> lectura .)
    INPUT           reduce using rule 69 (estatuto -> lectura .)
    ID              reduce using rule 69 (estatuto -> lectura .)
    THIS            reduce using rule 69 (estatuto -> lectura .)
    RETURN          reduce using rule 69 (estatuto -> lectura .)
    IF              reduce using rule 69 (estatuto -> lectura .)


state 133

    (60) cuerpo_func -> LLIZQ LLDER .

    HIDDEN          reduce using rule 60 (cuerpo_func -> LLIZQ LLDER .)
    VISIBLE         reduce using rule 60 (cuerpo_func -> LLIZQ LLDER .)
    LLDER           reduce using rule 60 (cuerpo_func -> LLIZQ LLDER .)


state 134

    (135) lectura -> INPUT . PIZQ atom PDER PYC

    PIZQ            shift and go to state 190


state 135

    (70) estatuto -> llamada_func . PYC

    PYC             shift and go to state 191


state 136

    (24) var_op -> ID . revisarExistenciaClase ciclo_id
    (72) llamada_func -> ID . PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . PIZQ PDER
    (78) llamada_func -> ID . PUNTO ID PIZQ PDER
    (79) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ PDER
    (121) atom -> ID . PUNTO ID COIZQ exp CODER
    (122) atom -> ID . PUNTO ID
    (123) atom -> ID . COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID . COIZQ exp CODER PUNTO ID
    (125) atom -> ID .
    (126) atom -> ID . COIZQ exp CODER
    (25) revisarExistenciaClase -> .

    PIZQ            shift and go to state 163
    PUNTO           shift and go to state 193
    COIZQ           shift and go to state 192
    IGUAL           reduce using rule 125 (atom -> ID .)
    ID              reduce using rule 25 (revisarExistenciaClase -> .)

    revisarExistenciaClase         shift and go to state 49

state 137

    (131) ciclo_cond -> IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 194


state 138

    (66) estatuto -> asignacion .

    LLDER           reduce using rule 66 (estatuto -> asignacion .)
    WHILE           reduce using rule 66 (estatuto -> asignacion .)
    OUTPUT          reduce using rule 66 (estatuto -> asignacion .)
    INPUT           reduce using rule 66 (estatuto -> asignacion .)
    ID              reduce using rule 66 (estatuto -> asignacion .)
    THIS            reduce using rule 66 (estatuto -> asignacion .)
    RETURN          reduce using rule 66 (estatuto -> asignacion .)
    IF              reduce using rule 66 (estatuto -> asignacion .)


state 139

    (73) llamada_func -> THIS . PUNTO ID PIZQ exp_ciclo PDER
    (77) llamada_func -> THIS . PUNTO ID PIZQ PDER
    (127) atom -> THIS . PUNTO ID
    (128) atom -> THIS . PUNTO ID COIZQ exp CODER

    PUNTO           shift and go to state 195


state 140

    (59) cuerpo_func -> LLIZQ ciclo_estatuto . LLDER
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 197
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    estatuto                       shift and go to state 196
    ciclo_cond                     shift and go to state 141
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    lectura                        shift and go to state 132
    escritura                      shift and go to state 144

state 141

    (129) condicion -> ciclo_cond . ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> ciclo_cond . ELSE LLIZQ LLDER
    (133) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ LLDER

    ELSE            shift and go to state 199


state 142

    (65) estatuto -> while .

    LLDER           reduce using rule 65 (estatuto -> while .)
    WHILE           reduce using rule 65 (estatuto -> while .)
    OUTPUT          reduce using rule 65 (estatuto -> while .)
    INPUT           reduce using rule 65 (estatuto -> while .)
    ID              reduce using rule 65 (estatuto -> while .)
    THIS            reduce using rule 65 (estatuto -> while .)
    RETURN          reduce using rule 65 (estatuto -> while .)
    IF              reduce using rule 65 (estatuto -> while .)


state 143

    (136) escritura -> OUTPUT . PIZQ exp PDER PYC

    PIZQ            shift and go to state 200


state 144

    (68) estatuto -> escritura .

    LLDER           reduce using rule 68 (estatuto -> escritura .)
    WHILE           reduce using rule 68 (estatuto -> escritura .)
    OUTPUT          reduce using rule 68 (estatuto -> escritura .)
    INPUT           reduce using rule 68 (estatuto -> escritura .)
    ID              reduce using rule 68 (estatuto -> escritura .)
    THIS            reduce using rule 68 (estatuto -> escritura .)
    RETURN          reduce using rule 68 (estatuto -> escritura .)
    IF              reduce using rule 68 (estatuto -> escritura .)


state 145

    (51) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .

    LLDER           reduce using rule 51 (main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .)


state 146

    (32) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL . exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    atom                           shift and go to state 105
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 201
    llamada_func                   shift and go to state 106

state 147

    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER IGUAL exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    atom                           shift and go to state 105
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 202
    llamada_func                   shift and go to state 106

state 148

    (86) exp -> PIZQ exp . PDER
    (87) exp -> PIZQ exp . PDER ope exp

    PDER            shift and go to state 203


state 149

    (113) ope -> AND .

    PIZQ            reduce using rule 113 (ope -> AND .)
    MENOS           reduce using rule 113 (ope -> AND .)
    NOT             reduce using rule 113 (ope -> AND .)
    CTE_STR         reduce using rule 113 (ope -> AND .)
    CTE_CHAR        reduce using rule 113 (ope -> AND .)
    CTE_NUMERAL     reduce using rule 113 (ope -> AND .)
    CTE_REAL        reduce using rule 113 (ope -> AND .)
    TRUE            reduce using rule 113 (ope -> AND .)
    FALSE           reduce using rule 113 (ope -> AND .)
    ID              reduce using rule 113 (ope -> AND .)
    THIS            reduce using rule 113 (ope -> AND .)


state 150

    (102) ope -> MAS .

    PIZQ            reduce using rule 102 (ope -> MAS .)
    MENOS           reduce using rule 102 (ope -> MAS .)
    NOT             reduce using rule 102 (ope -> MAS .)
    CTE_STR         reduce using rule 102 (ope -> MAS .)
    CTE_CHAR        reduce using rule 102 (ope -> MAS .)
    CTE_NUMERAL     reduce using rule 102 (ope -> MAS .)
    CTE_REAL        reduce using rule 102 (ope -> MAS .)
    TRUE            reduce using rule 102 (ope -> MAS .)
    FALSE           reduce using rule 102 (ope -> MAS .)
    ID              reduce using rule 102 (ope -> MAS .)
    THIS            reduce using rule 102 (ope -> MAS .)


state 151

    (112) ope -> NOTIGUAL .

    PIZQ            reduce using rule 112 (ope -> NOTIGUAL .)
    MENOS           reduce using rule 112 (ope -> NOTIGUAL .)
    NOT             reduce using rule 112 (ope -> NOTIGUAL .)
    CTE_STR         reduce using rule 112 (ope -> NOTIGUAL .)
    CTE_CHAR        reduce using rule 112 (ope -> NOTIGUAL .)
    CTE_NUMERAL     reduce using rule 112 (ope -> NOTIGUAL .)
    CTE_REAL        reduce using rule 112 (ope -> NOTIGUAL .)
    TRUE            reduce using rule 112 (ope -> NOTIGUAL .)
    FALSE           reduce using rule 112 (ope -> NOTIGUAL .)
    ID              reduce using rule 112 (ope -> NOTIGUAL .)
    THIS            reduce using rule 112 (ope -> NOTIGUAL .)


state 152

    (105) ope -> ENTRE .

    PIZQ            reduce using rule 105 (ope -> ENTRE .)
    MENOS           reduce using rule 105 (ope -> ENTRE .)
    NOT             reduce using rule 105 (ope -> ENTRE .)
    CTE_STR         reduce using rule 105 (ope -> ENTRE .)
    CTE_CHAR        reduce using rule 105 (ope -> ENTRE .)
    CTE_NUMERAL     reduce using rule 105 (ope -> ENTRE .)
    CTE_REAL        reduce using rule 105 (ope -> ENTRE .)
    TRUE            reduce using rule 105 (ope -> ENTRE .)
    FALSE           reduce using rule 105 (ope -> ENTRE .)
    ID              reduce using rule 105 (ope -> ENTRE .)
    THIS            reduce using rule 105 (ope -> ENTRE .)


state 153

    (106) ope -> POR .

    PIZQ            reduce using rule 106 (ope -> POR .)
    MENOS           reduce using rule 106 (ope -> POR .)
    NOT             reduce using rule 106 (ope -> POR .)
    CTE_STR         reduce using rule 106 (ope -> POR .)
    CTE_CHAR        reduce using rule 106 (ope -> POR .)
    CTE_NUMERAL     reduce using rule 106 (ope -> POR .)
    CTE_REAL        reduce using rule 106 (ope -> POR .)
    TRUE            reduce using rule 106 (ope -> POR .)
    FALSE           reduce using rule 106 (ope -> POR .)
    ID              reduce using rule 106 (ope -> POR .)
    THIS            reduce using rule 106 (ope -> POR .)


state 154

    (114) ope -> OR .

    PIZQ            reduce using rule 114 (ope -> OR .)
    MENOS           reduce using rule 114 (ope -> OR .)
    NOT             reduce using rule 114 (ope -> OR .)
    CTE_STR         reduce using rule 114 (ope -> OR .)
    CTE_CHAR        reduce using rule 114 (ope -> OR .)
    CTE_NUMERAL     reduce using rule 114 (ope -> OR .)
    CTE_REAL        reduce using rule 114 (ope -> OR .)
    TRUE            reduce using rule 114 (ope -> OR .)
    FALSE           reduce using rule 114 (ope -> OR .)
    ID              reduce using rule 114 (ope -> OR .)
    THIS            reduce using rule 114 (ope -> OR .)


state 155

    (84) exp -> opciones ope . exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 204
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 156

    (108) ope -> MENOR .

    PIZQ            reduce using rule 108 (ope -> MENOR .)
    MENOS           reduce using rule 108 (ope -> MENOR .)
    NOT             reduce using rule 108 (ope -> MENOR .)
    CTE_STR         reduce using rule 108 (ope -> MENOR .)
    CTE_CHAR        reduce using rule 108 (ope -> MENOR .)
    CTE_NUMERAL     reduce using rule 108 (ope -> MENOR .)
    CTE_REAL        reduce using rule 108 (ope -> MENOR .)
    TRUE            reduce using rule 108 (ope -> MENOR .)
    FALSE           reduce using rule 108 (ope -> MENOR .)
    ID              reduce using rule 108 (ope -> MENOR .)
    THIS            reduce using rule 108 (ope -> MENOR .)


state 157

    (103) ope -> MENOS .

    PIZQ            reduce using rule 103 (ope -> MENOS .)
    MENOS           reduce using rule 103 (ope -> MENOS .)
    NOT             reduce using rule 103 (ope -> MENOS .)
    CTE_STR         reduce using rule 103 (ope -> MENOS .)
    CTE_CHAR        reduce using rule 103 (ope -> MENOS .)
    CTE_NUMERAL     reduce using rule 103 (ope -> MENOS .)
    CTE_REAL        reduce using rule 103 (ope -> MENOS .)
    TRUE            reduce using rule 103 (ope -> MENOS .)
    FALSE           reduce using rule 103 (ope -> MENOS .)
    ID              reduce using rule 103 (ope -> MENOS .)
    THIS            reduce using rule 103 (ope -> MENOS .)


state 158

    (111) ope -> MAYORIGUAL .

    PIZQ            reduce using rule 111 (ope -> MAYORIGUAL .)
    MENOS           reduce using rule 111 (ope -> MAYORIGUAL .)
    NOT             reduce using rule 111 (ope -> MAYORIGUAL .)
    CTE_STR         reduce using rule 111 (ope -> MAYORIGUAL .)
    CTE_CHAR        reduce using rule 111 (ope -> MAYORIGUAL .)
    CTE_NUMERAL     reduce using rule 111 (ope -> MAYORIGUAL .)
    CTE_REAL        reduce using rule 111 (ope -> MAYORIGUAL .)
    TRUE            reduce using rule 111 (ope -> MAYORIGUAL .)
    FALSE           reduce using rule 111 (ope -> MAYORIGUAL .)
    ID              reduce using rule 111 (ope -> MAYORIGUAL .)
    THIS            reduce using rule 111 (ope -> MAYORIGUAL .)


state 159

    (109) ope -> MENORIGUAL .

    PIZQ            reduce using rule 109 (ope -> MENORIGUAL .)
    MENOS           reduce using rule 109 (ope -> MENORIGUAL .)
    NOT             reduce using rule 109 (ope -> MENORIGUAL .)
    CTE_STR         reduce using rule 109 (ope -> MENORIGUAL .)
    CTE_CHAR        reduce using rule 109 (ope -> MENORIGUAL .)
    CTE_NUMERAL     reduce using rule 109 (ope -> MENORIGUAL .)
    CTE_REAL        reduce using rule 109 (ope -> MENORIGUAL .)
    TRUE            reduce using rule 109 (ope -> MENORIGUAL .)
    FALSE           reduce using rule 109 (ope -> MENORIGUAL .)
    ID              reduce using rule 109 (ope -> MENORIGUAL .)
    THIS            reduce using rule 109 (ope -> MENORIGUAL .)


state 160

    (107) ope -> IGUALC .

    PIZQ            reduce using rule 107 (ope -> IGUALC .)
    MENOS           reduce using rule 107 (ope -> IGUALC .)
    NOT             reduce using rule 107 (ope -> IGUALC .)
    CTE_STR         reduce using rule 107 (ope -> IGUALC .)
    CTE_CHAR        reduce using rule 107 (ope -> IGUALC .)
    CTE_NUMERAL     reduce using rule 107 (ope -> IGUALC .)
    CTE_REAL        reduce using rule 107 (ope -> IGUALC .)
    TRUE            reduce using rule 107 (ope -> IGUALC .)
    FALSE           reduce using rule 107 (ope -> IGUALC .)
    ID              reduce using rule 107 (ope -> IGUALC .)
    THIS            reduce using rule 107 (ope -> IGUALC .)


state 161

    (110) ope -> MAYOR .

    PIZQ            reduce using rule 110 (ope -> MAYOR .)
    MENOS           reduce using rule 110 (ope -> MAYOR .)
    NOT             reduce using rule 110 (ope -> MAYOR .)
    CTE_STR         reduce using rule 110 (ope -> MAYOR .)
    CTE_CHAR        reduce using rule 110 (ope -> MAYOR .)
    CTE_NUMERAL     reduce using rule 110 (ope -> MAYOR .)
    CTE_REAL        reduce using rule 110 (ope -> MAYOR .)
    TRUE            reduce using rule 110 (ope -> MAYOR .)
    FALSE           reduce using rule 110 (ope -> MAYOR .)
    ID              reduce using rule 110 (ope -> MAYOR .)
    THIS            reduce using rule 110 (ope -> MAYOR .)


state 162

    (104) ope -> MOD .

    PIZQ            reduce using rule 104 (ope -> MOD .)
    MENOS           reduce using rule 104 (ope -> MOD .)
    NOT             reduce using rule 104 (ope -> MOD .)
    CTE_STR         reduce using rule 104 (ope -> MOD .)
    CTE_CHAR        reduce using rule 104 (ope -> MOD .)
    CTE_NUMERAL     reduce using rule 104 (ope -> MOD .)
    CTE_REAL        reduce using rule 104 (ope -> MOD .)
    TRUE            reduce using rule 104 (ope -> MOD .)
    FALSE           reduce using rule 104 (ope -> MOD .)
    ID              reduce using rule 104 (ope -> MOD .)
    THIS            reduce using rule 104 (ope -> MOD .)


state 163

    (72) llamada_func -> ID PIZQ . exp_ciclo PDER
    (76) llamada_func -> ID PIZQ . PDER
    (80) exp_ciclo -> . exp
    (81) exp_ciclo -> . exp_ciclo COMA exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PDER            shift and go to state 205
    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    exp_ciclo                      shift and go to state 206
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 207
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 164

    (121) atom -> ID PUNTO . ID COIZQ exp CODER
    (122) atom -> ID PUNTO . ID
    (74) llamada_func -> ID PUNTO . ID PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO . ID PIZQ PDER

    ID              shift and go to state 208


state 165

    (123) atom -> ID COIZQ . exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID COIZQ . exp CODER PUNTO ID
    (126) atom -> ID COIZQ . exp CODER
    (75) llamada_func -> ID COIZQ . exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ . exp CODER PUNTO ID PIZQ PDER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 209
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 166

    (127) atom -> THIS PUNTO . ID
    (128) atom -> THIS PUNTO . ID COIZQ exp CODER
    (73) llamada_func -> THIS PUNTO . ID PIZQ exp_ciclo PDER
    (77) llamada_func -> THIS PUNTO . ID PIZQ PDER

    ID              shift and go to state 210


state 167

    (88) exp -> MENOS PIZQ . exp PDER ope exp
    (90) exp -> MENOS PIZQ . exp PDER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 211
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 168

    (99) opciones -> MENOS CTE_REAL .

    MAS             reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    MENOS           reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    MOD             reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    ENTRE           reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    POR             reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    IGUALC          reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    MENOR           reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    MENORIGUAL      reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    MAYOR           reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    MAYORIGUAL      reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    NOTIGUAL        reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    AND             reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    OR              reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    PDER            reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    COMA            reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    CODER           reduce using rule 99 (opciones -> MENOS CTE_REAL .)
    PYC             reduce using rule 99 (opciones -> MENOS CTE_REAL .)


state 169

    (100) opciones -> MENOS atom .

    MAS             reduce using rule 100 (opciones -> MENOS atom .)
    MENOS           reduce using rule 100 (opciones -> MENOS atom .)
    MOD             reduce using rule 100 (opciones -> MENOS atom .)
    ENTRE           reduce using rule 100 (opciones -> MENOS atom .)
    POR             reduce using rule 100 (opciones -> MENOS atom .)
    IGUALC          reduce using rule 100 (opciones -> MENOS atom .)
    MENOR           reduce using rule 100 (opciones -> MENOS atom .)
    MENORIGUAL      reduce using rule 100 (opciones -> MENOS atom .)
    MAYOR           reduce using rule 100 (opciones -> MENOS atom .)
    MAYORIGUAL      reduce using rule 100 (opciones -> MENOS atom .)
    NOTIGUAL        reduce using rule 100 (opciones -> MENOS atom .)
    AND             reduce using rule 100 (opciones -> MENOS atom .)
    OR              reduce using rule 100 (opciones -> MENOS atom .)
    PDER            reduce using rule 100 (opciones -> MENOS atom .)
    COMA            reduce using rule 100 (opciones -> MENOS atom .)
    CODER           reduce using rule 100 (opciones -> MENOS atom .)
    PYC             reduce using rule 100 (opciones -> MENOS atom .)


state 170

    (101) opciones -> MENOS llamada_func .

    MAS             reduce using rule 101 (opciones -> MENOS llamada_func .)
    MENOS           reduce using rule 101 (opciones -> MENOS llamada_func .)
    MOD             reduce using rule 101 (opciones -> MENOS llamada_func .)
    ENTRE           reduce using rule 101 (opciones -> MENOS llamada_func .)
    POR             reduce using rule 101 (opciones -> MENOS llamada_func .)
    IGUALC          reduce using rule 101 (opciones -> MENOS llamada_func .)
    MENOR           reduce using rule 101 (opciones -> MENOS llamada_func .)
    MENORIGUAL      reduce using rule 101 (opciones -> MENOS llamada_func .)
    MAYOR           reduce using rule 101 (opciones -> MENOS llamada_func .)
    MAYORIGUAL      reduce using rule 101 (opciones -> MENOS llamada_func .)
    NOTIGUAL        reduce using rule 101 (opciones -> MENOS llamada_func .)
    AND             reduce using rule 101 (opciones -> MENOS llamada_func .)
    OR              reduce using rule 101 (opciones -> MENOS llamada_func .)
    PDER            reduce using rule 101 (opciones -> MENOS llamada_func .)
    COMA            reduce using rule 101 (opciones -> MENOS llamada_func .)
    CODER           reduce using rule 101 (opciones -> MENOS llamada_func .)
    PYC             reduce using rule 101 (opciones -> MENOS llamada_func .)


state 171

    (98) opciones -> MENOS CTE_NUMERAL .

    MAS             reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    MENOS           reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    MOD             reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    ENTRE           reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    POR             reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    IGUALC          reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    MENOR           reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    MAYOR           reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    AND             reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    OR              reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    PDER            reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    COMA            reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    CODER           reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)
    PYC             reduce using rule 98 (opciones -> MENOS CTE_NUMERAL .)


state 172

    (89) exp -> NOT exp .

    CODER           reduce using rule 89 (exp -> NOT exp .)
    COMA            reduce using rule 89 (exp -> NOT exp .)
    PYC             reduce using rule 89 (exp -> NOT exp .)
    PDER            reduce using rule 89 (exp -> NOT exp .)


state 173

    (27) ciclo_tipo -> ID declararVariable COIZQ exp CODER .
    (31) ciclo_tipo -> ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 27 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 27 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 212


state 174

    (39) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL . atom
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER

    ID              shift and go to state 118
    THIS            shift and go to state 116

    atom                           shift and go to state 213

state 175

    (37) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ . exp CODER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 214
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 176

    (127) atom -> THIS PUNTO . ID
    (128) atom -> THIS PUNTO . ID COIZQ exp CODER

    ID              shift and go to state 215


state 177

    (123) atom -> ID COIZQ . exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID COIZQ . exp CODER PUNTO ID
    (126) atom -> ID COIZQ . exp CODER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 216
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 178

    (121) atom -> ID PUNTO . ID COIZQ exp CODER
    (122) atom -> ID PUNTO . ID

    ID              shift and go to state 217


state 179

    (35) ciclo_id -> ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 35 (ciclo_id -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 35 (ciclo_id -> ID declararVariable COIZQ exp CODER .)


state 180

    (54) params_ciclo -> tipo ID meterParametros .

    PDER            reduce using rule 54 (params_ciclo -> tipo ID meterParametros .)
    COMA            reduce using rule 54 (params_ciclo -> tipo ID meterParametros .)


state 181

    (55) params_ciclo -> params_ciclo COMA tipo . ID meterParametros

    ID              shift and go to state 218


state 182

    (115) return -> RETURN exp . PYC

    PYC             shift and go to state 219


state 183

    (116) return -> RETURN PYC .

    LLDER           reduce using rule 116 (return -> RETURN PYC .)
    WHILE           reduce using rule 116 (return -> RETURN PYC .)
    OUTPUT          reduce using rule 116 (return -> RETURN PYC .)
    INPUT           reduce using rule 116 (return -> RETURN PYC .)
    ID              reduce using rule 116 (return -> RETURN PYC .)
    THIS            reduce using rule 116 (return -> RETURN PYC .)
    RETURN          reduce using rule 116 (return -> RETURN PYC .)
    IF              reduce using rule 116 (return -> RETURN PYC .)


state 184

    (119) asignacion -> atom IGUAL . exp PYC
    (120) asignacion -> atom IGUAL . NEW ID PIZQ PDER PYC
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    NEW             shift and go to state 220
    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 221
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 185

    (117) while -> WHILE PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> WHILE PIZQ . exp PDER LLIZQ LLDER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 222
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 186

    (26) ciclo_tipo -> ID . declararVariable
    (27) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (30) ciclo_tipo -> ID . declararVariable IGUAL exp
    (31) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (40) declararVariable -> .

    COIZQ           reduce using rule 40 (declararVariable -> .)
    IGUAL           reduce using rule 40 (declararVariable -> .)
    COMA            reduce using rule 40 (declararVariable -> .)
    PYC             reduce using rule 40 (declararVariable -> .)

    declararVariable               shift and go to state 71

state 187

    (62) ciclo_vars_func -> ciclo_vars_func vars .

    LLDER           reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    ID              reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    WHILE           reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    OUTPUT          reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    INPUT           reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    THIS            reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    RETURN          reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    NUMERAL         reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    REAL            reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    BOOL            reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    CHAR            reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    STRING          reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    IF              reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)


state 188

    (58) cuerpo_func -> LLIZQ ciclo_vars_func LLDER .

    HIDDEN          reduce using rule 58 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    VISIBLE         reduce using rule 58 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    LLDER           reduce using rule 58 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)


state 189

    (57) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto . LLDER
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 223
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    estatuto                       shift and go to state 196
    ciclo_cond                     shift and go to state 141
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    lectura                        shift and go to state 132
    escritura                      shift and go to state 144

state 190

    (135) lectura -> INPUT PIZQ . atom PDER PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER

    ID              shift and go to state 118
    THIS            shift and go to state 116

    atom                           shift and go to state 224

state 191

    (70) estatuto -> llamada_func PYC .

    LLDER           reduce using rule 70 (estatuto -> llamada_func PYC .)
    WHILE           reduce using rule 70 (estatuto -> llamada_func PYC .)
    OUTPUT          reduce using rule 70 (estatuto -> llamada_func PYC .)
    INPUT           reduce using rule 70 (estatuto -> llamada_func PYC .)
    ID              reduce using rule 70 (estatuto -> llamada_func PYC .)
    THIS            reduce using rule 70 (estatuto -> llamada_func PYC .)
    RETURN          reduce using rule 70 (estatuto -> llamada_func PYC .)
    IF              reduce using rule 70 (estatuto -> llamada_func PYC .)


state 192

    (75) llamada_func -> ID COIZQ . exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ . exp CODER PUNTO ID PIZQ PDER
    (123) atom -> ID COIZQ . exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID COIZQ . exp CODER PUNTO ID
    (126) atom -> ID COIZQ . exp CODER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 225
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 193

    (74) llamada_func -> ID PUNTO . ID PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO . ID PIZQ PDER
    (121) atom -> ID PUNTO . ID COIZQ exp CODER
    (122) atom -> ID PUNTO . ID

    ID              shift and go to state 226


state 194

    (131) ciclo_cond -> IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> IF PIZQ . exp PDER LLIZQ LLDER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 227
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 195

    (73) llamada_func -> THIS PUNTO . ID PIZQ exp_ciclo PDER
    (77) llamada_func -> THIS PUNTO . ID PIZQ PDER
    (127) atom -> THIS PUNTO . ID
    (128) atom -> THIS PUNTO . ID COIZQ exp CODER

    ID              shift and go to state 228


state 196

    (64) ciclo_estatuto -> ciclo_estatuto estatuto .

    LLDER           reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    WHILE           reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    OUTPUT          reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    INPUT           reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    ID              reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    THIS            reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    RETURN          reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    IF              reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)


state 197

    (59) cuerpo_func -> LLIZQ ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    LLDER           reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)


state 198

    (72) llamada_func -> ID . PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . PIZQ PDER
    (78) llamada_func -> ID . PUNTO ID PIZQ PDER
    (79) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ PDER
    (121) atom -> ID . PUNTO ID COIZQ exp CODER
    (122) atom -> ID . PUNTO ID
    (123) atom -> ID . COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID . COIZQ exp CODER PUNTO ID
    (125) atom -> ID .
    (126) atom -> ID . COIZQ exp CODER

    PIZQ            shift and go to state 163
    PUNTO           shift and go to state 193
    COIZQ           shift and go to state 192
    IGUAL           reduce using rule 125 (atom -> ID .)


state 199

    (129) condicion -> ciclo_cond ELSE . LLIZQ ciclo_estatuto LLDER
    (130) condicion -> ciclo_cond ELSE . LLIZQ LLDER
    (133) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ LLDER

    LLIZQ           shift and go to state 229
    IF              shift and go to state 230


state 200

    (136) escritura -> OUTPUT PIZQ . exp PDER PYC
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 231
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 201

    (32) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .

    COMA            reduce using rule 32 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)
    PYC             reduce using rule 32 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)


state 202

    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER IGUAL exp

    CODER           shift and go to state 232


state 203

    (86) exp -> PIZQ exp PDER .
    (87) exp -> PIZQ exp PDER . ope exp
    (102) ope -> . MAS
    (103) ope -> . MENOS
    (104) ope -> . MOD
    (105) ope -> . ENTRE
    (106) ope -> . POR
    (107) ope -> . IGUALC
    (108) ope -> . MENOR
    (109) ope -> . MENORIGUAL
    (110) ope -> . MAYOR
    (111) ope -> . MAYORIGUAL
    (112) ope -> . NOTIGUAL
    (113) ope -> . AND
    (114) ope -> . OR

    CODER           reduce using rule 86 (exp -> PIZQ exp PDER .)
    COMA            reduce using rule 86 (exp -> PIZQ exp PDER .)
    PYC             reduce using rule 86 (exp -> PIZQ exp PDER .)
    PDER            reduce using rule 86 (exp -> PIZQ exp PDER .)
    MAS             shift and go to state 150
    MENOS           shift and go to state 157
    MOD             shift and go to state 162
    ENTRE           shift and go to state 152
    POR             shift and go to state 153
    IGUALC          shift and go to state 160
    MENOR           shift and go to state 156
    MENORIGUAL      shift and go to state 159
    MAYOR           shift and go to state 161
    MAYORIGUAL      shift and go to state 158
    NOTIGUAL        shift and go to state 151
    AND             shift and go to state 149
    OR              shift and go to state 154

    ope                            shift and go to state 233

state 204

    (84) exp -> opciones ope exp .

    CODER           reduce using rule 84 (exp -> opciones ope exp .)
    COMA            reduce using rule 84 (exp -> opciones ope exp .)
    PYC             reduce using rule 84 (exp -> opciones ope exp .)
    PDER            reduce using rule 84 (exp -> opciones ope exp .)


state 205

    (76) llamada_func -> ID PIZQ PDER .

    MAS             reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    MENOS           reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    MOD             reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    ENTRE           reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    POR             reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    IGUALC          reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    MENOR           reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    MAYOR           reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    NOTIGUAL        reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    AND             reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    OR              reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    CODER           reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    PYC             reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    PDER            reduce using rule 76 (llamada_func -> ID PIZQ PDER .)
    COMA            reduce using rule 76 (llamada_func -> ID PIZQ PDER .)


state 206

    (72) llamada_func -> ID PIZQ exp_ciclo . PDER
    (81) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 234
    COMA            shift and go to state 235


state 207

    (80) exp_ciclo -> exp .

    PDER            reduce using rule 80 (exp_ciclo -> exp .)
    COMA            reduce using rule 80 (exp_ciclo -> exp .)


state 208

    (121) atom -> ID PUNTO ID . COIZQ exp CODER
    (122) atom -> ID PUNTO ID .
    (74) llamada_func -> ID PUNTO ID . PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO ID . PIZQ PDER

    COIZQ           shift and go to state 237
    MAS             reduce using rule 122 (atom -> ID PUNTO ID .)
    MENOS           reduce using rule 122 (atom -> ID PUNTO ID .)
    MOD             reduce using rule 122 (atom -> ID PUNTO ID .)
    ENTRE           reduce using rule 122 (atom -> ID PUNTO ID .)
    POR             reduce using rule 122 (atom -> ID PUNTO ID .)
    IGUALC          reduce using rule 122 (atom -> ID PUNTO ID .)
    MENOR           reduce using rule 122 (atom -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 122 (atom -> ID PUNTO ID .)
    MAYOR           reduce using rule 122 (atom -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 122 (atom -> ID PUNTO ID .)
    NOTIGUAL        reduce using rule 122 (atom -> ID PUNTO ID .)
    AND             reduce using rule 122 (atom -> ID PUNTO ID .)
    OR              reduce using rule 122 (atom -> ID PUNTO ID .)
    COMA            reduce using rule 122 (atom -> ID PUNTO ID .)
    PYC             reduce using rule 122 (atom -> ID PUNTO ID .)
    CODER           reduce using rule 122 (atom -> ID PUNTO ID .)
    PDER            reduce using rule 122 (atom -> ID PUNTO ID .)
    PIZQ            shift and go to state 236


state 209

    (123) atom -> ID COIZQ exp . CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID COIZQ exp . CODER PUNTO ID
    (126) atom -> ID COIZQ exp . CODER
    (75) llamada_func -> ID COIZQ exp . CODER PUNTO ID PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ exp . CODER PUNTO ID PIZQ PDER

    CODER           shift and go to state 238


state 210

    (127) atom -> THIS PUNTO ID .
    (128) atom -> THIS PUNTO ID . COIZQ exp CODER
    (73) llamada_func -> THIS PUNTO ID . PIZQ exp_ciclo PDER
    (77) llamada_func -> THIS PUNTO ID . PIZQ PDER

    MAS             reduce using rule 127 (atom -> THIS PUNTO ID .)
    MENOS           reduce using rule 127 (atom -> THIS PUNTO ID .)
    MOD             reduce using rule 127 (atom -> THIS PUNTO ID .)
    ENTRE           reduce using rule 127 (atom -> THIS PUNTO ID .)
    POR             reduce using rule 127 (atom -> THIS PUNTO ID .)
    IGUALC          reduce using rule 127 (atom -> THIS PUNTO ID .)
    MENOR           reduce using rule 127 (atom -> THIS PUNTO ID .)
    MENORIGUAL      reduce using rule 127 (atom -> THIS PUNTO ID .)
    MAYOR           reduce using rule 127 (atom -> THIS PUNTO ID .)
    MAYORIGUAL      reduce using rule 127 (atom -> THIS PUNTO ID .)
    NOTIGUAL        reduce using rule 127 (atom -> THIS PUNTO ID .)
    AND             reduce using rule 127 (atom -> THIS PUNTO ID .)
    OR              reduce using rule 127 (atom -> THIS PUNTO ID .)
    COMA            reduce using rule 127 (atom -> THIS PUNTO ID .)
    PYC             reduce using rule 127 (atom -> THIS PUNTO ID .)
    CODER           reduce using rule 127 (atom -> THIS PUNTO ID .)
    PDER            reduce using rule 127 (atom -> THIS PUNTO ID .)
    COIZQ           shift and go to state 240
    PIZQ            shift and go to state 239


state 211

    (88) exp -> MENOS PIZQ exp . PDER ope exp
    (90) exp -> MENOS PIZQ exp . PDER

    PDER            shift and go to state 241


state 212

    (31) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL . exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 242
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 213

    (39) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom .

    COMA            reduce using rule 39 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom .)
    PYC             reduce using rule 39 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom .)


state 214

    (37) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp . CODER

    CODER           shift and go to state 243


state 215

    (127) atom -> THIS PUNTO ID .
    (128) atom -> THIS PUNTO ID . COIZQ exp CODER

    PDER            reduce using rule 127 (atom -> THIS PUNTO ID .)
    COMA            reduce using rule 127 (atom -> THIS PUNTO ID .)
    PYC             reduce using rule 127 (atom -> THIS PUNTO ID .)
    COIZQ           shift and go to state 240


state 216

    (123) atom -> ID COIZQ exp . CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID COIZQ exp . CODER PUNTO ID
    (126) atom -> ID COIZQ exp . CODER

    CODER           shift and go to state 244


state 217

    (121) atom -> ID PUNTO ID . COIZQ exp CODER
    (122) atom -> ID PUNTO ID .

    COIZQ           shift and go to state 237
    PDER            reduce using rule 122 (atom -> ID PUNTO ID .)
    COMA            reduce using rule 122 (atom -> ID PUNTO ID .)
    PYC             reduce using rule 122 (atom -> ID PUNTO ID .)


state 218

    (55) params_ciclo -> params_ciclo COMA tipo ID . meterParametros
    (56) meterParametros -> .

    PDER            reduce using rule 56 (meterParametros -> .)
    COMA            reduce using rule 56 (meterParametros -> .)

    meterParametros                shift and go to state 245

state 219

    (115) return -> RETURN exp PYC .

    LLDER           reduce using rule 115 (return -> RETURN exp PYC .)
    WHILE           reduce using rule 115 (return -> RETURN exp PYC .)
    OUTPUT          reduce using rule 115 (return -> RETURN exp PYC .)
    INPUT           reduce using rule 115 (return -> RETURN exp PYC .)
    ID              reduce using rule 115 (return -> RETURN exp PYC .)
    THIS            reduce using rule 115 (return -> RETURN exp PYC .)
    RETURN          reduce using rule 115 (return -> RETURN exp PYC .)
    IF              reduce using rule 115 (return -> RETURN exp PYC .)


state 220

    (120) asignacion -> atom IGUAL NEW . ID PIZQ PDER PYC

    ID              shift and go to state 246


state 221

    (119) asignacion -> atom IGUAL exp . PYC

    PYC             shift and go to state 247


state 222

    (117) while -> WHILE PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> WHILE PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 248


state 223

    (57) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 57 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 57 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    LLDER           reduce using rule 57 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)


state 224

    (135) lectura -> INPUT PIZQ atom . PDER PYC

    PDER            shift and go to state 249


state 225

    (75) llamada_func -> ID COIZQ exp . CODER PUNTO ID PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ exp . CODER PUNTO ID PIZQ PDER
    (123) atom -> ID COIZQ exp . CODER PUNTO ID COIZQ exp CODER
    (124) atom -> ID COIZQ exp . CODER PUNTO ID
    (126) atom -> ID COIZQ exp . CODER

    CODER           shift and go to state 250


state 226

    (74) llamada_func -> ID PUNTO ID . PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO ID . PIZQ PDER
    (121) atom -> ID PUNTO ID . COIZQ exp CODER
    (122) atom -> ID PUNTO ID .

    PIZQ            shift and go to state 236
    COIZQ           shift and go to state 237
    IGUAL           reduce using rule 122 (atom -> ID PUNTO ID .)


state 227

    (131) ciclo_cond -> IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> IF PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 251


state 228

    (73) llamada_func -> THIS PUNTO ID . PIZQ exp_ciclo PDER
    (77) llamada_func -> THIS PUNTO ID . PIZQ PDER
    (127) atom -> THIS PUNTO ID .
    (128) atom -> THIS PUNTO ID . COIZQ exp CODER

    PIZQ            shift and go to state 239
    IGUAL           reduce using rule 127 (atom -> THIS PUNTO ID .)
    COIZQ           shift and go to state 240


state 229

    (129) condicion -> ciclo_cond ELSE LLIZQ . ciclo_estatuto LLDER
    (130) condicion -> ciclo_cond ELSE LLIZQ . LLDER
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 252
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    ciclo_estatuto                 shift and go to state 253
    estatuto                       shift and go to state 129
    lectura                        shift and go to state 132
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    ciclo_cond                     shift and go to state 141
    escritura                      shift and go to state 144

state 230

    (133) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 254


state 231

    (136) escritura -> OUTPUT PIZQ exp . PDER PYC

    PDER            shift and go to state 255


state 232

    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .
    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 256


state 233

    (87) exp -> PIZQ exp PDER ope . exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 257
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 234

    (72) llamada_func -> ID PIZQ exp_ciclo PDER .

    MAS             reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    POR             reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    AND             reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    OR              reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 72 (llamada_func -> ID PIZQ exp_ciclo PDER .)


state 235

    (81) exp_ciclo -> exp_ciclo COMA . exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 258
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 236

    (74) llamada_func -> ID PUNTO ID PIZQ . exp_ciclo PDER
    (78) llamada_func -> ID PUNTO ID PIZQ . PDER
    (80) exp_ciclo -> . exp
    (81) exp_ciclo -> . exp_ciclo COMA exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PDER            shift and go to state 259
    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    exp_ciclo                      shift and go to state 260
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 207
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 237

    (121) atom -> ID PUNTO ID COIZQ . exp CODER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 261
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 238

    (123) atom -> ID COIZQ exp CODER . PUNTO ID COIZQ exp CODER
    (124) atom -> ID COIZQ exp CODER . PUNTO ID
    (126) atom -> ID COIZQ exp CODER .
    (75) llamada_func -> ID COIZQ exp CODER . PUNTO ID PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ exp CODER . PUNTO ID PIZQ PDER

    PUNTO           shift and go to state 262
    MAS             reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    MENOS           reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    MOD             reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    ENTRE           reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    POR             reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    IGUALC          reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    MENOR           reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    MAYOR           reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    AND             reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    OR              reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    COMA            reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    PYC             reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    CODER           reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    PDER            reduce using rule 126 (atom -> ID COIZQ exp CODER .)


state 239

    (73) llamada_func -> THIS PUNTO ID PIZQ . exp_ciclo PDER
    (77) llamada_func -> THIS PUNTO ID PIZQ . PDER
    (80) exp_ciclo -> . exp
    (81) exp_ciclo -> . exp_ciclo COMA exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PDER            shift and go to state 263
    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    exp_ciclo                      shift and go to state 264
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 207
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 240

    (128) atom -> THIS PUNTO ID COIZQ . exp CODER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 265
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 241

    (88) exp -> MENOS PIZQ exp PDER . ope exp
    (90) exp -> MENOS PIZQ exp PDER .
    (102) ope -> . MAS
    (103) ope -> . MENOS
    (104) ope -> . MOD
    (105) ope -> . ENTRE
    (106) ope -> . POR
    (107) ope -> . IGUALC
    (108) ope -> . MENOR
    (109) ope -> . MENORIGUAL
    (110) ope -> . MAYOR
    (111) ope -> . MAYORIGUAL
    (112) ope -> . NOTIGUAL
    (113) ope -> . AND
    (114) ope -> . OR

    CODER           reduce using rule 90 (exp -> MENOS PIZQ exp PDER .)
    COMA            reduce using rule 90 (exp -> MENOS PIZQ exp PDER .)
    PYC             reduce using rule 90 (exp -> MENOS PIZQ exp PDER .)
    PDER            reduce using rule 90 (exp -> MENOS PIZQ exp PDER .)
    MAS             shift and go to state 150
    MENOS           shift and go to state 157
    MOD             shift and go to state 162
    ENTRE           shift and go to state 152
    POR             shift and go to state 153
    IGUALC          shift and go to state 160
    MENOR           shift and go to state 156
    MENORIGUAL      shift and go to state 159
    MAYOR           shift and go to state 161
    MAYORIGUAL      shift and go to state 158
    NOTIGUAL        shift and go to state 151
    AND             shift and go to state 149
    OR              shift and go to state 154

    ope                            shift and go to state 266

state 242

    (31) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .

    COMA            reduce using rule 31 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 31 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)


state 243

    (37) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)


state 244

    (123) atom -> ID COIZQ exp CODER . PUNTO ID COIZQ exp CODER
    (124) atom -> ID COIZQ exp CODER . PUNTO ID
    (126) atom -> ID COIZQ exp CODER .

    PUNTO           shift and go to state 267
    PDER            reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    COMA            reduce using rule 126 (atom -> ID COIZQ exp CODER .)
    PYC             reduce using rule 126 (atom -> ID COIZQ exp CODER .)


state 245

    (55) params_ciclo -> params_ciclo COMA tipo ID meterParametros .

    PDER            reduce using rule 55 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)
    COMA            reduce using rule 55 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)


state 246

    (120) asignacion -> atom IGUAL NEW ID . PIZQ PDER PYC

    PIZQ            shift and go to state 268


state 247

    (119) asignacion -> atom IGUAL exp PYC .

    LLDER           reduce using rule 119 (asignacion -> atom IGUAL exp PYC .)
    WHILE           reduce using rule 119 (asignacion -> atom IGUAL exp PYC .)
    OUTPUT          reduce using rule 119 (asignacion -> atom IGUAL exp PYC .)
    INPUT           reduce using rule 119 (asignacion -> atom IGUAL exp PYC .)
    ID              reduce using rule 119 (asignacion -> atom IGUAL exp PYC .)
    THIS            reduce using rule 119 (asignacion -> atom IGUAL exp PYC .)
    RETURN          reduce using rule 119 (asignacion -> atom IGUAL exp PYC .)
    IF              reduce using rule 119 (asignacion -> atom IGUAL exp PYC .)


state 248

    (117) while -> WHILE PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (118) while -> WHILE PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 269


state 249

    (135) lectura -> INPUT PIZQ atom PDER . PYC

    PYC             shift and go to state 270


state 250

    (75) llamada_func -> ID COIZQ exp CODER . PUNTO ID PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ exp CODER . PUNTO ID PIZQ PDER
    (123) atom -> ID COIZQ exp CODER . PUNTO ID COIZQ exp CODER
    (124) atom -> ID COIZQ exp CODER . PUNTO ID
    (126) atom -> ID COIZQ exp CODER .

    PUNTO           shift and go to state 271
    IGUAL           reduce using rule 126 (atom -> ID COIZQ exp CODER .)


state 251

    (131) ciclo_cond -> IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 272


state 252

    (130) condicion -> ciclo_cond ELSE LLIZQ LLDER .

    LLDER           reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    WHILE           reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    OUTPUT          reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    INPUT           reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    ID              reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    THIS            reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    RETURN          reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    IF              reduce using rule 130 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)


state 253

    (129) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto . LLDER
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 273
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    estatuto                       shift and go to state 196
    lectura                        shift and go to state 132
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    ciclo_cond                     shift and go to state 141
    escritura                      shift and go to state 144

state 254

    (133) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ LLDER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 274
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 255

    (136) escritura -> OUTPUT PIZQ exp PDER . PYC

    PYC             shift and go to state 275


state 256

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL . exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    atom                           shift and go to state 105
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 276
    llamada_func                   shift and go to state 106

state 257

    (87) exp -> PIZQ exp PDER ope exp .

    CODER           reduce using rule 87 (exp -> PIZQ exp PDER ope exp .)
    COMA            reduce using rule 87 (exp -> PIZQ exp PDER ope exp .)
    PYC             reduce using rule 87 (exp -> PIZQ exp PDER ope exp .)
    PDER            reduce using rule 87 (exp -> PIZQ exp PDER ope exp .)


state 258

    (81) exp_ciclo -> exp_ciclo COMA exp .

    PDER            reduce using rule 81 (exp_ciclo -> exp_ciclo COMA exp .)
    COMA            reduce using rule 81 (exp_ciclo -> exp_ciclo COMA exp .)


state 259

    (78) llamada_func -> ID PUNTO ID PIZQ PDER .

    MAS             reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MENOS           reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MOD             reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    ENTRE           reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    POR             reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    IGUALC          reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MENOR           reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MAYOR           reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    NOTIGUAL        reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    AND             reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    OR              reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    CODER           reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    PYC             reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    PDER            reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    COMA            reduce using rule 78 (llamada_func -> ID PUNTO ID PIZQ PDER .)


state 260

    (74) llamada_func -> ID PUNTO ID PIZQ exp_ciclo . PDER
    (81) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 277
    COMA            shift and go to state 235


state 261

    (121) atom -> ID PUNTO ID COIZQ exp . CODER

    CODER           shift and go to state 278


state 262

    (123) atom -> ID COIZQ exp CODER PUNTO . ID COIZQ exp CODER
    (124) atom -> ID COIZQ exp CODER PUNTO . ID
    (75) llamada_func -> ID COIZQ exp CODER PUNTO . ID PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ exp CODER PUNTO . ID PIZQ PDER

    ID              shift and go to state 279


state 263

    (77) llamada_func -> THIS PUNTO ID PIZQ PDER .

    MAS             reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MENOS           reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MOD             reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    ENTRE           reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    POR             reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    IGUALC          reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MENOR           reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MAYOR           reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    NOTIGUAL        reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    AND             reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    OR              reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    CODER           reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    PYC             reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    PDER            reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    COMA            reduce using rule 77 (llamada_func -> THIS PUNTO ID PIZQ PDER .)


state 264

    (73) llamada_func -> THIS PUNTO ID PIZQ exp_ciclo . PDER
    (81) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 280
    COMA            shift and go to state 235


state 265

    (128) atom -> THIS PUNTO ID COIZQ exp . CODER

    CODER           shift and go to state 281


state 266

    (88) exp -> MENOS PIZQ exp PDER ope . exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 282
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 267

    (123) atom -> ID COIZQ exp CODER PUNTO . ID COIZQ exp CODER
    (124) atom -> ID COIZQ exp CODER PUNTO . ID

    ID              shift and go to state 283


state 268

    (120) asignacion -> atom IGUAL NEW ID PIZQ . PDER PYC

    PDER            shift and go to state 284


state 269

    (117) while -> WHILE PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (118) while -> WHILE PIZQ exp PDER LLIZQ . LLDER
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 285
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    ciclo_estatuto                 shift and go to state 286
    estatuto                       shift and go to state 129
    ciclo_cond                     shift and go to state 141
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    lectura                        shift and go to state 132
    escritura                      shift and go to state 144

state 270

    (135) lectura -> INPUT PIZQ atom PDER PYC .

    LLDER           reduce using rule 135 (lectura -> INPUT PIZQ atom PDER PYC .)
    WHILE           reduce using rule 135 (lectura -> INPUT PIZQ atom PDER PYC .)
    OUTPUT          reduce using rule 135 (lectura -> INPUT PIZQ atom PDER PYC .)
    INPUT           reduce using rule 135 (lectura -> INPUT PIZQ atom PDER PYC .)
    ID              reduce using rule 135 (lectura -> INPUT PIZQ atom PDER PYC .)
    THIS            reduce using rule 135 (lectura -> INPUT PIZQ atom PDER PYC .)
    RETURN          reduce using rule 135 (lectura -> INPUT PIZQ atom PDER PYC .)
    IF              reduce using rule 135 (lectura -> INPUT PIZQ atom PDER PYC .)


state 271

    (75) llamada_func -> ID COIZQ exp CODER PUNTO . ID PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ exp CODER PUNTO . ID PIZQ PDER
    (123) atom -> ID COIZQ exp CODER PUNTO . ID COIZQ exp CODER
    (124) atom -> ID COIZQ exp CODER PUNTO . ID

    ID              shift and go to state 287


state 272

    (131) ciclo_cond -> IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (132) ciclo_cond -> IF PIZQ exp PDER LLIZQ . LLDER
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 288
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    ciclo_estatuto                 shift and go to state 289
    estatuto                       shift and go to state 129
    ciclo_cond                     shift and go to state 141
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    lectura                        shift and go to state 132
    escritura                      shift and go to state 144

state 273

    (129) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 129 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)


state 274

    (133) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 290


state 275

    (136) escritura -> OUTPUT PIZQ exp PDER PYC .

    LLDER           reduce using rule 136 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    WHILE           reduce using rule 136 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    OUTPUT          reduce using rule 136 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    INPUT           reduce using rule 136 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    ID              reduce using rule 136 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    THIS            reduce using rule 136 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    RETURN          reduce using rule 136 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    IF              reduce using rule 136 (escritura -> OUTPUT PIZQ exp PDER PYC .)


state 276

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .

    COMA            reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)


state 277

    (74) llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .

    MAS             reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    POR             reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    AND             reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    OR              reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 74 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)


state 278

    (121) atom -> ID PUNTO ID COIZQ exp CODER .

    IGUAL           reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MAS             reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MENOS           reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MOD             reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    ENTRE           reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    POR             reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    IGUALC          reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MENOR           reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MAYOR           reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    AND             reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    OR              reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    COMA            reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    PYC             reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    CODER           reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)
    PDER            reduce using rule 121 (atom -> ID PUNTO ID COIZQ exp CODER .)


state 279

    (123) atom -> ID COIZQ exp CODER PUNTO ID . COIZQ exp CODER
    (124) atom -> ID COIZQ exp CODER PUNTO ID .
    (75) llamada_func -> ID COIZQ exp CODER PUNTO ID . PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ exp CODER PUNTO ID . PIZQ PDER

    COIZQ           shift and go to state 292
    MAS             reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MENOS           reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MOD             reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    ENTRE           reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    POR             reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    IGUALC          reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MENOR           reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MENORIGUAL      reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MAYOR           reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MAYORIGUAL      reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    NOTIGUAL        reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    AND             reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    OR              reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    COMA            reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    PYC             reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    CODER           reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    PDER            reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    PIZQ            shift and go to state 291


state 280

    (73) llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .

    MAS             reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    POR             reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    AND             reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    OR              reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 73 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)


state 281

    (128) atom -> THIS PUNTO ID COIZQ exp CODER .

    IGUAL           reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MAS             reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MENOS           reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MOD             reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    ENTRE           reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    POR             reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    IGUALC          reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MENOR           reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MAYOR           reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    AND             reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    OR              reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    COMA            reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    PYC             reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    CODER           reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    PDER            reduce using rule 128 (atom -> THIS PUNTO ID COIZQ exp CODER .)


state 282

    (88) exp -> MENOS PIZQ exp PDER ope exp .

    CODER           reduce using rule 88 (exp -> MENOS PIZQ exp PDER ope exp .)
    COMA            reduce using rule 88 (exp -> MENOS PIZQ exp PDER ope exp .)
    PYC             reduce using rule 88 (exp -> MENOS PIZQ exp PDER ope exp .)
    PDER            reduce using rule 88 (exp -> MENOS PIZQ exp PDER ope exp .)


state 283

    (123) atom -> ID COIZQ exp CODER PUNTO ID . COIZQ exp CODER
    (124) atom -> ID COIZQ exp CODER PUNTO ID .

    COIZQ           shift and go to state 292
    PDER            reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    COMA            reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)
    PYC             reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)


state 284

    (120) asignacion -> atom IGUAL NEW ID PIZQ PDER . PYC

    PYC             shift and go to state 293


state 285

    (118) while -> WHILE PIZQ exp PDER LLIZQ LLDER .

    LLDER           reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    WHILE           reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    OUTPUT          reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    INPUT           reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    ID              reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    THIS            reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    RETURN          reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    IF              reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)


state 286

    (117) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 294
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    estatuto                       shift and go to state 196
    ciclo_cond                     shift and go to state 141
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    lectura                        shift and go to state 132
    escritura                      shift and go to state 144

state 287

    (75) llamada_func -> ID COIZQ exp CODER PUNTO ID . PIZQ exp_ciclo PDER
    (79) llamada_func -> ID COIZQ exp CODER PUNTO ID . PIZQ PDER
    (123) atom -> ID COIZQ exp CODER PUNTO ID . COIZQ exp CODER
    (124) atom -> ID COIZQ exp CODER PUNTO ID .

    PIZQ            shift and go to state 291
    COIZQ           shift and go to state 292
    IGUAL           reduce using rule 124 (atom -> ID COIZQ exp CODER PUNTO ID .)


state 288

    (132) ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)


state 289

    (131) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 295
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    estatuto                       shift and go to state 196
    ciclo_cond                     shift and go to state 141
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    lectura                        shift and go to state 132
    escritura                      shift and go to state 144

state 290

    (133) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 296


state 291

    (75) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ . exp_ciclo PDER
    (79) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ . PDER
    (80) exp_ciclo -> . exp
    (81) exp_ciclo -> . exp_ciclo COMA exp
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PDER            shift and go to state 297
    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    exp_ciclo                      shift and go to state 298
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 207
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 292

    (123) atom -> ID COIZQ exp CODER PUNTO ID COIZQ . exp CODER
    (84) exp -> . opciones ope exp
    (85) exp -> . opciones
    (86) exp -> . PIZQ exp PDER
    (87) exp -> . PIZQ exp PDER ope exp
    (88) exp -> . MENOS PIZQ exp PDER ope exp
    (89) exp -> . NOT exp
    (90) exp -> . MENOS PIZQ exp PDER
    (91) opciones -> . CTE_STR
    (92) opciones -> . CTE_CHAR
    (93) opciones -> . CTE_NUMERAL
    (94) opciones -> . CTE_REAL
    (95) opciones -> . cte_bool
    (96) opciones -> . atom
    (97) opciones -> . llamada_func
    (98) opciones -> . MENOS CTE_NUMERAL
    (99) opciones -> . MENOS CTE_REAL
    (100) opciones -> . MENOS atom
    (101) opciones -> . MENOS llamada_func
    (82) cte_bool -> . TRUE
    (83) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 97
    MENOS           shift and go to state 110
    NOT             shift and go to state 112
    CTE_STR         shift and go to state 104
    CTE_CHAR        shift and go to state 102
    CTE_NUMERAL     shift and go to state 100
    CTE_REAL        shift and go to state 101
    TRUE            shift and go to state 99
    FALSE           shift and go to state 108
    ID              shift and go to state 107
    THIS            shift and go to state 109

    opciones                       shift and go to state 103
    cte_bool                       shift and go to state 98
    exp                            shift and go to state 299
    atom                           shift and go to state 105
    llamada_func                   shift and go to state 106

state 293

    (120) asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .

    LLDER           reduce using rule 120 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    WHILE           reduce using rule 120 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    OUTPUT          reduce using rule 120 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    INPUT           reduce using rule 120 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    ID              reduce using rule 120 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    THIS            reduce using rule 120 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    RETURN          reduce using rule 120 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    IF              reduce using rule 120 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)


state 294

    (117) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 117 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 295

    (131) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 131 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 296

    (133) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . LLDER
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 300
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    ciclo_estatuto                 shift and go to state 301
    estatuto                       shift and go to state 129
    lectura                        shift and go to state 132
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    ciclo_cond                     shift and go to state 141
    escritura                      shift and go to state 144

state 297

    (79) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .

    MAS             reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MENOS           reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MOD             reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    ENTRE           reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    POR             reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    IGUALC          reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MENOR           reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MAYOR           reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    NOTIGUAL        reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    AND             reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    OR              reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    CODER           reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    PYC             reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    PDER            reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    COMA            reduce using rule 79 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)


state 298

    (75) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo . PDER
    (81) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 302
    COMA            shift and go to state 235


state 299

    (123) atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp . CODER

    CODER           shift and go to state 303


state 300

    (134) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)


state 301

    (133) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func PYC
    (71) estatuto -> . return
    (117) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (118) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (119) asignacion -> . atom IGUAL exp PYC
    (120) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (129) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (130) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (136) escritura -> . OUTPUT PIZQ exp PDER PYC
    (135) lectura -> . INPUT PIZQ atom PDER PYC
    (72) llamada_func -> . ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID PIZQ PDER
    (77) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (78) llamada_func -> . ID PUNTO ID PIZQ PDER
    (79) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (115) return -> . RETURN exp PYC
    (116) return -> . RETURN PYC
    (121) atom -> . ID PUNTO ID COIZQ exp CODER
    (122) atom -> . ID PUNTO ID
    (123) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (124) atom -> . ID COIZQ exp CODER PUNTO ID
    (125) atom -> . ID
    (126) atom -> . ID COIZQ exp CODER
    (127) atom -> . THIS PUNTO ID
    (128) atom -> . THIS PUNTO ID COIZQ exp CODER
    (131) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (133) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 304
    WHILE           shift and go to state 126
    OUTPUT          shift and go to state 143
    INPUT           shift and go to state 134
    ID              shift and go to state 198
    THIS            shift and go to state 139
    RETURN          shift and go to state 123
    IF              shift and go to state 137

    return                         shift and go to state 127
    asignacion                     shift and go to state 138
    estatuto                       shift and go to state 196
    lectura                        shift and go to state 132
    while                          shift and go to state 142
    condicion                      shift and go to state 131
    atom                           shift and go to state 125
    llamada_func                   shift and go to state 135
    ciclo_cond                     shift and go to state 141
    escritura                      shift and go to state 144

state 302

    (75) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .

    MAS             reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    POR             reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    AND             reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    OR              reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 75 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)


state 303

    (123) atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .

    IGUAL           reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MAS             reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MENOS           reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MOD             reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    ENTRE           reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    POR             reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    IGUALC          reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MENOR           reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MAYOR           reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    AND             reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    OR              reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    COMA            reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    PYC             reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    CODER           reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    PDER            reduce using rule 123 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)


state 304

    (133) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 133 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)

