Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ciclo_clase clase_main
Rule 2     programa -> clase_main
Rule 3     ciclo_clase -> clase
Rule 4     ciclo_clase -> ciclo_clase clase
Rule 5     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
Rule 6     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
Rule 7     clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
Rule 8     clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual
Rule 9     declararClase -> <empty>
Rule 10    limpiarMetodoActual -> <empty>
Rule 11    limpiarInvocador -> <empty>
Rule 12    herencia -> empty
Rule 13    herencia -> UNDER ID agregaAncestro
Rule 14    agregaAncestro -> <empty>
Rule 15    ciclo_vars -> acceso vars
Rule 16    ciclo_vars -> ciclo_vars acceso vars
Rule 17    ciclo_func -> func
Rule 18    ciclo_func -> ciclo_func func
Rule 19    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
Rule 20    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
Rule 21    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
Rule 22    clase_main -> CLASS MAIN declararClase LLIZQ main LLDER
Rule 23    vars -> var_op PYC
Rule 24    var_op -> tipo ciclo_tipo
Rule 25    var_op -> ID revisarExistenciaClase DOSP ciclo_id
Rule 26    revisarExistenciaClase -> <empty>
Rule 27    ciclo_tipo -> ID declararVariable
Rule 28    ciclo_tipo -> ID COIZQ cte_numeral CODER declararVariableDim
Rule 29    ciclo_tipo -> ciclo_tipo COMA ID declararVariable
Rule 30    ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim
Rule 31    ciclo_id -> ID declararVariable
Rule 32    ciclo_id -> ciclo_id COMA ID declararVariable
Rule 33    declararVariableDim -> <empty>
Rule 34    declararVariable -> <empty>
Rule 35    tipo -> NUMERAL
Rule 36    tipo -> REAL
Rule 37    tipo -> BOOL
Rule 38    tipo -> CHAR
Rule 39    tipo -> STRING
Rule 40    acceso -> HIDDEN
Rule 41    acceso -> VISIBLE
Rule 42    func -> acceso tipo ID declararMetodo params cuerpo_func
Rule 43    func -> acceso WITHOUT ID declararMetodo params cuerpo_func
Rule 44    declararMetodo -> <empty>
Rule 45    main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
Rule 46    params -> PIZQ params_ciclo PDER
Rule 47    params -> PIZQ PDER
Rule 48    params_ciclo -> tipo ID meterParametros
Rule 49    params_ciclo -> tipo ID COIZQ pruebita cte_numeral CODER meterParametrosDim
Rule 50    params_ciclo -> params_ciclo COMA tipo ID meterParametros
Rule 51    params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim
Rule 52    pruebita -> <empty>
Rule 53    meterParametrosDim -> <empty>
Rule 54    meterParametros -> <empty>
Rule 55    cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER
Rule 56    cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER
Rule 57    cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER
Rule 58    cuerpo_func -> inicioFunc LLIZQ LLDER
Rule 59    inicioFunc -> <empty>
Rule 60    ciclo_vars_func -> vars
Rule 61    ciclo_vars_func -> ciclo_vars_func vars
Rule 62    ciclo_estatuto -> estatuto
Rule 63    ciclo_estatuto -> ciclo_estatuto estatuto
Rule 64    estatuto -> while
Rule 65    estatuto -> asignacion
Rule 66    estatuto -> condicion
Rule 67    estatuto -> escritura
Rule 68    estatuto -> lectura
Rule 69    estatuto -> llamada_func limpiarInvocador PYC
Rule 70    estatuto -> return
Rule 71    llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
Rule 72    llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
Rule 73    llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
Rule 74    llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
Rule 75    generarGosub -> <empty>
Rule 76    generaEra -> <empty>
Rule 77    checarFuncion -> <empty>
Rule 78    definirInvocador -> <empty>
Rule 79    exp_ciclo -> exp
Rule 80    exp_ciclo -> exp_ciclo COMA exp
Rule 81    exp -> exp MAS exp
Rule 82    exp -> exp MENOS exp
Rule 83    exp -> exp POR exp
Rule 84    exp -> exp ENTRE exp
Rule 85    exp -> exp MOD exp
Rule 86    exp -> exp IGUALC exp
Rule 87    exp -> exp NOTIGUAL exp
Rule 88    exp -> exp MAYOR exp
Rule 89    exp -> exp MAYORIGUAL exp
Rule 90    exp -> exp MENOR exp
Rule 91    exp -> exp MENORIGUAL exp
Rule 92    exp -> exp AND exp
Rule 93    exp -> exp OR exp
Rule 94    exp -> NOT exp
Rule 95    exp -> MENOS exp
Rule 96    exp -> PIZQ exp PDER
Rule 97    exp -> cte_str
Rule 98    exp -> cte_char
Rule 99    exp -> cte_numeral
Rule 100   exp -> cte_real
Rule 101   exp -> cte_bool
Rule 102   exp -> atom limpiarInvocador
Rule 103   exp -> llamada_func limpiarInvocador
Rule 104   cte_str -> CTE_STR
Rule 105   cte_char -> CTE_CHAR
Rule 106   cte_numeral -> CTE_NUMERAL
Rule 107   cte_real -> CTE_REAL
Rule 108   cte_bool -> TRUE
Rule 109   cte_bool -> FALSE
Rule 110   return -> RETURN exp PYC
Rule 111   return -> RETURN PYC
Rule 112   while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
Rule 113   while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
Rule 114   while_1 -> <empty>
Rule 115   while_2 -> <empty>
Rule 116   while_3 -> <empty>
Rule 117   asignacion -> atom limpiarInvocador IGUAL exp PYC
Rule 118   atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
Rule 119   atom -> ID checarAtributoDim COIZQ exp CODER
Rule 120   atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
Rule 121   atom -> ID PUNTO definirInvocador ID checarAtributo
Rule 122   atom -> ID checarAtributo
Rule 123   atom -> THIS PUNTO definirInvocador ID checarAtributo
Rule 124   checarAtributoDim -> <empty>
Rule 125   checarAtributo -> <empty>
Rule 126   condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
Rule 127   condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4
Rule 128   condicion -> ciclo_cond if_4
Rule 129   ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
Rule 130   ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
Rule 131   ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
Rule 132   ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER
Rule 133   if_1 -> <empty>
Rule 134   if_2 -> <empty>
Rule 135   if_3 -> <empty>
Rule 136   if_4 -> <empty>
Rule 137   lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC
Rule 138   escritura -> OUTPUT PIZQ exp PDER PYC
Rule 139   empty -> <empty>

Terminals, with rules where they appear

AND                  : 92
BOOL                 : 37
CHAR                 : 38
CLASS                : 5 6 7 8 19 20 21 22
CODER                : 28 30 49 51 118 119 120
COIZQ                : 28 30 49 51 118 119 120
COMA                 : 29 30 32 50 51 80
CTE_CHAR             : 105
CTE_NUMERAL          : 106
CTE_REAL             : 107
CTE_STR              : 104
DOSP                 : 25
ELSE                 : 126 127 131 132
ENTRE                : 84
FALSE                : 109
HIDDEN               : 40
ID                   : 5 6 7 8 13 25 27 28 29 30 31 32 42 43 48 49 50 51 71 71 72 72 73 74 118 118 119 120 121 121 122 123
IF                   : 129 130 131 132
IGUAL                : 117
IGUALC               : 86
INPUT                : 137
LLDER                : 5 6 7 8 19 20 21 22 55 56 57 58 112 113 126 127 129 130 131 132
LLIZQ                : 5 6 7 8 19 20 21 22 55 56 57 58 112 113 126 127 129 130 131 132
MAIN                 : 19 20 21 22 45
MAS                  : 81
MAYOR                : 88
MAYORIGUAL           : 89
MENOR                : 90
MENORIGUAL           : 91
MENOS                : 82 95
MOD                  : 85
NOT                  : 94
NOTIGUAL             : 87
NUMERAL              : 35
OR                   : 93
OUTPUT               : 138
PDER                 : 45 46 47 71 72 73 74 96 112 113 129 130 131 132 137 138
PIZQ                 : 45 46 47 71 72 73 74 96 112 113 129 130 131 132 137 138
POR                  : 83
PUNTO                : 71 72 118 120 121 123
PYC                  : 23 69 110 111 117 137 138
REAL                 : 36
RETURN               : 110 111
STRING               : 39
THIS                 : 120 123
TRUE                 : 108
UNDER                : 13
VISIBLE              : 41
WHILE                : 112 113
WITHOUT              : 43 45
error                : 

Nonterminals, with rules where they appear

acceso               : 15 16 42 43 45
agregaAncestro       : 13
asignacion           : 65
atom                 : 102 117 137
checarAtributo       : 121 122 123
checarAtributoDim    : 118 119 120
checarFuncion        : 71 72 73 74
ciclo_clase          : 1 4
ciclo_cond           : 126 127 128 131 132
ciclo_estatuto       : 55 57 63 112 126 129 131
ciclo_func           : 5 7 18 19 21
ciclo_id             : 25 32
ciclo_tipo           : 24 29 30
ciclo_vars           : 5 6 16 19 20
ciclo_vars_func      : 55 56 61
clase                : 3 4
clase_main           : 1 2
condicion            : 66
cte_bool             : 101
cte_char             : 98
cte_numeral          : 28 30 49 51 99
cte_real             : 100
cte_str              : 97
cuerpo_func          : 42 43 45
declararClase        : 5 6 7 8 19 20 21 22
declararMetodo       : 42 43 45
declararVariable     : 27 29 31 32
declararVariableDim  : 28 30
definirInvocador     : 71 72 118 120 121 123
empty                : 12
escritura            : 67
estatuto             : 62 63
exp                  : 79 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 95 96 110 112 113 117 118 119 120 129 130 131 132 138
exp_ciclo            : 71 73 80
func                 : 17 18
generaEra            : 71 72 73 74
generarGosub         : 71 72 73 74
herencia             : 5 6 7 8
if_1                 : 129 130 131 132
if_2                 : 129 130 131 132
if_3                 : 126 127 131 132
if_4                 : 126 127 128
inicioFunc           : 55 56 57 58
lectura              : 68
limpiarInvocador     : 69 71 72 73 74 102 103 117 137
limpiarMetodoActual  : 5 6 7 8
llamada_func         : 69 103
main                 : 19 20 21 22
meterParametros      : 48 50
meterParametrosDim   : 49 51
params               : 42 43
params_ciclo         : 46 50 51
programa             : 0
pruebita             : 49
return               : 70
revisarExistenciaClase : 25
tipo                 : 24 42 48 49 50 51
var_op               : 23
vars                 : 15 16 60 61
while                : 64
while_1              : 112 113
while_2              : 112 113
while_3              : 112 113

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ciclo_clase clase_main
    (2) programa -> . clase_main
    (3) ciclo_clase -> . clase
    (4) ciclo_clase -> . ciclo_clase clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    ciclo_clase                    shift and go to state 1
    clase_main                     shift and go to state 2
    clase                          shift and go to state 3
    programa                       shift and go to state 4

state 1

    (1) programa -> ciclo_clase . clase_main
    (4) ciclo_clase -> ciclo_clase . clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    clase_main                     shift and go to state 6
    clase                          shift and go to state 7

state 2

    (2) programa -> clase_main .

    $end            reduce using rule 2 (programa -> clase_main .)


state 3

    (3) ciclo_clase -> clase .

    CLASS           reduce using rule 3 (ciclo_clase -> clase .)


state 4

    (0) S' -> programa .



state 5

    (19) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS . MAIN declararClase LLIZQ main LLDER
    (5) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS . ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    MAIN            shift and go to state 8
    ID              shift and go to state 9


state 6

    (1) programa -> ciclo_clase clase_main .

    $end            reduce using rule 1 (programa -> ciclo_clase clase_main .)


state 7

    (4) ciclo_clase -> ciclo_clase clase .

    CLASS           reduce using rule 4 (ciclo_clase -> ciclo_clase clase .)


state 8

    (19) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN . declararClase LLIZQ main LLDER
    (9) declararClase -> .

    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 10

state 9

    (5) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID . declararClase herencia LLIZQ LLDER limpiarMetodoActual
    (9) declararClase -> .

    UNDER           reduce using rule 9 (declararClase -> .)
    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 11

state 10

    (19) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase . LLIZQ main LLDER

    LLIZQ           shift and go to state 12


state 11

    (5) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase . herencia LLIZQ LLDER limpiarMetodoActual
    (12) herencia -> . empty
    (13) herencia -> . UNDER ID agregaAncestro
    (139) empty -> .

    UNDER           shift and go to state 13
    LLIZQ           reduce using rule 139 (empty -> .)

    herencia                       shift and go to state 14
    empty                          shift and go to state 15

state 12

    (19) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase LLIZQ . main LLDER
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (45) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 18
    ciclo_func                     shift and go to state 17
    ciclo_vars                     shift and go to state 19
    func                           shift and go to state 21
    main                           shift and go to state 16

state 13

    (13) herencia -> UNDER . ID agregaAncestro

    ID              shift and go to state 23


state 14

    (5) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia . LLIZQ LLDER limpiarMetodoActual

    LLIZQ           shift and go to state 24


state 15

    (12) herencia -> empty .

    LLIZQ           reduce using rule 12 (herencia -> empty .)


state 16

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main . LLDER

    LLDER           shift and go to state 25


state 17

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (45) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 28

state 18

    (15) ciclo_vars -> acceso . vars
    (45) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 30
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 19

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . main LLDER
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (45) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 41
    ciclo_func                     shift and go to state 40
    func                           shift and go to state 21
    main                           shift and go to state 39

state 20

    (41) acceso -> VISIBLE .

    WITHOUT         reduce using rule 41 (acceso -> VISIBLE .)
    NUMERAL         reduce using rule 41 (acceso -> VISIBLE .)
    REAL            reduce using rule 41 (acceso -> VISIBLE .)
    BOOL            reduce using rule 41 (acceso -> VISIBLE .)
    CHAR            reduce using rule 41 (acceso -> VISIBLE .)
    STRING          reduce using rule 41 (acceso -> VISIBLE .)
    ID              reduce using rule 41 (acceso -> VISIBLE .)


state 21

    (17) ciclo_func -> func .

    LLDER           reduce using rule 17 (ciclo_func -> func .)
    HIDDEN          reduce using rule 17 (ciclo_func -> func .)
    VISIBLE         reduce using rule 17 (ciclo_func -> func .)


state 22

    (40) acceso -> HIDDEN .

    WITHOUT         reduce using rule 40 (acceso -> HIDDEN .)
    NUMERAL         reduce using rule 40 (acceso -> HIDDEN .)
    REAL            reduce using rule 40 (acceso -> HIDDEN .)
    BOOL            reduce using rule 40 (acceso -> HIDDEN .)
    CHAR            reduce using rule 40 (acceso -> HIDDEN .)
    STRING          reduce using rule 40 (acceso -> HIDDEN .)
    ID              reduce using rule 40 (acceso -> HIDDEN .)


state 23

    (13) herencia -> UNDER ID . agregaAncestro
    (14) agregaAncestro -> .

    LLIZQ           reduce using rule 14 (agregaAncestro -> .)

    agregaAncestro                 shift and go to state 42

state 24

    (5) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia LLIZQ . LLDER limpiarMetodoActual
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 43
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 45
    ciclo_func                     shift and go to state 44
    ciclo_vars                     shift and go to state 46
    func                           shift and go to state 21

state 25

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .

    $end            reduce using rule 22 (clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .)


state 26

    (45) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 47

state 27

    (18) ciclo_func -> ciclo_func func .

    LLDER           reduce using rule 18 (ciclo_func -> ciclo_func func .)
    HIDDEN          reduce using rule 18 (ciclo_func -> ciclo_func func .)
    VISIBLE         reduce using rule 18 (ciclo_func -> ciclo_func func .)


state 28

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main . LLDER

    LLDER           shift and go to state 48


state 29

    (36) tipo -> REAL .

    ID              reduce using rule 36 (tipo -> REAL .)


state 30

    (15) ciclo_vars -> acceso vars .

    HIDDEN          reduce using rule 15 (ciclo_vars -> acceso vars .)
    VISIBLE         reduce using rule 15 (ciclo_vars -> acceso vars .)
    LLDER           reduce using rule 15 (ciclo_vars -> acceso vars .)


state 31

    (38) tipo -> CHAR .

    ID              reduce using rule 38 (tipo -> CHAR .)


state 32

    (23) vars -> var_op . PYC

    PYC             shift and go to state 49


state 33

    (35) tipo -> NUMERAL .

    ID              reduce using rule 35 (tipo -> NUMERAL .)


state 34

    (42) func -> acceso tipo . ID declararMetodo params cuerpo_func
    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID COIZQ cte_numeral CODER declararVariableDim
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim

    ID              shift and go to state 51

    ciclo_tipo                     shift and go to state 50

state 35

    (39) tipo -> STRING .

    ID              reduce using rule 39 (tipo -> STRING .)


state 36

    (45) main -> acceso WITHOUT . MAIN declararMetodo PIZQ PDER cuerpo_func
    (43) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    MAIN            shift and go to state 53
    ID              shift and go to state 52


state 37

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (26) revisarExistenciaClase -> .

    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)

    revisarExistenciaClase         shift and go to state 54

state 38

    (37) tipo -> BOOL .

    ID              reduce using rule 37 (tipo -> BOOL .)


state 39

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main . LLDER

    LLDER           shift and go to state 55


state 40

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (45) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 56

state 41

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (45) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 57
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 42

    (13) herencia -> UNDER ID agregaAncestro .

    LLIZQ           reduce using rule 13 (herencia -> UNDER ID agregaAncestro .)


state 43

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 58

state 44

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE

    LLDER           shift and go to state 59
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 45

    (15) ciclo_vars -> acceso . vars
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 30
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 46

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . LLDER limpiarMetodoActual
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 62
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 64
    ciclo_func                     shift and go to state 63
    func                           shift and go to state 21

state 47

    (42) func -> acceso tipo . ID declararMetodo params cuerpo_func

    ID              shift and go to state 65


state 48

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .

    $end            reduce using rule 21 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .)


state 49

    (23) vars -> var_op PYC .

    HIDDEN          reduce using rule 23 (vars -> var_op PYC .)
    VISIBLE         reduce using rule 23 (vars -> var_op PYC .)
    LLDER           reduce using rule 23 (vars -> var_op PYC .)
    ID              reduce using rule 23 (vars -> var_op PYC .)
    WHILE           reduce using rule 23 (vars -> var_op PYC .)
    OUTPUT          reduce using rule 23 (vars -> var_op PYC .)
    INPUT           reduce using rule 23 (vars -> var_op PYC .)
    RETURN          reduce using rule 23 (vars -> var_op PYC .)
    NUMERAL         reduce using rule 23 (vars -> var_op PYC .)
    REAL            reduce using rule 23 (vars -> var_op PYC .)
    BOOL            reduce using rule 23 (vars -> var_op PYC .)
    CHAR            reduce using rule 23 (vars -> var_op PYC .)
    STRING          reduce using rule 23 (vars -> var_op PYC .)
    THIS            reduce using rule 23 (vars -> var_op PYC .)
    IF              reduce using rule 23 (vars -> var_op PYC .)


state 50

    (24) var_op -> tipo ciclo_tipo .
    (29) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo . COMA ID COIZQ cte_numeral CODER declararVariableDim

    PYC             reduce using rule 24 (var_op -> tipo ciclo_tipo .)
    COMA            shift and go to state 66


state 51

    (42) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . COIZQ cte_numeral CODER declararVariableDim
    (44) declararMetodo -> .
    (34) declararVariable -> .

    COIZQ           shift and go to state 69
    PIZQ            reduce using rule 44 (declararMetodo -> .)
    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 67
    declararMetodo                 shift and go to state 68

state 52

    (43) func -> acceso WITHOUT ID . declararMetodo params cuerpo_func
    (44) declararMetodo -> .

    PIZQ            reduce using rule 44 (declararMetodo -> .)

    declararMetodo                 shift and go to state 70

state 53

    (45) main -> acceso WITHOUT MAIN . declararMetodo PIZQ PDER cuerpo_func
    (44) declararMetodo -> .

    PIZQ            reduce using rule 44 (declararMetodo -> .)

    declararMetodo                 shift and go to state 71

state 54

    (25) var_op -> ID revisarExistenciaClase . DOSP ciclo_id

    DOSP            shift and go to state 72


state 55

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .

    $end            reduce using rule 20 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .)


state 56

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main . LLDER

    LLDER           shift and go to state 73


state 57

    (16) ciclo_vars -> ciclo_vars acceso vars .

    HIDDEN          reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    VISIBLE         reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    LLDER           reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)


state 58

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .

    CLASS           reduce using rule 8 (clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .)


state 59

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 74

state 60

    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 47

state 61

    (43) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    ID              shift and go to state 52


state 62

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 75

state 63

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE

    LLDER           shift and go to state 76
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 64

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 57
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 65

    (42) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (44) declararMetodo -> .

    PIZQ            reduce using rule 44 (declararMetodo -> .)

    declararMetodo                 shift and go to state 68

state 66

    (29) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA . ID COIZQ cte_numeral CODER declararVariableDim

    ID              shift and go to state 77


state 67

    (27) ciclo_tipo -> ID declararVariable .

    COMA            reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    PYC             reduce using rule 27 (ciclo_tipo -> ID declararVariable .)


state 68

    (42) func -> acceso tipo ID declararMetodo . params cuerpo_func
    (46) params -> . PIZQ params_ciclo PDER
    (47) params -> . PIZQ PDER

    PIZQ            shift and go to state 78

    params                         shift and go to state 79

state 69

    (28) ciclo_tipo -> ID COIZQ . cte_numeral CODER declararVariableDim
    (106) cte_numeral -> . CTE_NUMERAL

    CTE_NUMERAL     shift and go to state 81

    cte_numeral                    shift and go to state 80

state 70

    (43) func -> acceso WITHOUT ID declararMetodo . params cuerpo_func
    (46) params -> . PIZQ params_ciclo PDER
    (47) params -> . PIZQ PDER

    PIZQ            shift and go to state 78

    params                         shift and go to state 82

state 71

    (45) main -> acceso WITHOUT MAIN declararMetodo . PIZQ PDER cuerpo_func

    PIZQ            shift and go to state 83


state 72

    (25) var_op -> ID revisarExistenciaClase DOSP . ciclo_id
    (31) ciclo_id -> . ID declararVariable
    (32) ciclo_id -> . ciclo_id COMA ID declararVariable

    ID              shift and go to state 85

    ciclo_id                       shift and go to state 84

state 73

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .

    $end            reduce using rule 19 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .)


state 74

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 7 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .)


state 75

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .

    CLASS           reduce using rule 6 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .)


state 76

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 86

state 77

    (29) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA ID . COIZQ cte_numeral CODER declararVariableDim
    (34) declararVariable -> .

    COIZQ           shift and go to state 88
    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 87

state 78

    (46) params -> PIZQ . params_ciclo PDER
    (47) params -> PIZQ . PDER
    (48) params_ciclo -> . tipo ID meterParametros
    (49) params_ciclo -> . tipo ID COIZQ pruebita cte_numeral CODER meterParametrosDim
    (50) params_ciclo -> . params_ciclo COMA tipo ID meterParametros
    (51) params_ciclo -> . params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING

    PDER            shift and go to state 91
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 89
    params_ciclo                   shift and go to state 90

state 79

    (42) func -> acceso tipo ID declararMetodo params . cuerpo_func
    (55) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (56) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func LLDER
    (57) cuerpo_func -> . inicioFunc LLIZQ ciclo_estatuto LLDER
    (58) cuerpo_func -> . inicioFunc LLIZQ LLDER
    (59) inicioFunc -> .

    LLIZQ           reduce using rule 59 (inicioFunc -> .)

    inicioFunc                     shift and go to state 92
    cuerpo_func                    shift and go to state 93

state 80

    (28) ciclo_tipo -> ID COIZQ cte_numeral . CODER declararVariableDim

    CODER           shift and go to state 94


state 81

    (106) cte_numeral -> CTE_NUMERAL .

    MAS             reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    MENOS           reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    POR             reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    ENTRE           reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    MOD             reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    IGUALC          reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    MAYOR           reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    MENOR           reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    AND             reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    OR              reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    PYC             reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    PDER            reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    CODER           reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)
    COMA            reduce using rule 106 (cte_numeral -> CTE_NUMERAL .)


state 82

    (43) func -> acceso WITHOUT ID declararMetodo params . cuerpo_func
    (55) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (56) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func LLDER
    (57) cuerpo_func -> . inicioFunc LLIZQ ciclo_estatuto LLDER
    (58) cuerpo_func -> . inicioFunc LLIZQ LLDER
    (59) inicioFunc -> .

    LLIZQ           reduce using rule 59 (inicioFunc -> .)

    inicioFunc                     shift and go to state 92
    cuerpo_func                    shift and go to state 95

state 83

    (45) main -> acceso WITHOUT MAIN declararMetodo PIZQ . PDER cuerpo_func

    PDER            shift and go to state 96


state 84

    (25) var_op -> ID revisarExistenciaClase DOSP ciclo_id .
    (32) ciclo_id -> ciclo_id . COMA ID declararVariable

    PYC             reduce using rule 25 (var_op -> ID revisarExistenciaClase DOSP ciclo_id .)
    COMA            shift and go to state 97


state 85

    (31) ciclo_id -> ID . declararVariable
    (34) declararVariable -> .

    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 98

state 86

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 5 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .)


state 87

    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable .

    COMA            reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    PYC             reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)


state 88

    (30) ciclo_tipo -> ciclo_tipo COMA ID COIZQ . cte_numeral CODER declararVariableDim
    (106) cte_numeral -> . CTE_NUMERAL

    CTE_NUMERAL     shift and go to state 81

    cte_numeral                    shift and go to state 99

state 89

    (48) params_ciclo -> tipo . ID meterParametros
    (49) params_ciclo -> tipo . ID COIZQ pruebita cte_numeral CODER meterParametrosDim

    ID              shift and go to state 100


state 90

    (46) params -> PIZQ params_ciclo . PDER
    (50) params_ciclo -> params_ciclo . COMA tipo ID meterParametros
    (51) params_ciclo -> params_ciclo . COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim

    PDER            shift and go to state 101
    COMA            shift and go to state 102


state 91

    (47) params -> PIZQ PDER .

    LLIZQ           reduce using rule 47 (params -> PIZQ PDER .)


state 92

    (55) cuerpo_func -> inicioFunc . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (56) cuerpo_func -> inicioFunc . LLIZQ ciclo_vars_func LLDER
    (57) cuerpo_func -> inicioFunc . LLIZQ ciclo_estatuto LLDER
    (58) cuerpo_func -> inicioFunc . LLIZQ LLDER

    LLIZQ           shift and go to state 103


state 93

    (42) func -> acceso tipo ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 42 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 42 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 42 (func -> acceso tipo ID declararMetodo params cuerpo_func .)


state 94

    (28) ciclo_tipo -> ID COIZQ cte_numeral CODER . declararVariableDim
    (33) declararVariableDim -> .

    COMA            reduce using rule 33 (declararVariableDim -> .)
    PYC             reduce using rule 33 (declararVariableDim -> .)

    declararVariableDim            shift and go to state 104

state 95

    (43) func -> acceso WITHOUT ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 43 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 43 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 43 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)


state 96

    (45) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER . cuerpo_func
    (55) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (56) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func LLDER
    (57) cuerpo_func -> . inicioFunc LLIZQ ciclo_estatuto LLDER
    (58) cuerpo_func -> . inicioFunc LLIZQ LLDER
    (59) inicioFunc -> .

    LLIZQ           reduce using rule 59 (inicioFunc -> .)

    inicioFunc                     shift and go to state 92
    cuerpo_func                    shift and go to state 105

state 97

    (32) ciclo_id -> ciclo_id COMA . ID declararVariable

    ID              shift and go to state 106


state 98

    (31) ciclo_id -> ID declararVariable .

    COMA            reduce using rule 31 (ciclo_id -> ID declararVariable .)
    PYC             reduce using rule 31 (ciclo_id -> ID declararVariable .)


state 99

    (30) ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral . CODER declararVariableDim

    CODER           shift and go to state 107


state 100

    (48) params_ciclo -> tipo ID . meterParametros
    (49) params_ciclo -> tipo ID . COIZQ pruebita cte_numeral CODER meterParametrosDim
    (54) meterParametros -> .

    COIZQ           shift and go to state 109
    PDER            reduce using rule 54 (meterParametros -> .)
    COMA            reduce using rule 54 (meterParametros -> .)

    meterParametros                shift and go to state 108

state 101

    (46) params -> PIZQ params_ciclo PDER .

    LLIZQ           reduce using rule 46 (params -> PIZQ params_ciclo PDER .)


state 102

    (50) params_ciclo -> params_ciclo COMA . tipo ID meterParametros
    (51) params_ciclo -> params_ciclo COMA . tipo ID COIZQ cte_numeral CODER meterParametrosDim
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING

    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 110

state 103

    (55) cuerpo_func -> inicioFunc LLIZQ . ciclo_vars_func ciclo_estatuto LLDER
    (56) cuerpo_func -> inicioFunc LLIZQ . ciclo_vars_func LLDER
    (57) cuerpo_func -> inicioFunc LLIZQ . ciclo_estatuto LLDER
    (58) cuerpo_func -> inicioFunc LLIZQ . LLDER
    (60) ciclo_vars_func -> . vars
    (61) ciclo_vars_func -> . ciclo_vars_func vars
    (62) ciclo_estatuto -> . estatuto
    (63) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 121
    ID              shift and go to state 124
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    RETURN          shift and go to state 111
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    THIS            shift and go to state 129
    IF              shift and go to state 125

    vars                           shift and go to state 112
    atom                           shift and go to state 113
    var_op                         shift and go to state 32
    llamada_func                   shift and go to state 123
    tipo                           shift and go to state 116
    estatuto                       shift and go to state 117
    ciclo_vars_func                shift and go to state 118
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 127
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 104

    (28) ciclo_tipo -> ID COIZQ cte_numeral CODER declararVariableDim .

    COMA            reduce using rule 28 (ciclo_tipo -> ID COIZQ cte_numeral CODER declararVariableDim .)
    PYC             reduce using rule 28 (ciclo_tipo -> ID COIZQ cte_numeral CODER declararVariableDim .)


state 105

    (45) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .

    LLDER           reduce using rule 45 (main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .)


state 106

    (32) ciclo_id -> ciclo_id COMA ID . declararVariable
    (34) declararVariable -> .

    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 133

state 107

    (30) ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER . declararVariableDim
    (33) declararVariableDim -> .

    COMA            reduce using rule 33 (declararVariableDim -> .)
    PYC             reduce using rule 33 (declararVariableDim -> .)

    declararVariableDim            shift and go to state 134

state 108

    (48) params_ciclo -> tipo ID meterParametros .

    PDER            reduce using rule 48 (params_ciclo -> tipo ID meterParametros .)
    COMA            reduce using rule 48 (params_ciclo -> tipo ID meterParametros .)


state 109

    (49) params_ciclo -> tipo ID COIZQ . pruebita cte_numeral CODER meterParametrosDim
    (52) pruebita -> .

    CTE_NUMERAL     reduce using rule 52 (pruebita -> .)

    pruebita                       shift and go to state 135

state 110

    (50) params_ciclo -> params_ciclo COMA tipo . ID meterParametros
    (51) params_ciclo -> params_ciclo COMA tipo . ID COIZQ cte_numeral CODER meterParametrosDim

    ID              shift and go to state 136


state 111

    (110) return -> RETURN . exp PYC
    (111) return -> RETURN . PYC
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    PYC             shift and go to state 154
    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 152
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 112

    (60) ciclo_vars_func -> vars .

    LLDER           reduce using rule 60 (ciclo_vars_func -> vars .)
    ID              reduce using rule 60 (ciclo_vars_func -> vars .)
    WHILE           reduce using rule 60 (ciclo_vars_func -> vars .)
    OUTPUT          reduce using rule 60 (ciclo_vars_func -> vars .)
    INPUT           reduce using rule 60 (ciclo_vars_func -> vars .)
    RETURN          reduce using rule 60 (ciclo_vars_func -> vars .)
    NUMERAL         reduce using rule 60 (ciclo_vars_func -> vars .)
    REAL            reduce using rule 60 (ciclo_vars_func -> vars .)
    BOOL            reduce using rule 60 (ciclo_vars_func -> vars .)
    CHAR            reduce using rule 60 (ciclo_vars_func -> vars .)
    STRING          reduce using rule 60 (ciclo_vars_func -> vars .)
    THIS            reduce using rule 60 (ciclo_vars_func -> vars .)
    IF              reduce using rule 60 (ciclo_vars_func -> vars .)


state 113

    (117) asignacion -> atom . limpiarInvocador IGUAL exp PYC
    (11) limpiarInvocador -> .

    IGUAL           reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 155

state 114

    (112) while -> WHILE . while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> WHILE . while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (114) while_1 -> .

    PIZQ            reduce using rule 114 (while_1 -> .)

    while_1                        shift and go to state 156

state 115

    (70) estatuto -> return .

    LLDER           reduce using rule 70 (estatuto -> return .)
    WHILE           reduce using rule 70 (estatuto -> return .)
    OUTPUT          reduce using rule 70 (estatuto -> return .)
    INPUT           reduce using rule 70 (estatuto -> return .)
    ID              reduce using rule 70 (estatuto -> return .)
    RETURN          reduce using rule 70 (estatuto -> return .)
    THIS            reduce using rule 70 (estatuto -> return .)
    IF              reduce using rule 70 (estatuto -> return .)


state 116

    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID COIZQ cte_numeral CODER declararVariableDim
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim

    ID              shift and go to state 157

    ciclo_tipo                     shift and go to state 50

state 117

    (62) ciclo_estatuto -> estatuto .

    LLDER           reduce using rule 62 (ciclo_estatuto -> estatuto .)
    WHILE           reduce using rule 62 (ciclo_estatuto -> estatuto .)
    OUTPUT          reduce using rule 62 (ciclo_estatuto -> estatuto .)
    INPUT           reduce using rule 62 (ciclo_estatuto -> estatuto .)
    ID              reduce using rule 62 (ciclo_estatuto -> estatuto .)
    RETURN          reduce using rule 62 (ciclo_estatuto -> estatuto .)
    THIS            reduce using rule 62 (ciclo_estatuto -> estatuto .)
    IF              reduce using rule 62 (ciclo_estatuto -> estatuto .)


state 118

    (55) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func . ciclo_estatuto LLDER
    (56) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func . LLDER
    (61) ciclo_vars_func -> ciclo_vars_func . vars
    (62) ciclo_estatuto -> . estatuto
    (63) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 159
    ID              shift and go to state 124
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    RETURN          shift and go to state 111
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    THIS            shift and go to state 129
    IF              shift and go to state 125

    vars                           shift and go to state 158
    atom                           shift and go to state 113
    var_op                         shift and go to state 32
    llamada_func                   shift and go to state 123
    tipo                           shift and go to state 116
    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 160
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 119

    (66) estatuto -> condicion .

    LLDER           reduce using rule 66 (estatuto -> condicion .)
    WHILE           reduce using rule 66 (estatuto -> condicion .)
    OUTPUT          reduce using rule 66 (estatuto -> condicion .)
    INPUT           reduce using rule 66 (estatuto -> condicion .)
    ID              reduce using rule 66 (estatuto -> condicion .)
    RETURN          reduce using rule 66 (estatuto -> condicion .)
    THIS            reduce using rule 66 (estatuto -> condicion .)
    IF              reduce using rule 66 (estatuto -> condicion .)


state 120

    (68) estatuto -> lectura .

    LLDER           reduce using rule 68 (estatuto -> lectura .)
    WHILE           reduce using rule 68 (estatuto -> lectura .)
    OUTPUT          reduce using rule 68 (estatuto -> lectura .)
    INPUT           reduce using rule 68 (estatuto -> lectura .)
    ID              reduce using rule 68 (estatuto -> lectura .)
    RETURN          reduce using rule 68 (estatuto -> lectura .)
    THIS            reduce using rule 68 (estatuto -> lectura .)
    IF              reduce using rule 68 (estatuto -> lectura .)


state 121

    (58) cuerpo_func -> inicioFunc LLIZQ LLDER .

    HIDDEN          reduce using rule 58 (cuerpo_func -> inicioFunc LLIZQ LLDER .)
    VISIBLE         reduce using rule 58 (cuerpo_func -> inicioFunc LLIZQ LLDER .)
    LLDER           reduce using rule 58 (cuerpo_func -> inicioFunc LLIZQ LLDER .)


state 122

    (137) lectura -> INPUT . PIZQ atom limpiarInvocador PDER PYC

    PIZQ            shift and go to state 161


state 123

    (69) estatuto -> llamada_func . limpiarInvocador PYC
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 162

state 124

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (71) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (118) atom -> ID . PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> ID . checarAtributoDim COIZQ exp CODER
    (121) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (122) atom -> ID . checarAtributo
    (26) revisarExistenciaClase -> .
    (77) checarFuncion -> .
    (124) checarAtributoDim -> .
    (125) checarAtributo -> .

    PUNTO           shift and go to state 164
    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)
    PIZQ            reduce using rule 77 (checarFuncion -> .)
    COIZQ           reduce using rule 124 (checarAtributoDim -> .)
    IGUAL           reduce using rule 125 (checarAtributo -> .)

    checarAtributo                 shift and go to state 163
    checarFuncion                  shift and go to state 165
    checarAtributoDim              shift and go to state 166
    revisarExistenciaClase         shift and go to state 54

state 125

    (129) ciclo_cond -> IF . PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> IF . PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    PIZQ            shift and go to state 167


state 126

    (65) estatuto -> asignacion .

    LLDER           reduce using rule 65 (estatuto -> asignacion .)
    WHILE           reduce using rule 65 (estatuto -> asignacion .)
    OUTPUT          reduce using rule 65 (estatuto -> asignacion .)
    INPUT           reduce using rule 65 (estatuto -> asignacion .)
    ID              reduce using rule 65 (estatuto -> asignacion .)
    RETURN          reduce using rule 65 (estatuto -> asignacion .)
    THIS            reduce using rule 65 (estatuto -> asignacion .)
    IF              reduce using rule 65 (estatuto -> asignacion .)


state 127

    (57) cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto . LLDER
    (63) ciclo_estatuto -> ciclo_estatuto . estatuto
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 169
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    estatuto                       shift and go to state 168
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    llamada_func                   shift and go to state 123
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 128

    (126) condicion -> ciclo_cond . ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> ciclo_cond . ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> ciclo_cond . if_4
    (131) ciclo_cond -> ciclo_cond . ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> ciclo_cond . ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (136) if_4 -> .

    ELSE            shift and go to state 172
    LLDER           reduce using rule 136 (if_4 -> .)
    WHILE           reduce using rule 136 (if_4 -> .)
    OUTPUT          reduce using rule 136 (if_4 -> .)
    INPUT           reduce using rule 136 (if_4 -> .)
    ID              reduce using rule 136 (if_4 -> .)
    RETURN          reduce using rule 136 (if_4 -> .)
    THIS            reduce using rule 136 (if_4 -> .)
    IF              reduce using rule 136 (if_4 -> .)

    if_4                           shift and go to state 171

state 129

    (120) atom -> THIS . PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (123) atom -> THIS . PUNTO definirInvocador ID checarAtributo

    PUNTO           shift and go to state 173


state 130

    (64) estatuto -> while .

    LLDER           reduce using rule 64 (estatuto -> while .)
    WHILE           reduce using rule 64 (estatuto -> while .)
    OUTPUT          reduce using rule 64 (estatuto -> while .)
    INPUT           reduce using rule 64 (estatuto -> while .)
    ID              reduce using rule 64 (estatuto -> while .)
    RETURN          reduce using rule 64 (estatuto -> while .)
    THIS            reduce using rule 64 (estatuto -> while .)
    IF              reduce using rule 64 (estatuto -> while .)


state 131

    (138) escritura -> OUTPUT . PIZQ exp PDER PYC

    PIZQ            shift and go to state 174


state 132

    (67) estatuto -> escritura .

    LLDER           reduce using rule 67 (estatuto -> escritura .)
    WHILE           reduce using rule 67 (estatuto -> escritura .)
    OUTPUT          reduce using rule 67 (estatuto -> escritura .)
    INPUT           reduce using rule 67 (estatuto -> escritura .)
    ID              reduce using rule 67 (estatuto -> escritura .)
    RETURN          reduce using rule 67 (estatuto -> escritura .)
    THIS            reduce using rule 67 (estatuto -> escritura .)
    IF              reduce using rule 67 (estatuto -> escritura .)


state 133

    (32) ciclo_id -> ciclo_id COMA ID declararVariable .

    COMA            reduce using rule 32 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    PYC             reduce using rule 32 (ciclo_id -> ciclo_id COMA ID declararVariable .)


state 134

    (30) ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim .

    COMA            reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim .)
    PYC             reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim .)


state 135

    (49) params_ciclo -> tipo ID COIZQ pruebita . cte_numeral CODER meterParametrosDim
    (106) cte_numeral -> . CTE_NUMERAL

    CTE_NUMERAL     shift and go to state 81

    cte_numeral                    shift and go to state 175

state 136

    (50) params_ciclo -> params_ciclo COMA tipo ID . meterParametros
    (51) params_ciclo -> params_ciclo COMA tipo ID . COIZQ cte_numeral CODER meterParametrosDim
    (54) meterParametros -> .

    COIZQ           shift and go to state 177
    PDER            reduce using rule 54 (meterParametros -> .)
    COMA            reduce using rule 54 (meterParametros -> .)

    meterParametros                shift and go to state 176

state 137

    (96) exp -> PIZQ . exp PDER
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 178
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 138

    (101) exp -> cte_bool .

    MAS             reduce using rule 101 (exp -> cte_bool .)
    MENOS           reduce using rule 101 (exp -> cte_bool .)
    POR             reduce using rule 101 (exp -> cte_bool .)
    ENTRE           reduce using rule 101 (exp -> cte_bool .)
    MOD             reduce using rule 101 (exp -> cte_bool .)
    IGUALC          reduce using rule 101 (exp -> cte_bool .)
    NOTIGUAL        reduce using rule 101 (exp -> cte_bool .)
    MAYOR           reduce using rule 101 (exp -> cte_bool .)
    MAYORIGUAL      reduce using rule 101 (exp -> cte_bool .)
    MENOR           reduce using rule 101 (exp -> cte_bool .)
    MENORIGUAL      reduce using rule 101 (exp -> cte_bool .)
    AND             reduce using rule 101 (exp -> cte_bool .)
    OR              reduce using rule 101 (exp -> cte_bool .)
    PYC             reduce using rule 101 (exp -> cte_bool .)
    PDER            reduce using rule 101 (exp -> cte_bool .)
    CODER           reduce using rule 101 (exp -> cte_bool .)
    COMA            reduce using rule 101 (exp -> cte_bool .)


state 139

    (108) cte_bool -> TRUE .

    MAS             reduce using rule 108 (cte_bool -> TRUE .)
    MENOS           reduce using rule 108 (cte_bool -> TRUE .)
    POR             reduce using rule 108 (cte_bool -> TRUE .)
    ENTRE           reduce using rule 108 (cte_bool -> TRUE .)
    MOD             reduce using rule 108 (cte_bool -> TRUE .)
    IGUALC          reduce using rule 108 (cte_bool -> TRUE .)
    NOTIGUAL        reduce using rule 108 (cte_bool -> TRUE .)
    MAYOR           reduce using rule 108 (cte_bool -> TRUE .)
    MAYORIGUAL      reduce using rule 108 (cte_bool -> TRUE .)
    MENOR           reduce using rule 108 (cte_bool -> TRUE .)
    MENORIGUAL      reduce using rule 108 (cte_bool -> TRUE .)
    AND             reduce using rule 108 (cte_bool -> TRUE .)
    OR              reduce using rule 108 (cte_bool -> TRUE .)
    PDER            reduce using rule 108 (cte_bool -> TRUE .)
    COMA            reduce using rule 108 (cte_bool -> TRUE .)
    PYC             reduce using rule 108 (cte_bool -> TRUE .)
    CODER           reduce using rule 108 (cte_bool -> TRUE .)


state 140

    (99) exp -> cte_numeral .

    MAS             reduce using rule 99 (exp -> cte_numeral .)
    MENOS           reduce using rule 99 (exp -> cte_numeral .)
    POR             reduce using rule 99 (exp -> cte_numeral .)
    ENTRE           reduce using rule 99 (exp -> cte_numeral .)
    MOD             reduce using rule 99 (exp -> cte_numeral .)
    IGUALC          reduce using rule 99 (exp -> cte_numeral .)
    NOTIGUAL        reduce using rule 99 (exp -> cte_numeral .)
    MAYOR           reduce using rule 99 (exp -> cte_numeral .)
    MAYORIGUAL      reduce using rule 99 (exp -> cte_numeral .)
    MENOR           reduce using rule 99 (exp -> cte_numeral .)
    MENORIGUAL      reduce using rule 99 (exp -> cte_numeral .)
    AND             reduce using rule 99 (exp -> cte_numeral .)
    OR              reduce using rule 99 (exp -> cte_numeral .)
    PYC             reduce using rule 99 (exp -> cte_numeral .)
    PDER            reduce using rule 99 (exp -> cte_numeral .)
    CODER           reduce using rule 99 (exp -> cte_numeral .)
    COMA            reduce using rule 99 (exp -> cte_numeral .)


state 141

    (105) cte_char -> CTE_CHAR .

    MAS             reduce using rule 105 (cte_char -> CTE_CHAR .)
    MENOS           reduce using rule 105 (cte_char -> CTE_CHAR .)
    POR             reduce using rule 105 (cte_char -> CTE_CHAR .)
    ENTRE           reduce using rule 105 (cte_char -> CTE_CHAR .)
    MOD             reduce using rule 105 (cte_char -> CTE_CHAR .)
    IGUALC          reduce using rule 105 (cte_char -> CTE_CHAR .)
    NOTIGUAL        reduce using rule 105 (cte_char -> CTE_CHAR .)
    MAYOR           reduce using rule 105 (cte_char -> CTE_CHAR .)
    MAYORIGUAL      reduce using rule 105 (cte_char -> CTE_CHAR .)
    MENOR           reduce using rule 105 (cte_char -> CTE_CHAR .)
    MENORIGUAL      reduce using rule 105 (cte_char -> CTE_CHAR .)
    AND             reduce using rule 105 (cte_char -> CTE_CHAR .)
    OR              reduce using rule 105 (cte_char -> CTE_CHAR .)
    PDER            reduce using rule 105 (cte_char -> CTE_CHAR .)
    COMA            reduce using rule 105 (cte_char -> CTE_CHAR .)
    PYC             reduce using rule 105 (cte_char -> CTE_CHAR .)
    CODER           reduce using rule 105 (cte_char -> CTE_CHAR .)


state 142

    (103) exp -> llamada_func . limpiarInvocador
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)
    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 179

state 143

    (107) cte_real -> CTE_REAL .

    MAS             reduce using rule 107 (cte_real -> CTE_REAL .)
    MENOS           reduce using rule 107 (cte_real -> CTE_REAL .)
    POR             reduce using rule 107 (cte_real -> CTE_REAL .)
    ENTRE           reduce using rule 107 (cte_real -> CTE_REAL .)
    MOD             reduce using rule 107 (cte_real -> CTE_REAL .)
    IGUALC          reduce using rule 107 (cte_real -> CTE_REAL .)
    NOTIGUAL        reduce using rule 107 (cte_real -> CTE_REAL .)
    MAYOR           reduce using rule 107 (cte_real -> CTE_REAL .)
    MAYORIGUAL      reduce using rule 107 (cte_real -> CTE_REAL .)
    MENOR           reduce using rule 107 (cte_real -> CTE_REAL .)
    MENORIGUAL      reduce using rule 107 (cte_real -> CTE_REAL .)
    AND             reduce using rule 107 (cte_real -> CTE_REAL .)
    OR              reduce using rule 107 (cte_real -> CTE_REAL .)
    PYC             reduce using rule 107 (cte_real -> CTE_REAL .)
    PDER            reduce using rule 107 (cte_real -> CTE_REAL .)
    CODER           reduce using rule 107 (cte_real -> CTE_REAL .)
    COMA            reduce using rule 107 (cte_real -> CTE_REAL .)


state 144

    (97) exp -> cte_str .

    MAS             reduce using rule 97 (exp -> cte_str .)
    MENOS           reduce using rule 97 (exp -> cte_str .)
    POR             reduce using rule 97 (exp -> cte_str .)
    ENTRE           reduce using rule 97 (exp -> cte_str .)
    MOD             reduce using rule 97 (exp -> cte_str .)
    IGUALC          reduce using rule 97 (exp -> cte_str .)
    NOTIGUAL        reduce using rule 97 (exp -> cte_str .)
    MAYOR           reduce using rule 97 (exp -> cte_str .)
    MAYORIGUAL      reduce using rule 97 (exp -> cte_str .)
    MENOR           reduce using rule 97 (exp -> cte_str .)
    MENORIGUAL      reduce using rule 97 (exp -> cte_str .)
    AND             reduce using rule 97 (exp -> cte_str .)
    OR              reduce using rule 97 (exp -> cte_str .)
    PYC             reduce using rule 97 (exp -> cte_str .)
    PDER            reduce using rule 97 (exp -> cte_str .)
    CODER           reduce using rule 97 (exp -> cte_str .)
    COMA            reduce using rule 97 (exp -> cte_str .)


state 145

    (100) exp -> cte_real .

    MAS             reduce using rule 100 (exp -> cte_real .)
    MENOS           reduce using rule 100 (exp -> cte_real .)
    POR             reduce using rule 100 (exp -> cte_real .)
    ENTRE           reduce using rule 100 (exp -> cte_real .)
    MOD             reduce using rule 100 (exp -> cte_real .)
    IGUALC          reduce using rule 100 (exp -> cte_real .)
    NOTIGUAL        reduce using rule 100 (exp -> cte_real .)
    MAYOR           reduce using rule 100 (exp -> cte_real .)
    MAYORIGUAL      reduce using rule 100 (exp -> cte_real .)
    MENOR           reduce using rule 100 (exp -> cte_real .)
    MENORIGUAL      reduce using rule 100 (exp -> cte_real .)
    AND             reduce using rule 100 (exp -> cte_real .)
    OR              reduce using rule 100 (exp -> cte_real .)
    PYC             reduce using rule 100 (exp -> cte_real .)
    PDER            reduce using rule 100 (exp -> cte_real .)
    CODER           reduce using rule 100 (exp -> cte_real .)
    COMA            reduce using rule 100 (exp -> cte_real .)


state 146

    (102) exp -> atom . limpiarInvocador
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)
    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 180

state 147

    (98) exp -> cte_char .

    MAS             reduce using rule 98 (exp -> cte_char .)
    MENOS           reduce using rule 98 (exp -> cte_char .)
    POR             reduce using rule 98 (exp -> cte_char .)
    ENTRE           reduce using rule 98 (exp -> cte_char .)
    MOD             reduce using rule 98 (exp -> cte_char .)
    IGUALC          reduce using rule 98 (exp -> cte_char .)
    NOTIGUAL        reduce using rule 98 (exp -> cte_char .)
    MAYOR           reduce using rule 98 (exp -> cte_char .)
    MAYORIGUAL      reduce using rule 98 (exp -> cte_char .)
    MENOR           reduce using rule 98 (exp -> cte_char .)
    MENORIGUAL      reduce using rule 98 (exp -> cte_char .)
    AND             reduce using rule 98 (exp -> cte_char .)
    OR              reduce using rule 98 (exp -> cte_char .)
    PYC             reduce using rule 98 (exp -> cte_char .)
    PDER            reduce using rule 98 (exp -> cte_char .)
    CODER           reduce using rule 98 (exp -> cte_char .)
    COMA            reduce using rule 98 (exp -> cte_char .)


state 148

    (118) atom -> ID . PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> ID . checarAtributoDim COIZQ exp CODER
    (121) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (122) atom -> ID . checarAtributo
    (71) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (124) checarAtributoDim -> .
    (125) checarAtributo -> .
    (77) checarFuncion -> .

    PUNTO           shift and go to state 181
    COIZQ           reduce using rule 124 (checarAtributoDim -> .)
    PYC             reduce using rule 125 (checarAtributo -> .)
    MAS             reduce using rule 125 (checarAtributo -> .)
    MENOS           reduce using rule 125 (checarAtributo -> .)
    POR             reduce using rule 125 (checarAtributo -> .)
    ENTRE           reduce using rule 125 (checarAtributo -> .)
    MOD             reduce using rule 125 (checarAtributo -> .)
    IGUALC          reduce using rule 125 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 125 (checarAtributo -> .)
    MAYOR           reduce using rule 125 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 125 (checarAtributo -> .)
    MENOR           reduce using rule 125 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 125 (checarAtributo -> .)
    AND             reduce using rule 125 (checarAtributo -> .)
    OR              reduce using rule 125 (checarAtributo -> .)
    PDER            reduce using rule 125 (checarAtributo -> .)
    CODER           reduce using rule 125 (checarAtributo -> .)
    COMA            reduce using rule 125 (checarAtributo -> .)
    PIZQ            reduce using rule 77 (checarFuncion -> .)

    checarAtributo                 shift and go to state 163
    checarFuncion                  shift and go to state 165
    checarAtributoDim              shift and go to state 166

state 149

    (109) cte_bool -> FALSE .

    MAS             reduce using rule 109 (cte_bool -> FALSE .)
    MENOS           reduce using rule 109 (cte_bool -> FALSE .)
    POR             reduce using rule 109 (cte_bool -> FALSE .)
    ENTRE           reduce using rule 109 (cte_bool -> FALSE .)
    MOD             reduce using rule 109 (cte_bool -> FALSE .)
    IGUALC          reduce using rule 109 (cte_bool -> FALSE .)
    NOTIGUAL        reduce using rule 109 (cte_bool -> FALSE .)
    MAYOR           reduce using rule 109 (cte_bool -> FALSE .)
    MAYORIGUAL      reduce using rule 109 (cte_bool -> FALSE .)
    MENOR           reduce using rule 109 (cte_bool -> FALSE .)
    MENORIGUAL      reduce using rule 109 (cte_bool -> FALSE .)
    AND             reduce using rule 109 (cte_bool -> FALSE .)
    OR              reduce using rule 109 (cte_bool -> FALSE .)
    PDER            reduce using rule 109 (cte_bool -> FALSE .)
    COMA            reduce using rule 109 (cte_bool -> FALSE .)
    PYC             reduce using rule 109 (cte_bool -> FALSE .)
    CODER           reduce using rule 109 (cte_bool -> FALSE .)


state 150

    (104) cte_str -> CTE_STR .

    PDER            reduce using rule 104 (cte_str -> CTE_STR .)
    MAS             reduce using rule 104 (cte_str -> CTE_STR .)
    MENOS           reduce using rule 104 (cte_str -> CTE_STR .)
    POR             reduce using rule 104 (cte_str -> CTE_STR .)
    ENTRE           reduce using rule 104 (cte_str -> CTE_STR .)
    MOD             reduce using rule 104 (cte_str -> CTE_STR .)
    IGUALC          reduce using rule 104 (cte_str -> CTE_STR .)
    NOTIGUAL        reduce using rule 104 (cte_str -> CTE_STR .)
    MAYOR           reduce using rule 104 (cte_str -> CTE_STR .)
    MAYORIGUAL      reduce using rule 104 (cte_str -> CTE_STR .)
    MENOR           reduce using rule 104 (cte_str -> CTE_STR .)
    MENORIGUAL      reduce using rule 104 (cte_str -> CTE_STR .)
    AND             reduce using rule 104 (cte_str -> CTE_STR .)
    OR              reduce using rule 104 (cte_str -> CTE_STR .)
    PYC             reduce using rule 104 (cte_str -> CTE_STR .)
    CODER           reduce using rule 104 (cte_str -> CTE_STR .)
    COMA            reduce using rule 104 (cte_str -> CTE_STR .)


state 151

    (95) exp -> MENOS . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 182
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 152

    (110) return -> RETURN exp . PYC
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    PYC             shift and go to state 194
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 153

    (94) exp -> NOT . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 197
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 154

    (111) return -> RETURN PYC .

    LLDER           reduce using rule 111 (return -> RETURN PYC .)
    WHILE           reduce using rule 111 (return -> RETURN PYC .)
    OUTPUT          reduce using rule 111 (return -> RETURN PYC .)
    INPUT           reduce using rule 111 (return -> RETURN PYC .)
    ID              reduce using rule 111 (return -> RETURN PYC .)
    RETURN          reduce using rule 111 (return -> RETURN PYC .)
    THIS            reduce using rule 111 (return -> RETURN PYC .)
    IF              reduce using rule 111 (return -> RETURN PYC .)


state 155

    (117) asignacion -> atom limpiarInvocador . IGUAL exp PYC

    IGUAL           shift and go to state 198


state 156

    (112) while -> WHILE while_1 . PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> WHILE while_1 . PIZQ exp PDER while_2 LLIZQ while_3 LLDER

    PIZQ            shift and go to state 199


state 157

    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . COIZQ cte_numeral CODER declararVariableDim
    (34) declararVariable -> .

    COIZQ           shift and go to state 69
    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 67

state 158

    (61) ciclo_vars_func -> ciclo_vars_func vars .

    LLDER           reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    ID              reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    WHILE           reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    OUTPUT          reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    INPUT           reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    RETURN          reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    NUMERAL         reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    REAL            reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    BOOL            reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    CHAR            reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    STRING          reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    THIS            reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)
    IF              reduce using rule 61 (ciclo_vars_func -> ciclo_vars_func vars .)


state 159

    (56) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER .

    HIDDEN          reduce using rule 56 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER .)
    VISIBLE         reduce using rule 56 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER .)
    LLDER           reduce using rule 56 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER .)


state 160

    (55) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto . LLDER
    (63) ciclo_estatuto -> ciclo_estatuto . estatuto
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 200
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 168
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 161

    (137) lectura -> INPUT PIZQ . atom limpiarInvocador PDER PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo

    ID              shift and go to state 201
    THIS            shift and go to state 129

    atom                           shift and go to state 202

state 162

    (69) estatuto -> llamada_func limpiarInvocador . PYC

    PYC             shift and go to state 203


state 163

    (122) atom -> ID checarAtributo .

    MAS             reduce using rule 122 (atom -> ID checarAtributo .)
    MENOS           reduce using rule 122 (atom -> ID checarAtributo .)
    POR             reduce using rule 122 (atom -> ID checarAtributo .)
    ENTRE           reduce using rule 122 (atom -> ID checarAtributo .)
    MOD             reduce using rule 122 (atom -> ID checarAtributo .)
    IGUALC          reduce using rule 122 (atom -> ID checarAtributo .)
    NOTIGUAL        reduce using rule 122 (atom -> ID checarAtributo .)
    MAYOR           reduce using rule 122 (atom -> ID checarAtributo .)
    MAYORIGUAL      reduce using rule 122 (atom -> ID checarAtributo .)
    MENOR           reduce using rule 122 (atom -> ID checarAtributo .)
    MENORIGUAL      reduce using rule 122 (atom -> ID checarAtributo .)
    AND             reduce using rule 122 (atom -> ID checarAtributo .)
    OR              reduce using rule 122 (atom -> ID checarAtributo .)
    PYC             reduce using rule 122 (atom -> ID checarAtributo .)
    PDER            reduce using rule 122 (atom -> ID checarAtributo .)
    CODER           reduce using rule 122 (atom -> ID checarAtributo .)
    COMA            reduce using rule 122 (atom -> ID checarAtributo .)
    IGUAL           reduce using rule 122 (atom -> ID checarAtributo .)


state 164

    (71) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (118) atom -> ID PUNTO . definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (78) definirInvocador -> .

    ID              reduce using rule 78 (definirInvocador -> .)

    definirInvocador               shift and go to state 204

state 165

    (73) llamada_func -> ID checarFuncion . generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> ID checarFuncion . generaEra PIZQ limpiarInvocador PDER generarGosub
    (76) generaEra -> .

    PIZQ            reduce using rule 76 (generaEra -> .)

    generaEra                      shift and go to state 205

state 166

    (119) atom -> ID checarAtributoDim . COIZQ exp CODER

    COIZQ           shift and go to state 206


state 167

    (129) ciclo_cond -> IF PIZQ . exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> IF PIZQ . exp PDER if_1 LLIZQ if_2 LLDER
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 207
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 168

    (63) ciclo_estatuto -> ciclo_estatuto estatuto .

    LLDER           reduce using rule 63 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    WHILE           reduce using rule 63 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    OUTPUT          reduce using rule 63 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    INPUT           reduce using rule 63 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    ID              reduce using rule 63 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    RETURN          reduce using rule 63 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    THIS            reduce using rule 63 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    IF              reduce using rule 63 (ciclo_estatuto -> ciclo_estatuto estatuto .)


state 169

    (57) cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 57 (cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 57 (cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER .)
    LLDER           reduce using rule 57 (cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER .)


state 170

    (71) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (118) atom -> ID . PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> ID . checarAtributoDim COIZQ exp CODER
    (121) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (122) atom -> ID . checarAtributo
    (77) checarFuncion -> .
    (124) checarAtributoDim -> .
    (125) checarAtributo -> .

    PUNTO           shift and go to state 164
    PIZQ            reduce using rule 77 (checarFuncion -> .)
    COIZQ           reduce using rule 124 (checarAtributoDim -> .)
    IGUAL           reduce using rule 125 (checarAtributo -> .)

    checarAtributo                 shift and go to state 163
    checarFuncion                  shift and go to state 165
    checarAtributoDim              shift and go to state 166

state 171

    (128) condicion -> ciclo_cond if_4 .

    WHILE           reduce using rule 128 (condicion -> ciclo_cond if_4 .)
    OUTPUT          reduce using rule 128 (condicion -> ciclo_cond if_4 .)
    INPUT           reduce using rule 128 (condicion -> ciclo_cond if_4 .)
    ID              reduce using rule 128 (condicion -> ciclo_cond if_4 .)
    RETURN          reduce using rule 128 (condicion -> ciclo_cond if_4 .)
    THIS            reduce using rule 128 (condicion -> ciclo_cond if_4 .)
    IF              reduce using rule 128 (condicion -> ciclo_cond if_4 .)
    LLDER           reduce using rule 128 (condicion -> ciclo_cond if_4 .)


state 172

    (126) condicion -> ciclo_cond ELSE . if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> ciclo_cond ELSE . if_3 LLIZQ LLDER if_4
    (131) ciclo_cond -> ciclo_cond ELSE . IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> ciclo_cond ELSE . IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (135) if_3 -> .

    IF              shift and go to state 209
    LLIZQ           reduce using rule 135 (if_3 -> .)

    if_3                           shift and go to state 208

state 173

    (120) atom -> THIS PUNTO . definirInvocador ID checarAtributoDim COIZQ exp CODER
    (123) atom -> THIS PUNTO . definirInvocador ID checarAtributo
    (78) definirInvocador -> .

    ID              reduce using rule 78 (definirInvocador -> .)

    definirInvocador               shift and go to state 210

state 174

    (138) escritura -> OUTPUT PIZQ . exp PDER PYC
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 211
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 175

    (49) params_ciclo -> tipo ID COIZQ pruebita cte_numeral . CODER meterParametrosDim

    CODER           shift and go to state 212


state 176

    (50) params_ciclo -> params_ciclo COMA tipo ID meterParametros .

    PDER            reduce using rule 50 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)
    COMA            reduce using rule 50 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)


state 177

    (51) params_ciclo -> params_ciclo COMA tipo ID COIZQ . cte_numeral CODER meterParametrosDim
    (106) cte_numeral -> . CTE_NUMERAL

    CTE_NUMERAL     shift and go to state 81

    cte_numeral                    shift and go to state 213

state 178

    (96) exp -> PIZQ exp . PDER
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    PDER            shift and go to state 214
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 179

    (103) exp -> llamada_func limpiarInvocador .

    MAS             reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    MENOS           reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    POR             reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    ENTRE           reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    MOD             reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    IGUALC          reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    NOTIGUAL        reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    MAYOR           reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    MAYORIGUAL      reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    MENOR           reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    MENORIGUAL      reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    AND             reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    OR              reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    PYC             reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    PDER            reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    CODER           reduce using rule 103 (exp -> llamada_func limpiarInvocador .)
    COMA            reduce using rule 103 (exp -> llamada_func limpiarInvocador .)


state 180

    (102) exp -> atom limpiarInvocador .

    MAS             reduce using rule 102 (exp -> atom limpiarInvocador .)
    MENOS           reduce using rule 102 (exp -> atom limpiarInvocador .)
    POR             reduce using rule 102 (exp -> atom limpiarInvocador .)
    ENTRE           reduce using rule 102 (exp -> atom limpiarInvocador .)
    MOD             reduce using rule 102 (exp -> atom limpiarInvocador .)
    IGUALC          reduce using rule 102 (exp -> atom limpiarInvocador .)
    NOTIGUAL        reduce using rule 102 (exp -> atom limpiarInvocador .)
    MAYOR           reduce using rule 102 (exp -> atom limpiarInvocador .)
    MAYORIGUAL      reduce using rule 102 (exp -> atom limpiarInvocador .)
    MENOR           reduce using rule 102 (exp -> atom limpiarInvocador .)
    MENORIGUAL      reduce using rule 102 (exp -> atom limpiarInvocador .)
    AND             reduce using rule 102 (exp -> atom limpiarInvocador .)
    OR              reduce using rule 102 (exp -> atom limpiarInvocador .)
    PYC             reduce using rule 102 (exp -> atom limpiarInvocador .)
    PDER            reduce using rule 102 (exp -> atom limpiarInvocador .)
    CODER           reduce using rule 102 (exp -> atom limpiarInvocador .)
    COMA            reduce using rule 102 (exp -> atom limpiarInvocador .)


state 181

    (118) atom -> ID PUNTO . definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (71) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (78) definirInvocador -> .

    ID              reduce using rule 78 (definirInvocador -> .)

    definirInvocador               shift and go to state 215

state 182

    (95) exp -> MENOS exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    MAS             reduce using rule 95 (exp -> MENOS exp .)
    MENOS           reduce using rule 95 (exp -> MENOS exp .)
    POR             reduce using rule 95 (exp -> MENOS exp .)
    ENTRE           reduce using rule 95 (exp -> MENOS exp .)
    MOD             reduce using rule 95 (exp -> MENOS exp .)
    IGUALC          reduce using rule 95 (exp -> MENOS exp .)
    NOTIGUAL        reduce using rule 95 (exp -> MENOS exp .)
    MAYOR           reduce using rule 95 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 95 (exp -> MENOS exp .)
    MENOR           reduce using rule 95 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 95 (exp -> MENOS exp .)
    AND             reduce using rule 95 (exp -> MENOS exp .)
    OR              reduce using rule 95 (exp -> MENOS exp .)
    PYC             reduce using rule 95 (exp -> MENOS exp .)
    PDER            reduce using rule 95 (exp -> MENOS exp .)
    CODER           reduce using rule 95 (exp -> MENOS exp .)
    COMA            reduce using rule 95 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 184 ]
  ! MENOS           [ shift and go to state 190 ]
  ! POR             [ shift and go to state 187 ]
  ! ENTRE           [ shift and go to state 186 ]
  ! MOD             [ shift and go to state 196 ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 183

    (92) exp -> exp AND . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 216
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 184

    (81) exp -> exp MAS . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 217
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 185

    (86) exp -> exp IGUALC . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 218
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 186

    (84) exp -> exp ENTRE . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 219
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 187

    (83) exp -> exp POR . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 220
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 188

    (93) exp -> exp OR . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 221
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 189

    (90) exp -> exp MENOR . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 222
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 190

    (82) exp -> exp MENOS . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 223
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 191

    (87) exp -> exp NOTIGUAL . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 224
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 192

    (89) exp -> exp MAYORIGUAL . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 225
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 193

    (91) exp -> exp MENORIGUAL . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 226
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 194

    (110) return -> RETURN exp PYC .

    LLDER           reduce using rule 110 (return -> RETURN exp PYC .)
    WHILE           reduce using rule 110 (return -> RETURN exp PYC .)
    OUTPUT          reduce using rule 110 (return -> RETURN exp PYC .)
    INPUT           reduce using rule 110 (return -> RETURN exp PYC .)
    ID              reduce using rule 110 (return -> RETURN exp PYC .)
    RETURN          reduce using rule 110 (return -> RETURN exp PYC .)
    THIS            reduce using rule 110 (return -> RETURN exp PYC .)
    IF              reduce using rule 110 (return -> RETURN exp PYC .)


state 195

    (88) exp -> exp MAYOR . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 227
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 196

    (85) exp -> exp MOD . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 228
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 197

    (94) exp -> NOT exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    AND             reduce using rule 94 (exp -> NOT exp .)
    OR              reduce using rule 94 (exp -> NOT exp .)
    PYC             reduce using rule 94 (exp -> NOT exp .)
    PDER            reduce using rule 94 (exp -> NOT exp .)
    CODER           reduce using rule 94 (exp -> NOT exp .)
    COMA            reduce using rule 94 (exp -> NOT exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193

  ! MAS             [ reduce using rule 94 (exp -> NOT exp .) ]
  ! MENOS           [ reduce using rule 94 (exp -> NOT exp .) ]
  ! POR             [ reduce using rule 94 (exp -> NOT exp .) ]
  ! ENTRE           [ reduce using rule 94 (exp -> NOT exp .) ]
  ! MOD             [ reduce using rule 94 (exp -> NOT exp .) ]
  ! IGUALC          [ reduce using rule 94 (exp -> NOT exp .) ]
  ! NOTIGUAL        [ reduce using rule 94 (exp -> NOT exp .) ]
  ! MAYOR           [ reduce using rule 94 (exp -> NOT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 94 (exp -> NOT exp .) ]
  ! MENOR           [ reduce using rule 94 (exp -> NOT exp .) ]
  ! MENORIGUAL      [ reduce using rule 94 (exp -> NOT exp .) ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 198

    (117) asignacion -> atom limpiarInvocador IGUAL . exp PYC
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    exp                            shift and go to state 229
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140
    cte_real                       shift and go to state 145

state 199

    (112) while -> WHILE while_1 PIZQ . exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> WHILE while_1 PIZQ . exp PDER while_2 LLIZQ while_3 LLDER
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    llamada_func                   shift and go to state 142
    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 230
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    cte_numeral                    shift and go to state 140

state 200

    (55) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 55 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 55 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    LLDER           reduce using rule 55 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)


state 201

    (118) atom -> ID . PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> ID . checarAtributoDim COIZQ exp CODER
    (121) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (122) atom -> ID . checarAtributo
    (124) checarAtributoDim -> .
    (125) checarAtributo -> .

    PUNTO           shift and go to state 231
    COIZQ           reduce using rule 124 (checarAtributoDim -> .)
    PDER            reduce using rule 125 (checarAtributo -> .)

    checarAtributoDim              shift and go to state 166
    checarAtributo                 shift and go to state 163

state 202

    (137) lectura -> INPUT PIZQ atom . limpiarInvocador PDER PYC
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 232

state 203

    (69) estatuto -> llamada_func limpiarInvocador PYC .

    LLDER           reduce using rule 69 (estatuto -> llamada_func limpiarInvocador PYC .)
    WHILE           reduce using rule 69 (estatuto -> llamada_func limpiarInvocador PYC .)
    OUTPUT          reduce using rule 69 (estatuto -> llamada_func limpiarInvocador PYC .)
    INPUT           reduce using rule 69 (estatuto -> llamada_func limpiarInvocador PYC .)
    ID              reduce using rule 69 (estatuto -> llamada_func limpiarInvocador PYC .)
    RETURN          reduce using rule 69 (estatuto -> llamada_func limpiarInvocador PYC .)
    THIS            reduce using rule 69 (estatuto -> llamada_func limpiarInvocador PYC .)
    IF              reduce using rule 69 (estatuto -> llamada_func limpiarInvocador PYC .)


state 204

    (71) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (118) atom -> ID PUNTO definirInvocador . ID checarAtributoDim COIZQ exp CODER
    (121) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 233


state 205

    (73) llamada_func -> ID checarFuncion generaEra . PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> ID checarFuncion generaEra . PIZQ limpiarInvocador PDER generarGosub

    PIZQ            shift and go to state 234


state 206

    (119) atom -> ID checarAtributoDim COIZQ . exp CODER
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 235
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 207

    (129) ciclo_cond -> IF PIZQ exp . PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> IF PIZQ exp . PDER if_1 LLIZQ if_2 LLDER
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    PDER            shift and go to state 236
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 208

    (126) condicion -> ciclo_cond ELSE if_3 . LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> ciclo_cond ELSE if_3 . LLIZQ LLDER if_4

    LLIZQ           shift and go to state 237


state 209

    (131) ciclo_cond -> ciclo_cond ELSE IF . if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF . if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (135) if_3 -> .

    PIZQ            reduce using rule 135 (if_3 -> .)

    if_3                           shift and go to state 238

state 210

    (120) atom -> THIS PUNTO definirInvocador . ID checarAtributoDim COIZQ exp CODER
    (123) atom -> THIS PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 239


state 211

    (138) escritura -> OUTPUT PIZQ exp . PDER PYC
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    PDER            shift and go to state 240
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 212

    (49) params_ciclo -> tipo ID COIZQ pruebita cte_numeral CODER . meterParametrosDim
    (53) meterParametrosDim -> .

    PDER            reduce using rule 53 (meterParametrosDim -> .)
    COMA            reduce using rule 53 (meterParametrosDim -> .)

    meterParametrosDim             shift and go to state 241

state 213

    (51) params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral . CODER meterParametrosDim

    CODER           shift and go to state 242


state 214

    (96) exp -> PIZQ exp PDER .

    MAS             reduce using rule 96 (exp -> PIZQ exp PDER .)
    MENOS           reduce using rule 96 (exp -> PIZQ exp PDER .)
    POR             reduce using rule 96 (exp -> PIZQ exp PDER .)
    ENTRE           reduce using rule 96 (exp -> PIZQ exp PDER .)
    MOD             reduce using rule 96 (exp -> PIZQ exp PDER .)
    IGUALC          reduce using rule 96 (exp -> PIZQ exp PDER .)
    NOTIGUAL        reduce using rule 96 (exp -> PIZQ exp PDER .)
    MAYOR           reduce using rule 96 (exp -> PIZQ exp PDER .)
    MAYORIGUAL      reduce using rule 96 (exp -> PIZQ exp PDER .)
    MENOR           reduce using rule 96 (exp -> PIZQ exp PDER .)
    MENORIGUAL      reduce using rule 96 (exp -> PIZQ exp PDER .)
    AND             reduce using rule 96 (exp -> PIZQ exp PDER .)
    OR              reduce using rule 96 (exp -> PIZQ exp PDER .)
    PYC             reduce using rule 96 (exp -> PIZQ exp PDER .)
    PDER            reduce using rule 96 (exp -> PIZQ exp PDER .)
    CODER           reduce using rule 96 (exp -> PIZQ exp PDER .)
    COMA            reduce using rule 96 (exp -> PIZQ exp PDER .)


state 215

    (118) atom -> ID PUNTO definirInvocador . ID checarAtributoDim COIZQ exp CODER
    (121) atom -> ID PUNTO definirInvocador . ID checarAtributo
    (71) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    ID              shift and go to state 243


state 216

    (92) exp -> exp AND exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    AND             reduce using rule 92 (exp -> exp AND exp .)
    OR              reduce using rule 92 (exp -> exp AND exp .)
    PYC             reduce using rule 92 (exp -> exp AND exp .)
    PDER            reduce using rule 92 (exp -> exp AND exp .)
    CODER           reduce using rule 92 (exp -> exp AND exp .)
    COMA            reduce using rule 92 (exp -> exp AND exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193

  ! MAS             [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! MENOS           [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! POR             [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! ENTRE           [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! MOD             [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! IGUALC          [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! NOTIGUAL        [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! MAYOR           [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! MAYORIGUAL      [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! MENOR           [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! MENORIGUAL      [ reduce using rule 92 (exp -> exp AND exp .) ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 217

    (81) exp -> exp MAS exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    MAS             reduce using rule 81 (exp -> exp MAS exp .)
    MENOS           reduce using rule 81 (exp -> exp MAS exp .)
    IGUALC          reduce using rule 81 (exp -> exp MAS exp .)
    NOTIGUAL        reduce using rule 81 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 81 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 81 (exp -> exp MAS exp .)
    MENOR           reduce using rule 81 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 81 (exp -> exp MAS exp .)
    AND             reduce using rule 81 (exp -> exp MAS exp .)
    OR              reduce using rule 81 (exp -> exp MAS exp .)
    PYC             reduce using rule 81 (exp -> exp MAS exp .)
    PDER            reduce using rule 81 (exp -> exp MAS exp .)
    CODER           reduce using rule 81 (exp -> exp MAS exp .)
    COMA            reduce using rule 81 (exp -> exp MAS exp .)
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196

  ! POR             [ reduce using rule 81 (exp -> exp MAS exp .) ]
  ! ENTRE           [ reduce using rule 81 (exp -> exp MAS exp .) ]
  ! MOD             [ reduce using rule 81 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 184 ]
  ! MENOS           [ shift and go to state 190 ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 218

    (86) exp -> exp IGUALC exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    IGUALC          reduce using rule 86 (exp -> exp IGUALC exp .)
    NOTIGUAL        reduce using rule 86 (exp -> exp IGUALC exp .)
    MAYOR           reduce using rule 86 (exp -> exp IGUALC exp .)
    MAYORIGUAL      reduce using rule 86 (exp -> exp IGUALC exp .)
    MENOR           reduce using rule 86 (exp -> exp IGUALC exp .)
    MENORIGUAL      reduce using rule 86 (exp -> exp IGUALC exp .)
    AND             reduce using rule 86 (exp -> exp IGUALC exp .)
    OR              reduce using rule 86 (exp -> exp IGUALC exp .)
    PYC             reduce using rule 86 (exp -> exp IGUALC exp .)
    PDER            reduce using rule 86 (exp -> exp IGUALC exp .)
    CODER           reduce using rule 86 (exp -> exp IGUALC exp .)
    COMA            reduce using rule 86 (exp -> exp IGUALC exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196

  ! MAS             [ reduce using rule 86 (exp -> exp IGUALC exp .) ]
  ! MENOS           [ reduce using rule 86 (exp -> exp IGUALC exp .) ]
  ! POR             [ reduce using rule 86 (exp -> exp IGUALC exp .) ]
  ! ENTRE           [ reduce using rule 86 (exp -> exp IGUALC exp .) ]
  ! MOD             [ reduce using rule 86 (exp -> exp IGUALC exp .) ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 219

    (84) exp -> exp ENTRE exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    MAS             reduce using rule 84 (exp -> exp ENTRE exp .)
    MENOS           reduce using rule 84 (exp -> exp ENTRE exp .)
    POR             reduce using rule 84 (exp -> exp ENTRE exp .)
    ENTRE           reduce using rule 84 (exp -> exp ENTRE exp .)
    MOD             reduce using rule 84 (exp -> exp ENTRE exp .)
    IGUALC          reduce using rule 84 (exp -> exp ENTRE exp .)
    NOTIGUAL        reduce using rule 84 (exp -> exp ENTRE exp .)
    MAYOR           reduce using rule 84 (exp -> exp ENTRE exp .)
    MAYORIGUAL      reduce using rule 84 (exp -> exp ENTRE exp .)
    MENOR           reduce using rule 84 (exp -> exp ENTRE exp .)
    MENORIGUAL      reduce using rule 84 (exp -> exp ENTRE exp .)
    AND             reduce using rule 84 (exp -> exp ENTRE exp .)
    OR              reduce using rule 84 (exp -> exp ENTRE exp .)
    PYC             reduce using rule 84 (exp -> exp ENTRE exp .)
    PDER            reduce using rule 84 (exp -> exp ENTRE exp .)
    CODER           reduce using rule 84 (exp -> exp ENTRE exp .)
    COMA            reduce using rule 84 (exp -> exp ENTRE exp .)

  ! MAS             [ shift and go to state 184 ]
  ! MENOS           [ shift and go to state 190 ]
  ! POR             [ shift and go to state 187 ]
  ! ENTRE           [ shift and go to state 186 ]
  ! MOD             [ shift and go to state 196 ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 220

    (83) exp -> exp POR exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    MAS             reduce using rule 83 (exp -> exp POR exp .)
    MENOS           reduce using rule 83 (exp -> exp POR exp .)
    POR             reduce using rule 83 (exp -> exp POR exp .)
    ENTRE           reduce using rule 83 (exp -> exp POR exp .)
    MOD             reduce using rule 83 (exp -> exp POR exp .)
    IGUALC          reduce using rule 83 (exp -> exp POR exp .)
    NOTIGUAL        reduce using rule 83 (exp -> exp POR exp .)
    MAYOR           reduce using rule 83 (exp -> exp POR exp .)
    MAYORIGUAL      reduce using rule 83 (exp -> exp POR exp .)
    MENOR           reduce using rule 83 (exp -> exp POR exp .)
    MENORIGUAL      reduce using rule 83 (exp -> exp POR exp .)
    AND             reduce using rule 83 (exp -> exp POR exp .)
    OR              reduce using rule 83 (exp -> exp POR exp .)
    PYC             reduce using rule 83 (exp -> exp POR exp .)
    PDER            reduce using rule 83 (exp -> exp POR exp .)
    CODER           reduce using rule 83 (exp -> exp POR exp .)
    COMA            reduce using rule 83 (exp -> exp POR exp .)

  ! MAS             [ shift and go to state 184 ]
  ! MENOS           [ shift and go to state 190 ]
  ! POR             [ shift and go to state 187 ]
  ! ENTRE           [ shift and go to state 186 ]
  ! MOD             [ shift and go to state 196 ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 221

    (93) exp -> exp OR exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    OR              reduce using rule 93 (exp -> exp OR exp .)
    PYC             reduce using rule 93 (exp -> exp OR exp .)
    PDER            reduce using rule 93 (exp -> exp OR exp .)
    CODER           reduce using rule 93 (exp -> exp OR exp .)
    COMA            reduce using rule 93 (exp -> exp OR exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183

  ! MAS             [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! MENOS           [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! POR             [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! ENTRE           [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! MOD             [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! IGUALC          [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! NOTIGUAL        [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! MAYOR           [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! MENOR           [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! MENORIGUAL      [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 93 (exp -> exp OR exp .) ]
  ! OR              [ shift and go to state 188 ]


state 222

    (90) exp -> exp MENOR exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    IGUALC          reduce using rule 90 (exp -> exp MENOR exp .)
    NOTIGUAL        reduce using rule 90 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 90 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 90 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 90 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 90 (exp -> exp MENOR exp .)
    AND             reduce using rule 90 (exp -> exp MENOR exp .)
    OR              reduce using rule 90 (exp -> exp MENOR exp .)
    PYC             reduce using rule 90 (exp -> exp MENOR exp .)
    PDER            reduce using rule 90 (exp -> exp MENOR exp .)
    CODER           reduce using rule 90 (exp -> exp MENOR exp .)
    COMA            reduce using rule 90 (exp -> exp MENOR exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196

  ! MAS             [ reduce using rule 90 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 90 (exp -> exp MENOR exp .) ]
  ! POR             [ reduce using rule 90 (exp -> exp MENOR exp .) ]
  ! ENTRE           [ reduce using rule 90 (exp -> exp MENOR exp .) ]
  ! MOD             [ reduce using rule 90 (exp -> exp MENOR exp .) ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 223

    (82) exp -> exp MENOS exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    MAS             reduce using rule 82 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 82 (exp -> exp MENOS exp .)
    IGUALC          reduce using rule 82 (exp -> exp MENOS exp .)
    NOTIGUAL        reduce using rule 82 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 82 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 82 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 82 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 82 (exp -> exp MENOS exp .)
    AND             reduce using rule 82 (exp -> exp MENOS exp .)
    OR              reduce using rule 82 (exp -> exp MENOS exp .)
    PYC             reduce using rule 82 (exp -> exp MENOS exp .)
    PDER            reduce using rule 82 (exp -> exp MENOS exp .)
    CODER           reduce using rule 82 (exp -> exp MENOS exp .)
    COMA            reduce using rule 82 (exp -> exp MENOS exp .)
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196

  ! POR             [ reduce using rule 82 (exp -> exp MENOS exp .) ]
  ! ENTRE           [ reduce using rule 82 (exp -> exp MENOS exp .) ]
  ! MOD             [ reduce using rule 82 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 184 ]
  ! MENOS           [ shift and go to state 190 ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 224

    (87) exp -> exp NOTIGUAL exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    IGUALC          reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    NOTIGUAL        reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    MAYOR           reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    MAYORIGUAL      reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    MENOR           reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    MENORIGUAL      reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    AND             reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    OR              reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    PYC             reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    PDER            reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    CODER           reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    COMA            reduce using rule 87 (exp -> exp NOTIGUAL exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196

  ! MAS             [ reduce using rule 87 (exp -> exp NOTIGUAL exp .) ]
  ! MENOS           [ reduce using rule 87 (exp -> exp NOTIGUAL exp .) ]
  ! POR             [ reduce using rule 87 (exp -> exp NOTIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 87 (exp -> exp NOTIGUAL exp .) ]
  ! MOD             [ reduce using rule 87 (exp -> exp NOTIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 225

    (89) exp -> exp MAYORIGUAL exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    IGUALC          reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    NOTIGUAL        reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    AND             reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    OR              reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    PYC             reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    PDER            reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    CODER           reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 89 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196

  ! MAS             [ reduce using rule 89 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 89 (exp -> exp MAYORIGUAL exp .) ]
  ! POR             [ reduce using rule 89 (exp -> exp MAYORIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 89 (exp -> exp MAYORIGUAL exp .) ]
  ! MOD             [ reduce using rule 89 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 226

    (91) exp -> exp MENORIGUAL exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    IGUALC          reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    NOTIGUAL        reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    AND             reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    OR              reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    PYC             reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    PDER            reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    CODER           reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 91 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196

  ! MAS             [ reduce using rule 91 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 91 (exp -> exp MENORIGUAL exp .) ]
  ! POR             [ reduce using rule 91 (exp -> exp MENORIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 91 (exp -> exp MENORIGUAL exp .) ]
  ! MOD             [ reduce using rule 91 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 227

    (88) exp -> exp MAYOR exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    IGUALC          reduce using rule 88 (exp -> exp MAYOR exp .)
    NOTIGUAL        reduce using rule 88 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 88 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 88 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 88 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 88 (exp -> exp MAYOR exp .)
    AND             reduce using rule 88 (exp -> exp MAYOR exp .)
    OR              reduce using rule 88 (exp -> exp MAYOR exp .)
    PYC             reduce using rule 88 (exp -> exp MAYOR exp .)
    PDER            reduce using rule 88 (exp -> exp MAYOR exp .)
    CODER           reduce using rule 88 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 88 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196

  ! MAS             [ reduce using rule 88 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 88 (exp -> exp MAYOR exp .) ]
  ! POR             [ reduce using rule 88 (exp -> exp MAYOR exp .) ]
  ! ENTRE           [ reduce using rule 88 (exp -> exp MAYOR exp .) ]
  ! MOD             [ reduce using rule 88 (exp -> exp MAYOR exp .) ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 228

    (85) exp -> exp MOD exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    MAS             reduce using rule 85 (exp -> exp MOD exp .)
    MENOS           reduce using rule 85 (exp -> exp MOD exp .)
    POR             reduce using rule 85 (exp -> exp MOD exp .)
    ENTRE           reduce using rule 85 (exp -> exp MOD exp .)
    MOD             reduce using rule 85 (exp -> exp MOD exp .)
    IGUALC          reduce using rule 85 (exp -> exp MOD exp .)
    NOTIGUAL        reduce using rule 85 (exp -> exp MOD exp .)
    MAYOR           reduce using rule 85 (exp -> exp MOD exp .)
    MAYORIGUAL      reduce using rule 85 (exp -> exp MOD exp .)
    MENOR           reduce using rule 85 (exp -> exp MOD exp .)
    MENORIGUAL      reduce using rule 85 (exp -> exp MOD exp .)
    AND             reduce using rule 85 (exp -> exp MOD exp .)
    OR              reduce using rule 85 (exp -> exp MOD exp .)
    PYC             reduce using rule 85 (exp -> exp MOD exp .)
    PDER            reduce using rule 85 (exp -> exp MOD exp .)
    CODER           reduce using rule 85 (exp -> exp MOD exp .)
    COMA            reduce using rule 85 (exp -> exp MOD exp .)

  ! MAS             [ shift and go to state 184 ]
  ! MENOS           [ shift and go to state 190 ]
  ! POR             [ shift and go to state 187 ]
  ! ENTRE           [ shift and go to state 186 ]
  ! MOD             [ shift and go to state 196 ]
  ! IGUALC          [ shift and go to state 185 ]
  ! NOTIGUAL        [ shift and go to state 191 ]
  ! MAYOR           [ shift and go to state 195 ]
  ! MAYORIGUAL      [ shift and go to state 192 ]
  ! MENOR           [ shift and go to state 189 ]
  ! MENORIGUAL      [ shift and go to state 193 ]
  ! AND             [ shift and go to state 183 ]
  ! OR              [ shift and go to state 188 ]


state 229

    (117) asignacion -> atom limpiarInvocador IGUAL exp . PYC
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    PYC             shift and go to state 244
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 230

    (112) while -> WHILE while_1 PIZQ exp . PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> WHILE while_1 PIZQ exp . PDER while_2 LLIZQ while_3 LLDER
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    PDER            shift and go to state 245
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 231

    (118) atom -> ID PUNTO . definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (78) definirInvocador -> .

    ID              reduce using rule 78 (definirInvocador -> .)

    definirInvocador               shift and go to state 246

state 232

    (137) lectura -> INPUT PIZQ atom limpiarInvocador . PDER PYC

    PDER            shift and go to state 247


state 233

    (71) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (118) atom -> ID PUNTO definirInvocador ID . checarAtributoDim COIZQ exp CODER
    (121) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (77) checarFuncion -> .
    (124) checarAtributoDim -> .
    (125) checarAtributo -> .

    PIZQ            reduce using rule 77 (checarFuncion -> .)
    COIZQ           reduce using rule 124 (checarAtributoDim -> .)
    IGUAL           reduce using rule 125 (checarAtributo -> .)

    checarAtributo                 shift and go to state 248
    checarFuncion                  shift and go to state 249
    checarAtributoDim              shift and go to state 250

state 234

    (73) llamada_func -> ID checarFuncion generaEra PIZQ . limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> ID checarFuncion generaEra PIZQ . limpiarInvocador PDER generarGosub
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)
    NOT             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    PIZQ            reduce using rule 11 (limpiarInvocador -> .)
    CTE_STR         reduce using rule 11 (limpiarInvocador -> .)
    CTE_CHAR        reduce using rule 11 (limpiarInvocador -> .)
    CTE_NUMERAL     reduce using rule 11 (limpiarInvocador -> .)
    CTE_REAL        reduce using rule 11 (limpiarInvocador -> .)
    TRUE            reduce using rule 11 (limpiarInvocador -> .)
    FALSE           reduce using rule 11 (limpiarInvocador -> .)
    ID              reduce using rule 11 (limpiarInvocador -> .)
    THIS            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 251

state 235

    (119) atom -> ID checarAtributoDim COIZQ exp . CODER
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    CODER           shift and go to state 252
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 236

    (129) ciclo_cond -> IF PIZQ exp PDER . if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> IF PIZQ exp PDER . if_1 LLIZQ if_2 LLDER
    (133) if_1 -> .

    LLIZQ           reduce using rule 133 (if_1 -> .)

    if_1                           shift and go to state 253

state 237

    (126) condicion -> ciclo_cond ELSE if_3 LLIZQ . ciclo_estatuto LLDER if_4
    (127) condicion -> ciclo_cond ELSE if_3 LLIZQ . LLDER if_4
    (62) ciclo_estatuto -> . estatuto
    (63) ciclo_estatuto -> . ciclo_estatuto estatuto
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 254
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    llamada_func                   shift and go to state 123
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 255
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 238

    (131) ciclo_cond -> ciclo_cond ELSE IF if_3 . PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF if_3 . PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    PIZQ            shift and go to state 256


state 239

    (120) atom -> THIS PUNTO definirInvocador ID . checarAtributoDim COIZQ exp CODER
    (123) atom -> THIS PUNTO definirInvocador ID . checarAtributo
    (124) checarAtributoDim -> .
    (125) checarAtributo -> .

    COIZQ           reduce using rule 124 (checarAtributoDim -> .)
    IGUAL           reduce using rule 125 (checarAtributo -> .)
    PYC             reduce using rule 125 (checarAtributo -> .)
    MAS             reduce using rule 125 (checarAtributo -> .)
    MENOS           reduce using rule 125 (checarAtributo -> .)
    POR             reduce using rule 125 (checarAtributo -> .)
    ENTRE           reduce using rule 125 (checarAtributo -> .)
    MOD             reduce using rule 125 (checarAtributo -> .)
    IGUALC          reduce using rule 125 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 125 (checarAtributo -> .)
    MAYOR           reduce using rule 125 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 125 (checarAtributo -> .)
    MENOR           reduce using rule 125 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 125 (checarAtributo -> .)
    AND             reduce using rule 125 (checarAtributo -> .)
    OR              reduce using rule 125 (checarAtributo -> .)
    PDER            reduce using rule 125 (checarAtributo -> .)
    CODER           reduce using rule 125 (checarAtributo -> .)
    COMA            reduce using rule 125 (checarAtributo -> .)

    checarAtributoDim              shift and go to state 258
    checarAtributo                 shift and go to state 257

state 240

    (138) escritura -> OUTPUT PIZQ exp PDER . PYC

    PYC             shift and go to state 259


state 241

    (49) params_ciclo -> tipo ID COIZQ pruebita cte_numeral CODER meterParametrosDim .

    PDER            reduce using rule 49 (params_ciclo -> tipo ID COIZQ pruebita cte_numeral CODER meterParametrosDim .)
    COMA            reduce using rule 49 (params_ciclo -> tipo ID COIZQ pruebita cte_numeral CODER meterParametrosDim .)


state 242

    (51) params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER . meterParametrosDim
    (53) meterParametrosDim -> .

    PDER            reduce using rule 53 (meterParametrosDim -> .)
    COMA            reduce using rule 53 (meterParametrosDim -> .)

    meterParametrosDim             shift and go to state 260

state 243

    (118) atom -> ID PUNTO definirInvocador ID . checarAtributoDim COIZQ exp CODER
    (121) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (71) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (124) checarAtributoDim -> .
    (125) checarAtributo -> .
    (77) checarFuncion -> .

    COIZQ           reduce using rule 124 (checarAtributoDim -> .)
    PYC             reduce using rule 125 (checarAtributo -> .)
    MAS             reduce using rule 125 (checarAtributo -> .)
    MENOS           reduce using rule 125 (checarAtributo -> .)
    POR             reduce using rule 125 (checarAtributo -> .)
    ENTRE           reduce using rule 125 (checarAtributo -> .)
    MOD             reduce using rule 125 (checarAtributo -> .)
    IGUALC          reduce using rule 125 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 125 (checarAtributo -> .)
    MAYOR           reduce using rule 125 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 125 (checarAtributo -> .)
    MENOR           reduce using rule 125 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 125 (checarAtributo -> .)
    AND             reduce using rule 125 (checarAtributo -> .)
    OR              reduce using rule 125 (checarAtributo -> .)
    PDER            reduce using rule 125 (checarAtributo -> .)
    CODER           reduce using rule 125 (checarAtributo -> .)
    COMA            reduce using rule 125 (checarAtributo -> .)
    PIZQ            reduce using rule 77 (checarFuncion -> .)

    checarAtributo                 shift and go to state 248
    checarFuncion                  shift and go to state 249
    checarAtributoDim              shift and go to state 250

state 244

    (117) asignacion -> atom limpiarInvocador IGUAL exp PYC .

    LLDER           reduce using rule 117 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    WHILE           reduce using rule 117 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    OUTPUT          reduce using rule 117 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    INPUT           reduce using rule 117 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    ID              reduce using rule 117 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    RETURN          reduce using rule 117 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    THIS            reduce using rule 117 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    IF              reduce using rule 117 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)


state 245

    (112) while -> WHILE while_1 PIZQ exp PDER . while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> WHILE while_1 PIZQ exp PDER . while_2 LLIZQ while_3 LLDER
    (115) while_2 -> .

    LLIZQ           reduce using rule 115 (while_2 -> .)

    while_2                        shift and go to state 261

state 246

    (118) atom -> ID PUNTO definirInvocador . ID checarAtributoDim COIZQ exp CODER
    (121) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 262


state 247

    (137) lectura -> INPUT PIZQ atom limpiarInvocador PDER . PYC

    PYC             shift and go to state 263


state 248

    (121) atom -> ID PUNTO definirInvocador ID checarAtributo .

    MAS             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUAL           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo .)


state 249

    (71) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . generaEra PIZQ limpiarInvocador PDER generarGosub
    (76) generaEra -> .

    PIZQ            reduce using rule 76 (generaEra -> .)

    generaEra                      shift and go to state 264

state 250

    (118) atom -> ID PUNTO definirInvocador ID checarAtributoDim . COIZQ exp CODER

    COIZQ           shift and go to state 265


state 251

    (73) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador . exp_ciclo PDER generarGosub
    (74) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador . PDER generarGosub
    (79) exp_ciclo -> . exp
    (80) exp_ciclo -> . exp_ciclo COMA exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    PDER            shift and go to state 266
    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    llamada_func                   shift and go to state 142
    cte_str                        shift and go to state 144
    exp_ciclo                      shift and go to state 267
    cte_bool                       shift and go to state 138
    exp                            shift and go to state 268
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    cte_numeral                    shift and go to state 140
    cte_real                       shift and go to state 145

state 252

    (119) atom -> ID checarAtributoDim COIZQ exp CODER .

    MAS             reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    MENOS           reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    POR             reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    ENTRE           reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    MOD             reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    IGUALC          reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    MAYOR           reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    MENOR           reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    AND             reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    OR              reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    PYC             reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    PDER            reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    CODER           reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    COMA            reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)
    IGUAL           reduce using rule 119 (atom -> ID checarAtributoDim COIZQ exp CODER .)


state 253

    (129) ciclo_cond -> IF PIZQ exp PDER if_1 . LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> IF PIZQ exp PDER if_1 . LLIZQ if_2 LLDER

    LLIZQ           shift and go to state 269


state 254

    (127) condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER . if_4
    (136) if_4 -> .

    LLDER           reduce using rule 136 (if_4 -> .)
    WHILE           reduce using rule 136 (if_4 -> .)
    OUTPUT          reduce using rule 136 (if_4 -> .)
    INPUT           reduce using rule 136 (if_4 -> .)
    ID              reduce using rule 136 (if_4 -> .)
    RETURN          reduce using rule 136 (if_4 -> .)
    THIS            reduce using rule 136 (if_4 -> .)
    IF              reduce using rule 136 (if_4 -> .)

    if_4                           shift and go to state 270

state 255

    (126) condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto . LLDER if_4
    (63) ciclo_estatuto -> ciclo_estatuto . estatuto
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 271
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    estatuto                       shift and go to state 168
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    llamada_func                   shift and go to state 123
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 256

    (131) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ . exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ . exp PDER if_1 LLIZQ if_2 LLDER
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 272
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_bool                       shift and go to state 138
    cte_numeral                    shift and go to state 140

state 257

    (123) atom -> THIS PUNTO definirInvocador ID checarAtributo .

    MAS             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUAL           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)


state 258

    (120) atom -> THIS PUNTO definirInvocador ID checarAtributoDim . COIZQ exp CODER

    COIZQ           shift and go to state 273


state 259

    (138) escritura -> OUTPUT PIZQ exp PDER PYC .

    LLDER           reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    WHILE           reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    OUTPUT          reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    INPUT           reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    ID              reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    RETURN          reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    THIS            reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    IF              reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)


state 260

    (51) params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim .

    PDER            reduce using rule 51 (params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim .)
    COMA            reduce using rule 51 (params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim .)


state 261

    (112) while -> WHILE while_1 PIZQ exp PDER while_2 . LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> WHILE while_1 PIZQ exp PDER while_2 . LLIZQ while_3 LLDER

    LLIZQ           shift and go to state 274


state 262

    (118) atom -> ID PUNTO definirInvocador ID . checarAtributoDim COIZQ exp CODER
    (121) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (124) checarAtributoDim -> .
    (125) checarAtributo -> .

    COIZQ           reduce using rule 124 (checarAtributoDim -> .)
    PDER            reduce using rule 125 (checarAtributo -> .)

    checarAtributoDim              shift and go to state 250
    checarAtributo                 shift and go to state 248

state 263

    (137) lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .

    WHILE           reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    OUTPUT          reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    INPUT           reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    ID              reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    RETURN          reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    THIS            reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    IF              reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    LLDER           reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)


state 264

    (71) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra . PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra . PIZQ limpiarInvocador PDER generarGosub

    PIZQ            shift and go to state 275


state 265

    (118) atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ . exp CODER
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 276
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 266

    (74) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER . generarGosub
    (75) generarGosub -> .

    PYC             reduce using rule 75 (generarGosub -> .)
    MAS             reduce using rule 75 (generarGosub -> .)
    MENOS           reduce using rule 75 (generarGosub -> .)
    POR             reduce using rule 75 (generarGosub -> .)
    ENTRE           reduce using rule 75 (generarGosub -> .)
    MOD             reduce using rule 75 (generarGosub -> .)
    IGUALC          reduce using rule 75 (generarGosub -> .)
    NOTIGUAL        reduce using rule 75 (generarGosub -> .)
    MAYOR           reduce using rule 75 (generarGosub -> .)
    MAYORIGUAL      reduce using rule 75 (generarGosub -> .)
    MENOR           reduce using rule 75 (generarGosub -> .)
    MENORIGUAL      reduce using rule 75 (generarGosub -> .)
    AND             reduce using rule 75 (generarGosub -> .)
    OR              reduce using rule 75 (generarGosub -> .)
    PDER            reduce using rule 75 (generarGosub -> .)
    CODER           reduce using rule 75 (generarGosub -> .)
    COMA            reduce using rule 75 (generarGosub -> .)

    generarGosub                   shift and go to state 277

state 267

    (73) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo . PDER generarGosub
    (80) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 278
    COMA            shift and go to state 279


state 268

    (79) exp_ciclo -> exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    PDER            reduce using rule 79 (exp_ciclo -> exp .)
    COMA            reduce using rule 79 (exp_ciclo -> exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 269

    (129) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ . ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ . if_2 LLDER
    (62) ciclo_estatuto -> . estatuto
    (63) ciclo_estatuto -> . ciclo_estatuto estatuto
    (134) if_2 -> .
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 134 (if_2 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 280
    if_2                           shift and go to state 281
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 270

    (127) condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .

    WHILE           reduce using rule 127 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    OUTPUT          reduce using rule 127 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    INPUT           reduce using rule 127 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    ID              reduce using rule 127 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    RETURN          reduce using rule 127 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    THIS            reduce using rule 127 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    IF              reduce using rule 127 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    LLDER           reduce using rule 127 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)


state 271

    (126) condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER . if_4
    (136) if_4 -> .

    LLDER           reduce using rule 136 (if_4 -> .)
    WHILE           reduce using rule 136 (if_4 -> .)
    OUTPUT          reduce using rule 136 (if_4 -> .)
    INPUT           reduce using rule 136 (if_4 -> .)
    ID              reduce using rule 136 (if_4 -> .)
    RETURN          reduce using rule 136 (if_4 -> .)
    THIS            reduce using rule 136 (if_4 -> .)
    IF              reduce using rule 136 (if_4 -> .)

    if_4                           shift and go to state 282

state 272

    (131) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp . PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp . PDER if_1 LLIZQ if_2 LLDER
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    PDER            shift and go to state 283
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 273

    (120) atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ . exp CODER
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 284
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 274

    (112) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ . ciclo_estatuto while_3 LLDER
    (113) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ . while_3 LLDER
    (62) ciclo_estatuto -> . estatuto
    (63) ciclo_estatuto -> . ciclo_estatuto estatuto
    (116) while_3 -> .
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 116 (while_3 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    while_3                        shift and go to state 285
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 286
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 275

    (71) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ . limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ . limpiarInvocador PDER generarGosub
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)
    NOT             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    PIZQ            reduce using rule 11 (limpiarInvocador -> .)
    CTE_STR         reduce using rule 11 (limpiarInvocador -> .)
    CTE_CHAR        reduce using rule 11 (limpiarInvocador -> .)
    CTE_NUMERAL     reduce using rule 11 (limpiarInvocador -> .)
    CTE_REAL        reduce using rule 11 (limpiarInvocador -> .)
    TRUE            reduce using rule 11 (limpiarInvocador -> .)
    FALSE           reduce using rule 11 (limpiarInvocador -> .)
    ID              reduce using rule 11 (limpiarInvocador -> .)
    THIS            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 287

state 276

    (118) atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp . CODER
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    CODER           shift and go to state 288
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 277

    (74) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .

    PYC             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAS             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENOS           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    POR             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    ENTRE           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MOD             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    IGUALC          reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    NOTIGUAL        reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAYOR           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAYORIGUAL      reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENOR           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENORIGUAL      reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    AND             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    OR              reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    PDER            reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    CODER           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    COMA            reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)


state 278

    (73) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER . generarGosub
    (75) generarGosub -> .

    PYC             reduce using rule 75 (generarGosub -> .)
    MAS             reduce using rule 75 (generarGosub -> .)
    MENOS           reduce using rule 75 (generarGosub -> .)
    POR             reduce using rule 75 (generarGosub -> .)
    ENTRE           reduce using rule 75 (generarGosub -> .)
    MOD             reduce using rule 75 (generarGosub -> .)
    IGUALC          reduce using rule 75 (generarGosub -> .)
    NOTIGUAL        reduce using rule 75 (generarGosub -> .)
    MAYOR           reduce using rule 75 (generarGosub -> .)
    MAYORIGUAL      reduce using rule 75 (generarGosub -> .)
    MENOR           reduce using rule 75 (generarGosub -> .)
    MENORIGUAL      reduce using rule 75 (generarGosub -> .)
    AND             reduce using rule 75 (generarGosub -> .)
    OR              reduce using rule 75 (generarGosub -> .)
    PDER            reduce using rule 75 (generarGosub -> .)
    CODER           reduce using rule 75 (generarGosub -> .)
    COMA            reduce using rule 75 (generarGosub -> .)

    generarGosub                   shift and go to state 289

state 279

    (80) exp_ciclo -> exp_ciclo COMA . exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 138
    cte_str                        shift and go to state 144
    cte_real                       shift and go to state 145
    exp                            shift and go to state 290
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    llamada_func                   shift and go to state 142
    cte_numeral                    shift and go to state 140

state 280

    (129) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto . if_2 LLDER
    (63) ciclo_estatuto -> ciclo_estatuto . estatuto
    (134) if_2 -> .
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 134 (if_2 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 168
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    if_2                           shift and go to state 291
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 281

    (130) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 . LLDER

    LLDER           shift and go to state 292


state 282

    (126) condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .

    WHILE           reduce using rule 126 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    OUTPUT          reduce using rule 126 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    INPUT           reduce using rule 126 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    ID              reduce using rule 126 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    RETURN          reduce using rule 126 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    THIS            reduce using rule 126 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    IF              reduce using rule 126 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    LLDER           reduce using rule 126 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)


state 283

    (131) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER . if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER . if_1 LLIZQ if_2 LLDER
    (133) if_1 -> .

    LLIZQ           reduce using rule 133 (if_1 -> .)

    if_1                           shift and go to state 293

state 284

    (120) atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp . CODER
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    CODER           shift and go to state 294
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 285

    (113) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 . LLDER

    LLDER           shift and go to state 295


state 286

    (112) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto . while_3 LLDER
    (63) ciclo_estatuto -> ciclo_estatuto . estatuto
    (116) while_3 -> .
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 116 (while_3 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 168
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    while_3                        shift and go to state 296
    asignacion                     shift and go to state 126
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 287

    (71) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador . exp_ciclo PDER generarGosub
    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador . PDER generarGosub
    (79) exp_ciclo -> . exp
    (80) exp_ciclo -> . exp_ciclo COMA exp
    (81) exp -> . exp MAS exp
    (82) exp -> . exp MENOS exp
    (83) exp -> . exp POR exp
    (84) exp -> . exp ENTRE exp
    (85) exp -> . exp MOD exp
    (86) exp -> . exp IGUALC exp
    (87) exp -> . exp NOTIGUAL exp
    (88) exp -> . exp MAYOR exp
    (89) exp -> . exp MAYORIGUAL exp
    (90) exp -> . exp MENOR exp
    (91) exp -> . exp MENORIGUAL exp
    (92) exp -> . exp AND exp
    (93) exp -> . exp OR exp
    (94) exp -> . NOT exp
    (95) exp -> . MENOS exp
    (96) exp -> . PIZQ exp PDER
    (97) exp -> . cte_str
    (98) exp -> . cte_char
    (99) exp -> . cte_numeral
    (100) exp -> . cte_real
    (101) exp -> . cte_bool
    (102) exp -> . atom limpiarInvocador
    (103) exp -> . llamada_func limpiarInvocador
    (104) cte_str -> . CTE_STR
    (105) cte_char -> . CTE_CHAR
    (106) cte_numeral -> . CTE_NUMERAL
    (107) cte_real -> . CTE_REAL
    (108) cte_bool -> . TRUE
    (109) cte_bool -> . FALSE
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    PDER            shift and go to state 297
    NOT             shift and go to state 153
    MENOS           shift and go to state 151
    PIZQ            shift and go to state 137
    CTE_STR         shift and go to state 150
    CTE_CHAR        shift and go to state 141
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 143
    TRUE            shift and go to state 139
    FALSE           shift and go to state 149
    ID              shift and go to state 148
    THIS            shift and go to state 129

    llamada_func                   shift and go to state 142
    cte_str                        shift and go to state 144
    exp_ciclo                      shift and go to state 298
    cte_bool                       shift and go to state 138
    exp                            shift and go to state 268
    atom                           shift and go to state 146
    cte_char                       shift and go to state 147
    cte_numeral                    shift and go to state 140
    cte_real                       shift and go to state 145

state 288

    (118) atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .

    MAS             reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MENOS           reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    POR             reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    ENTRE           reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MOD             reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    IGUALC          reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MAYOR           reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MENOR           reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    AND             reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    OR              reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    PYC             reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    PDER            reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    CODER           reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    COMA            reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    IGUAL           reduce using rule 118 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)


state 289

    (73) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .

    PYC             reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAS             reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENOS           reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    POR             reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    ENTRE           reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MOD             reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    IGUALC          reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    NOTIGUAL        reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAYOR           reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAYORIGUAL      reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENOR           reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENORIGUAL      reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    AND             reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    OR              reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    PDER            reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    CODER           reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    COMA            reduce using rule 73 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)


state 290

    (80) exp_ciclo -> exp_ciclo COMA exp .
    (81) exp -> exp . MAS exp
    (82) exp -> exp . MENOS exp
    (83) exp -> exp . POR exp
    (84) exp -> exp . ENTRE exp
    (85) exp -> exp . MOD exp
    (86) exp -> exp . IGUALC exp
    (87) exp -> exp . NOTIGUAL exp
    (88) exp -> exp . MAYOR exp
    (89) exp -> exp . MAYORIGUAL exp
    (90) exp -> exp . MENOR exp
    (91) exp -> exp . MENORIGUAL exp
    (92) exp -> exp . AND exp
    (93) exp -> exp . OR exp

    PDER            reduce using rule 80 (exp_ciclo -> exp_ciclo COMA exp .)
    COMA            reduce using rule 80 (exp_ciclo -> exp_ciclo COMA exp .)
    MAS             shift and go to state 184
    MENOS           shift and go to state 190
    POR             shift and go to state 187
    ENTRE           shift and go to state 186
    MOD             shift and go to state 196
    IGUALC          shift and go to state 185
    NOTIGUAL        shift and go to state 191
    MAYOR           shift and go to state 195
    MAYORIGUAL      shift and go to state 192
    MENOR           shift and go to state 189
    MENORIGUAL      shift and go to state 193
    AND             shift and go to state 183
    OR              shift and go to state 188


state 291

    (129) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 . LLDER

    LLDER           shift and go to state 299


state 292

    (130) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .

    ELSE            reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    WHILE           reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    OUTPUT          reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    INPUT           reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    ID              reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    RETURN          reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    THIS            reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    IF              reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    LLDER           reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)


state 293

    (131) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 . LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 . LLIZQ if_2 LLDER

    LLIZQ           shift and go to state 300


state 294

    (120) atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .

    MAS             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MENOS           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    POR             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    ENTRE           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MOD             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    IGUALC          reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MAYOR           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MENOR           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    AND             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    OR              reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    PYC             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    PDER            reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    CODER           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    COMA            reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)
    IGUAL           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER .)


state 295

    (113) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .

    WHILE           reduce using rule 113 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    OUTPUT          reduce using rule 113 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    INPUT           reduce using rule 113 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    ID              reduce using rule 113 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    RETURN          reduce using rule 113 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    THIS            reduce using rule 113 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    IF              reduce using rule 113 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    LLDER           reduce using rule 113 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)


state 296

    (112) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 . LLDER

    LLDER           shift and go to state 301


state 297

    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER . generarGosub
    (75) generarGosub -> .

    PYC             reduce using rule 75 (generarGosub -> .)
    MAS             reduce using rule 75 (generarGosub -> .)
    MENOS           reduce using rule 75 (generarGosub -> .)
    POR             reduce using rule 75 (generarGosub -> .)
    ENTRE           reduce using rule 75 (generarGosub -> .)
    MOD             reduce using rule 75 (generarGosub -> .)
    IGUALC          reduce using rule 75 (generarGosub -> .)
    NOTIGUAL        reduce using rule 75 (generarGosub -> .)
    MAYOR           reduce using rule 75 (generarGosub -> .)
    MAYORIGUAL      reduce using rule 75 (generarGosub -> .)
    MENOR           reduce using rule 75 (generarGosub -> .)
    MENORIGUAL      reduce using rule 75 (generarGosub -> .)
    AND             reduce using rule 75 (generarGosub -> .)
    OR              reduce using rule 75 (generarGosub -> .)
    PDER            reduce using rule 75 (generarGosub -> .)
    CODER           reduce using rule 75 (generarGosub -> .)
    COMA            reduce using rule 75 (generarGosub -> .)

    generarGosub                   shift and go to state 302

state 298

    (71) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo . PDER generarGosub
    (80) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 303
    COMA            shift and go to state 279


state 299

    (129) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .

    ELSE            reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    WHILE           reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    OUTPUT          reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    INPUT           reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    ID              reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    RETURN          reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    THIS            reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    IF              reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    LLDER           reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)


state 300

    (131) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ . ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ . if_2 LLDER
    (62) ciclo_estatuto -> . estatuto
    (63) ciclo_estatuto -> . ciclo_estatuto estatuto
    (134) if_2 -> .
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 134 (if_2 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    atom                           shift and go to state 113
    ciclo_cond                     shift and go to state 128
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 304
    if_2                           shift and go to state 305
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 301

    (112) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .

    WHILE           reduce using rule 112 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    OUTPUT          reduce using rule 112 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    INPUT           reduce using rule 112 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    ID              reduce using rule 112 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    RETURN          reduce using rule 112 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    THIS            reduce using rule 112 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    IF              reduce using rule 112 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    LLDER           reduce using rule 112 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)


state 302

    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .

    PYC             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAS             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENOS           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    POR             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    ENTRE           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MOD             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    IGUALC          reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    NOTIGUAL        reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAYOR           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAYORIGUAL      reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENOR           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENORIGUAL      reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    AND             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    OR              reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    PDER            reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    CODER           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    COMA            reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)


state 303

    (71) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER . generarGosub
    (75) generarGosub -> .

    PYC             reduce using rule 75 (generarGosub -> .)
    MAS             reduce using rule 75 (generarGosub -> .)
    MENOS           reduce using rule 75 (generarGosub -> .)
    POR             reduce using rule 75 (generarGosub -> .)
    ENTRE           reduce using rule 75 (generarGosub -> .)
    MOD             reduce using rule 75 (generarGosub -> .)
    IGUALC          reduce using rule 75 (generarGosub -> .)
    NOTIGUAL        reduce using rule 75 (generarGosub -> .)
    MAYOR           reduce using rule 75 (generarGosub -> .)
    MAYORIGUAL      reduce using rule 75 (generarGosub -> .)
    MENOR           reduce using rule 75 (generarGosub -> .)
    MENORIGUAL      reduce using rule 75 (generarGosub -> .)
    AND             reduce using rule 75 (generarGosub -> .)
    OR              reduce using rule 75 (generarGosub -> .)
    PDER            reduce using rule 75 (generarGosub -> .)
    CODER           reduce using rule 75 (generarGosub -> .)
    COMA            reduce using rule 75 (generarGosub -> .)

    generarGosub                   shift and go to state 306

state 304

    (131) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto . if_2 LLDER
    (63) ciclo_estatuto -> ciclo_estatuto . estatuto
    (134) if_2 -> .
    (64) estatuto -> . while
    (65) estatuto -> . asignacion
    (66) estatuto -> . condicion
    (67) estatuto -> . escritura
    (68) estatuto -> . lectura
    (69) estatuto -> . llamada_func limpiarInvocador PYC
    (70) estatuto -> . return
    (112) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (113) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (126) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (127) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (128) condicion -> . ciclo_cond if_4
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (71) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (73) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (110) return -> . RETURN exp PYC
    (111) return -> . RETURN PYC
    (118) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (119) atom -> . ID checarAtributoDim COIZQ exp CODER
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ exp CODER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (122) atom -> . ID checarAtributo
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 134 (if_2 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 170
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 168
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    atom                           shift and go to state 113
    ciclo_cond                     shift and go to state 128
    asignacion                     shift and go to state 126
    if_2                           shift and go to state 307
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 305

    (132) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 . LLDER

    LLDER           shift and go to state 308


state 306

    (71) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .

    PYC             reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAS             reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENOS           reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    POR             reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    ENTRE           reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MOD             reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    IGUALC          reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    NOTIGUAL        reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAYOR           reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAYORIGUAL      reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENOR           reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENORIGUAL      reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    AND             reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    OR              reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    PDER            reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    CODER           reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    COMA            reduce using rule 71 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)


state 307

    (131) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 . LLDER

    LLDER           shift and go to state 309


state 308

    (132) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .

    ELSE            reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    WHILE           reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    OUTPUT          reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    INPUT           reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    ID              reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    RETURN          reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    THIS            reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    IF              reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    LLDER           reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)


state 309

    (131) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .

    ELSE            reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    WHILE           reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    OUTPUT          reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    INPUT           reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    ID              reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    RETURN          reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    THIS            reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    IF              reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    LLDER           reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)

