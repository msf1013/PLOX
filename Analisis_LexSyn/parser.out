Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ciclo_clase clase_main
Rule 2     programa -> clase_main
Rule 3     ciclo_clase -> clase
Rule 4     ciclo_clase -> ciclo_clase clase
Rule 5     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
Rule 6     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
Rule 7     clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
Rule 8     clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual
Rule 9     declararClase -> <empty>
Rule 10    limpiarMetodoActual -> <empty>
Rule 11    limpiarInvocador -> <empty>
Rule 12    herencia -> empty
Rule 13    herencia -> UNDER ID agregaAncestro
Rule 14    agregaAncestro -> <empty>
Rule 15    ciclo_vars -> acceso vars
Rule 16    ciclo_vars -> ciclo_vars acceso vars
Rule 17    ciclo_func -> func
Rule 18    ciclo_func -> ciclo_func func
Rule 19    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
Rule 20    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
Rule 21    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
Rule 22    clase_main -> CLASS MAIN declararClase LLIZQ main LLDER
Rule 23    vars -> var_op PYC
Rule 24    var_op -> tipo ciclo_tipo
Rule 25    var_op -> ID revisarExistenciaClase DOSP ciclo_id
Rule 26    revisarExistenciaClase -> <empty>
Rule 27    ciclo_tipo -> ID declararVariable
Rule 28    ciclo_tipo -> ID declararVariable COIZQ exp CODER
Rule 29    ciclo_tipo -> ciclo_tipo COMA ID declararVariable
Rule 30    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER
Rule 31    ciclo_tipo -> ID declararVariable IGUAL exp
Rule 32    ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp
Rule 33    ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp
Rule 34    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp
Rule 35    ciclo_id -> ID declararVariable
Rule 36    ciclo_id -> ID declararVariable COIZQ exp CODER
Rule 37    ciclo_id -> ciclo_id COMA ID declararVariable
Rule 38    ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER
Rule 39    ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador
Rule 40    ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador
Rule 41    declararVariable -> <empty>
Rule 42    tipo -> NUMERAL
Rule 43    tipo -> REAL
Rule 44    tipo -> BOOL
Rule 45    tipo -> CHAR
Rule 46    tipo -> STRING
Rule 47    acceso -> HIDDEN
Rule 48    acceso -> VISIBLE
Rule 49    func -> acceso tipo ID declararMetodo params cuerpo_func
Rule 50    func -> acceso WITHOUT ID declararMetodo params cuerpo_func
Rule 51    declararMetodo -> <empty>
Rule 52    main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
Rule 53    params -> PIZQ params_ciclo PDER
Rule 54    params -> PIZQ PDER
Rule 55    params_ciclo -> tipo ID meterParametros
Rule 56    params_ciclo -> params_ciclo COMA tipo ID meterParametros
Rule 57    meterParametros -> <empty>
Rule 58    cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER
Rule 59    cuerpo_func -> LLIZQ ciclo_vars_func LLDER
Rule 60    cuerpo_func -> LLIZQ ciclo_estatuto LLDER
Rule 61    cuerpo_func -> LLIZQ LLDER
Rule 62    ciclo_vars_func -> vars
Rule 63    ciclo_vars_func -> ciclo_vars_func vars
Rule 64    ciclo_estatuto -> estatuto
Rule 65    ciclo_estatuto -> ciclo_estatuto estatuto
Rule 66    estatuto -> while
Rule 67    estatuto -> asignacion
Rule 68    estatuto -> condicion
Rule 69    estatuto -> escritura
Rule 70    estatuto -> lectura
Rule 71    estatuto -> llamada_func limpiarInvocador PYC
Rule 72    estatuto -> return
Rule 73    llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER
Rule 74    llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
Rule 75    llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
Rule 76    llamada_func -> ID checarFuncion PIZQ PDER
Rule 77    llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
Rule 78    llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
Rule 79    checarFuncion -> <empty>
Rule 80    definirInvocador -> <empty>
Rule 81    exp_ciclo -> exp
Rule 82    exp_ciclo -> exp_ciclo COMA exp
Rule 83    cte_bool -> TRUE
Rule 84    cte_bool -> FALSE
Rule 85    exp -> exp MAS exp
Rule 86    exp -> exp MENOS exp
Rule 87    exp -> exp POR exp
Rule 88    exp -> exp ENTRE exp
Rule 89    exp -> exp MOD exp
Rule 90    exp -> exp IGUALC exp
Rule 91    exp -> exp NOTIGUAL exp
Rule 92    exp -> exp MAYOR exp
Rule 93    exp -> exp MAYORIGUAL exp
Rule 94    exp -> exp MENOR exp
Rule 95    exp -> exp MENORIGUAL exp
Rule 96    exp -> exp AND exp
Rule 97    exp -> exp OR exp
Rule 98    exp -> NOT exp
Rule 99    exp -> MENOS exp
Rule 100   exp -> PIZQ exp PDER
Rule 101   exp -> CTE_STR
Rule 102   exp -> CTE_CHAR
Rule 103   exp -> CTE_NUMERAL
Rule 104   exp -> CTE_REAL
Rule 105   exp -> cte_bool
Rule 106   exp -> atom limpiarInvocador
Rule 107   exp -> llamada_func limpiarInvocador
Rule 108   return -> RETURN exp PYC
Rule 109   return -> RETURN PYC
Rule 110   while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 111   while -> WHILE PIZQ exp PDER LLIZQ LLDER
Rule 112   asignacion -> atom limpiarInvocador IGUAL exp PYC
Rule 113   atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
Rule 114   atom -> ID PUNTO definirInvocador ID checarAtributo
Rule 115   atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
Rule 116   atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
Rule 117   atom -> ID checarAtributo
Rule 118   atom -> ID definirInvocador COIZQ exp CODER checarAtributo2
Rule 119   atom -> THIS PUNTO definirInvocador ID checarAtributo
Rule 120   atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
Rule 121   checarAtributo2 -> <empty>
Rule 122   checarAtributo -> <empty>
Rule 123   condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
Rule 124   condicion -> ciclo_cond ELSE LLIZQ LLDER
Rule 125   ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 126   ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER
Rule 127   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 128   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER
Rule 129   lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC
Rule 130   escritura -> OUTPUT PIZQ exp PDER PYC
Rule 131   empty -> <empty>

Terminals, with rules where they appear

AND                  : 96
BOOL                 : 44
CHAR                 : 45
CLASS                : 5 6 7 8 19 20 21 22
CODER                : 28 30 32 34 36 38 75 78 113 115 115 116 118 120
COIZQ                : 28 30 32 34 36 38 75 78 113 115 115 116 118 120
COMA                 : 29 30 33 34 37 38 40 56 82
CTE_CHAR             : 102
CTE_NUMERAL          : 103
CTE_REAL             : 104
CTE_STR              : 101
DOSP                 : 25
ELSE                 : 123 124 127 128
ENTRE                : 88
FALSE                : 84
HIDDEN               : 47
ID                   : 5 6 7 8 13 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 49 50 55 56 73 74 74 75 75 76 77 77 78 78 113 113 114 114 115 115 116 116 117 118 119 120
IF                   : 125 126 127 128
IGUAL                : 31 32 33 34 39 40 112
IGUALC               : 90
INPUT                : 129
LLDER                : 5 6 7 8 19 20 21 22 58 59 60 61 110 111 123 124 125 126 127 128
LLIZQ                : 5 6 7 8 19 20 21 22 58 59 60 61 110 111 123 124 125 126 127 128
MAIN                 : 19 20 21 22 52
MAS                  : 85
MAYOR                : 92
MAYORIGUAL           : 93
MENOR                : 94
MENORIGUAL           : 95
MENOS                : 86 99
MOD                  : 89
NOT                  : 98
NOTIGUAL             : 91
NUMERAL              : 42
OR                   : 97
OUTPUT               : 130
PDER                 : 52 53 54 73 74 75 76 77 78 100 110 111 125 126 127 128 129 130
PIZQ                 : 52 53 54 73 74 75 76 77 78 100 110 111 125 126 127 128 129 130
POR                  : 87
PUNTO                : 74 75 77 78 113 114 115 116 119 120
PYC                  : 23 71 108 109 112 129 130
REAL                 : 43
RETURN               : 108 109
STRING               : 46
THIS                 : 119 120
TRUE                 : 83
UNDER                : 13
VISIBLE              : 48
WHILE                : 110 111
WITHOUT              : 50 52
error                : 

Nonterminals, with rules where they appear

acceso               : 15 16 49 50 52
agregaAncestro       : 13
asignacion           : 67
atom                 : 39 40 106 112 129
checarAtributo       : 113 114 115 116 117 119 120
checarAtributo2      : 118
checarFuncion        : 73 74 75 76 77 78
ciclo_clase          : 1 4
ciclo_cond           : 123 124 127 128
ciclo_estatuto       : 58 60 65 110 123 125 127
ciclo_func           : 5 7 18 19 21
ciclo_id             : 25 37 38 40
ciclo_tipo           : 24 29 30 33 34
ciclo_vars           : 5 6 16 19 20
ciclo_vars_func      : 58 59 63
clase                : 3 4
clase_main           : 1 2
condicion            : 68
cte_bool             : 105
cuerpo_func          : 49 50 52
declararClase        : 5 6 7 8 19 20 21 22
declararMetodo       : 49 50 52
declararVariable     : 27 28 29 30 31 32 33 34 35 36 37 38 39 40
definirInvocador     : 74 75 77 78 113 114 115 116 118 119 120
empty                : 12
escritura            : 69
estatuto             : 64 65
exp                  : 28 30 31 32 32 33 34 34 36 38 75 78 81 82 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 99 100 108 110 111 112 113 115 115 116 118 120 125 126 127 128 130
exp_ciclo            : 73 74 75 82
func                 : 17 18
herencia             : 5 6 7 8
lectura              : 70
limpiarInvocador     : 39 40 71 106 107 112 129
limpiarMetodoActual  : 5 6 7 8
llamada_func         : 71 107
main                 : 19 20 21 22
meterParametros      : 55 56
params               : 49 50
params_ciclo         : 53 56
programa             : 0
return               : 72
revisarExistenciaClase : 25
tipo                 : 24 49 55 56
var_op               : 23
vars                 : 15 16 62 63
while                : 66

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ciclo_clase clase_main
    (2) programa -> . clase_main
    (3) ciclo_clase -> . clase
    (4) ciclo_clase -> . ciclo_clase clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    ciclo_clase                    shift and go to state 1
    clase_main                     shift and go to state 2
    clase                          shift and go to state 3
    programa                       shift and go to state 4

state 1

    (1) programa -> ciclo_clase . clase_main
    (4) ciclo_clase -> ciclo_clase . clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    clase_main                     shift and go to state 6
    clase                          shift and go to state 7

state 2

    (2) programa -> clase_main .

    $end            reduce using rule 2 (programa -> clase_main .)


state 3

    (3) ciclo_clase -> clase .

    CLASS           reduce using rule 3 (ciclo_clase -> clase .)


state 4

    (0) S' -> programa .



state 5

    (19) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS . MAIN declararClase LLIZQ main LLDER
    (5) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS . ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    MAIN            shift and go to state 8
    ID              shift and go to state 9


state 6

    (1) programa -> ciclo_clase clase_main .

    $end            reduce using rule 1 (programa -> ciclo_clase clase_main .)


state 7

    (4) ciclo_clase -> ciclo_clase clase .

    CLASS           reduce using rule 4 (ciclo_clase -> ciclo_clase clase .)


state 8

    (19) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN . declararClase LLIZQ main LLDER
    (9) declararClase -> .

    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 10

state 9

    (5) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID . declararClase herencia LLIZQ LLDER limpiarMetodoActual
    (9) declararClase -> .

    UNDER           reduce using rule 9 (declararClase -> .)
    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 11

state 10

    (19) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase . LLIZQ main LLDER

    LLIZQ           shift and go to state 12


state 11

    (5) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase . herencia LLIZQ LLDER limpiarMetodoActual
    (12) herencia -> . empty
    (13) herencia -> . UNDER ID agregaAncestro
    (131) empty -> .

    UNDER           shift and go to state 13
    LLIZQ           reduce using rule 131 (empty -> .)

    herencia                       shift and go to state 14
    empty                          shift and go to state 15

state 12

    (19) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase LLIZQ . main LLDER
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 18
    ciclo_func                     shift and go to state 17
    ciclo_vars                     shift and go to state 19
    func                           shift and go to state 21
    main                           shift and go to state 16

state 13

    (13) herencia -> UNDER . ID agregaAncestro

    ID              shift and go to state 23


state 14

    (5) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia . LLIZQ LLDER limpiarMetodoActual

    LLIZQ           shift and go to state 24


state 15

    (12) herencia -> empty .

    LLIZQ           reduce using rule 12 (herencia -> empty .)


state 16

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main . LLDER

    LLDER           shift and go to state 25


state 17

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 28

state 18

    (15) ciclo_vars -> acceso . vars
    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 30
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 19

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . main LLDER
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 41
    ciclo_func                     shift and go to state 40
    func                           shift and go to state 21
    main                           shift and go to state 39

state 20

    (48) acceso -> VISIBLE .

    WITHOUT         reduce using rule 48 (acceso -> VISIBLE .)
    NUMERAL         reduce using rule 48 (acceso -> VISIBLE .)
    REAL            reduce using rule 48 (acceso -> VISIBLE .)
    BOOL            reduce using rule 48 (acceso -> VISIBLE .)
    CHAR            reduce using rule 48 (acceso -> VISIBLE .)
    STRING          reduce using rule 48 (acceso -> VISIBLE .)
    ID              reduce using rule 48 (acceso -> VISIBLE .)


state 21

    (17) ciclo_func -> func .

    LLDER           reduce using rule 17 (ciclo_func -> func .)
    HIDDEN          reduce using rule 17 (ciclo_func -> func .)
    VISIBLE         reduce using rule 17 (ciclo_func -> func .)


state 22

    (47) acceso -> HIDDEN .

    WITHOUT         reduce using rule 47 (acceso -> HIDDEN .)
    NUMERAL         reduce using rule 47 (acceso -> HIDDEN .)
    REAL            reduce using rule 47 (acceso -> HIDDEN .)
    BOOL            reduce using rule 47 (acceso -> HIDDEN .)
    CHAR            reduce using rule 47 (acceso -> HIDDEN .)
    STRING          reduce using rule 47 (acceso -> HIDDEN .)
    ID              reduce using rule 47 (acceso -> HIDDEN .)


state 23

    (13) herencia -> UNDER ID . agregaAncestro
    (14) agregaAncestro -> .

    LLIZQ           reduce using rule 14 (agregaAncestro -> .)

    agregaAncestro                 shift and go to state 42

state 24

    (5) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia LLIZQ . LLDER limpiarMetodoActual
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 43
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 45
    ciclo_func                     shift and go to state 44
    ciclo_vars                     shift and go to state 46
    func                           shift and go to state 21

state 25

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .

    $end            reduce using rule 22 (clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .)


state 26

    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 47

state 27

    (18) ciclo_func -> ciclo_func func .

    LLDER           reduce using rule 18 (ciclo_func -> ciclo_func func .)
    HIDDEN          reduce using rule 18 (ciclo_func -> ciclo_func func .)
    VISIBLE         reduce using rule 18 (ciclo_func -> ciclo_func func .)


state 28

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main . LLDER

    LLDER           shift and go to state 48


state 29

    (43) tipo -> REAL .

    ID              reduce using rule 43 (tipo -> REAL .)


state 30

    (15) ciclo_vars -> acceso vars .

    HIDDEN          reduce using rule 15 (ciclo_vars -> acceso vars .)
    VISIBLE         reduce using rule 15 (ciclo_vars -> acceso vars .)
    LLDER           reduce using rule 15 (ciclo_vars -> acceso vars .)


state 31

    (45) tipo -> CHAR .

    ID              reduce using rule 45 (tipo -> CHAR .)


state 32

    (23) vars -> var_op . PYC

    PYC             shift and go to state 49


state 33

    (42) tipo -> NUMERAL .

    ID              reduce using rule 42 (tipo -> NUMERAL .)


state 34

    (49) func -> acceso tipo . ID declararMetodo params cuerpo_func
    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> . ID declararVariable IGUAL exp
    (32) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 51

    ciclo_tipo                     shift and go to state 50

state 35

    (46) tipo -> STRING .

    ID              reduce using rule 46 (tipo -> STRING .)


state 36

    (52) main -> acceso WITHOUT . MAIN declararMetodo PIZQ PDER cuerpo_func
    (50) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    MAIN            shift and go to state 53
    ID              shift and go to state 52


state 37

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (26) revisarExistenciaClase -> .

    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)

    revisarExistenciaClase         shift and go to state 54

state 38

    (44) tipo -> BOOL .

    ID              reduce using rule 44 (tipo -> BOOL .)


state 39

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main . LLDER

    LLDER           shift and go to state 55


state 40

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 56

state 41

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 57
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 42

    (13) herencia -> UNDER ID agregaAncestro .

    LLIZQ           reduce using rule 13 (herencia -> UNDER ID agregaAncestro .)


state 43

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 58

state 44

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    LLDER           shift and go to state 59
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 45

    (15) ciclo_vars -> acceso . vars
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 30
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 46

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . LLDER limpiarMetodoActual
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 62
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 64
    ciclo_func                     shift and go to state 63
    func                           shift and go to state 21

state 47

    (49) func -> acceso tipo . ID declararMetodo params cuerpo_func

    ID              shift and go to state 65


state 48

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .

    $end            reduce using rule 21 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .)


state 49

    (23) vars -> var_op PYC .

    HIDDEN          reduce using rule 23 (vars -> var_op PYC .)
    VISIBLE         reduce using rule 23 (vars -> var_op PYC .)
    LLDER           reduce using rule 23 (vars -> var_op PYC .)
    ID              reduce using rule 23 (vars -> var_op PYC .)
    WHILE           reduce using rule 23 (vars -> var_op PYC .)
    OUTPUT          reduce using rule 23 (vars -> var_op PYC .)
    INPUT           reduce using rule 23 (vars -> var_op PYC .)
    RETURN          reduce using rule 23 (vars -> var_op PYC .)
    NUMERAL         reduce using rule 23 (vars -> var_op PYC .)
    REAL            reduce using rule 23 (vars -> var_op PYC .)
    BOOL            reduce using rule 23 (vars -> var_op PYC .)
    CHAR            reduce using rule 23 (vars -> var_op PYC .)
    STRING          reduce using rule 23 (vars -> var_op PYC .)
    THIS            reduce using rule 23 (vars -> var_op PYC .)
    IF              reduce using rule 23 (vars -> var_op PYC .)


state 50

    (24) var_op -> tipo ciclo_tipo .
    (29) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER IGUAL exp

    PYC             reduce using rule 24 (var_op -> tipo ciclo_tipo .)
    COMA            shift and go to state 66


state 51

    (49) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> ID . declararVariable IGUAL exp
    (32) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (51) declararMetodo -> .
    (41) declararVariable -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)
    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 67
    declararMetodo                 shift and go to state 68

state 52

    (50) func -> acceso WITHOUT ID . declararMetodo params cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 69

state 53

    (52) main -> acceso WITHOUT MAIN . declararMetodo PIZQ PDER cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 70

state 54

    (25) var_op -> ID revisarExistenciaClase . DOSP ciclo_id

    DOSP            shift and go to state 71


state 55

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .

    $end            reduce using rule 20 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .)


state 56

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main . LLDER

    LLDER           shift and go to state 72


state 57

    (16) ciclo_vars -> ciclo_vars acceso vars .

    HIDDEN          reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    VISIBLE         reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    LLDER           reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)


state 58

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .

    CLASS           reduce using rule 8 (clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .)


state 59

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 73

state 60

    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 47

state 61

    (50) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    ID              shift and go to state 52


state 62

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 74

state 63

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    LLDER           shift and go to state 75
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 64

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 57
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 65

    (49) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 68

state 66

    (29) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 76


state 67

    (27) ciclo_tipo -> ID declararVariable .
    (28) ciclo_tipo -> ID declararVariable . COIZQ exp CODER
    (31) ciclo_tipo -> ID declararVariable . IGUAL exp
    (32) ciclo_tipo -> ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    PYC             reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    COIZQ           shift and go to state 78
    IGUAL           shift and go to state 77


state 68

    (49) func -> acceso tipo ID declararMetodo . params cuerpo_func
    (53) params -> . PIZQ params_ciclo PDER
    (54) params -> . PIZQ PDER

    PIZQ            shift and go to state 79

    params                         shift and go to state 80

state 69

    (50) func -> acceso WITHOUT ID declararMetodo . params cuerpo_func
    (53) params -> . PIZQ params_ciclo PDER
    (54) params -> . PIZQ PDER

    PIZQ            shift and go to state 79

    params                         shift and go to state 81

state 70

    (52) main -> acceso WITHOUT MAIN declararMetodo . PIZQ PDER cuerpo_func

    PIZQ            shift and go to state 82


state 71

    (25) var_op -> ID revisarExistenciaClase DOSP . ciclo_id
    (35) ciclo_id -> . ID declararVariable
    (36) ciclo_id -> . ID declararVariable COIZQ exp CODER
    (37) ciclo_id -> . ciclo_id COMA ID declararVariable
    (38) ciclo_id -> . ciclo_id COMA ID declararVariable COIZQ exp CODER
    (39) ciclo_id -> . ID declararVariable IGUAL atom limpiarInvocador
    (40) ciclo_id -> . ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador

    ID              shift and go to state 84

    ciclo_id                       shift and go to state 83

state 72

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .

    $end            reduce using rule 19 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .)


state 73

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 7 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .)


state 74

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .

    CLASS           reduce using rule 6 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .)


state 75

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 85

state 76

    (29) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER IGUAL exp
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 86

state 77

    (31) ciclo_tipo -> ID declararVariable IGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 100
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 78

    (28) ciclo_tipo -> ID declararVariable COIZQ . exp CODER
    (32) ciclo_tipo -> ID declararVariable COIZQ . exp CODER IGUAL exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 102
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 79

    (53) params -> PIZQ . params_ciclo PDER
    (54) params -> PIZQ . PDER
    (55) params_ciclo -> . tipo ID meterParametros
    (56) params_ciclo -> . params_ciclo COMA tipo ID meterParametros
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    PDER            shift and go to state 105
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 103
    params_ciclo                   shift and go to state 104

state 80

    (49) func -> acceso tipo ID declararMetodo params . cuerpo_func
    (58) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (59) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (60) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (61) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 106

    cuerpo_func                    shift and go to state 107

state 81

    (50) func -> acceso WITHOUT ID declararMetodo params . cuerpo_func
    (58) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (59) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (60) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (61) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 106

    cuerpo_func                    shift and go to state 108

state 82

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ . PDER cuerpo_func

    PDER            shift and go to state 109


state 83

    (25) var_op -> ID revisarExistenciaClase DOSP ciclo_id .
    (37) ciclo_id -> ciclo_id . COMA ID declararVariable
    (38) ciclo_id -> ciclo_id . COMA ID declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id . COMA ID declararVariable IGUAL atom limpiarInvocador

    PYC             reduce using rule 25 (var_op -> ID revisarExistenciaClase DOSP ciclo_id .)
    COMA            shift and go to state 110


state 84

    (35) ciclo_id -> ID . declararVariable
    (36) ciclo_id -> ID . declararVariable COIZQ exp CODER
    (39) ciclo_id -> ID . declararVariable IGUAL atom limpiarInvocador
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 111

state 85

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 5 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .)


state 86

    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable .
    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    PYC             reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    COIZQ           shift and go to state 113
    IGUAL           shift and go to state 112


state 87

    (100) exp -> PIZQ . exp PDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 114
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 88

    (106) exp -> atom . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 115

state 89

    (105) exp -> cte_bool .

    CODER           reduce using rule 105 (exp -> cte_bool .)
    MAS             reduce using rule 105 (exp -> cte_bool .)
    MENOS           reduce using rule 105 (exp -> cte_bool .)
    POR             reduce using rule 105 (exp -> cte_bool .)
    ENTRE           reduce using rule 105 (exp -> cte_bool .)
    MOD             reduce using rule 105 (exp -> cte_bool .)
    IGUALC          reduce using rule 105 (exp -> cte_bool .)
    NOTIGUAL        reduce using rule 105 (exp -> cte_bool .)
    MAYOR           reduce using rule 105 (exp -> cte_bool .)
    MAYORIGUAL      reduce using rule 105 (exp -> cte_bool .)
    MENOR           reduce using rule 105 (exp -> cte_bool .)
    MENORIGUAL      reduce using rule 105 (exp -> cte_bool .)
    AND             reduce using rule 105 (exp -> cte_bool .)
    OR              reduce using rule 105 (exp -> cte_bool .)
    COMA            reduce using rule 105 (exp -> cte_bool .)
    PYC             reduce using rule 105 (exp -> cte_bool .)
    PDER            reduce using rule 105 (exp -> cte_bool .)


state 90

    (83) cte_bool -> TRUE .

    MAS             reduce using rule 83 (cte_bool -> TRUE .)
    MENOS           reduce using rule 83 (cte_bool -> TRUE .)
    POR             reduce using rule 83 (cte_bool -> TRUE .)
    ENTRE           reduce using rule 83 (cte_bool -> TRUE .)
    MOD             reduce using rule 83 (cte_bool -> TRUE .)
    IGUALC          reduce using rule 83 (cte_bool -> TRUE .)
    NOTIGUAL        reduce using rule 83 (cte_bool -> TRUE .)
    MAYOR           reduce using rule 83 (cte_bool -> TRUE .)
    MAYORIGUAL      reduce using rule 83 (cte_bool -> TRUE .)
    MENOR           reduce using rule 83 (cte_bool -> TRUE .)
    MENORIGUAL      reduce using rule 83 (cte_bool -> TRUE .)
    AND             reduce using rule 83 (cte_bool -> TRUE .)
    OR              reduce using rule 83 (cte_bool -> TRUE .)
    COMA            reduce using rule 83 (cte_bool -> TRUE .)
    PYC             reduce using rule 83 (cte_bool -> TRUE .)
    CODER           reduce using rule 83 (cte_bool -> TRUE .)
    PDER            reduce using rule 83 (cte_bool -> TRUE .)


state 91

    (103) exp -> CTE_NUMERAL .

    CODER           reduce using rule 103 (exp -> CTE_NUMERAL .)
    MAS             reduce using rule 103 (exp -> CTE_NUMERAL .)
    MENOS           reduce using rule 103 (exp -> CTE_NUMERAL .)
    POR             reduce using rule 103 (exp -> CTE_NUMERAL .)
    ENTRE           reduce using rule 103 (exp -> CTE_NUMERAL .)
    MOD             reduce using rule 103 (exp -> CTE_NUMERAL .)
    IGUALC          reduce using rule 103 (exp -> CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 103 (exp -> CTE_NUMERAL .)
    MAYOR           reduce using rule 103 (exp -> CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 103 (exp -> CTE_NUMERAL .)
    MENOR           reduce using rule 103 (exp -> CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 103 (exp -> CTE_NUMERAL .)
    AND             reduce using rule 103 (exp -> CTE_NUMERAL .)
    OR              reduce using rule 103 (exp -> CTE_NUMERAL .)
    COMA            reduce using rule 103 (exp -> CTE_NUMERAL .)
    PYC             reduce using rule 103 (exp -> CTE_NUMERAL .)
    PDER            reduce using rule 103 (exp -> CTE_NUMERAL .)


state 92

    (107) exp -> llamada_func . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 116

state 93

    (104) exp -> CTE_REAL .

    CODER           reduce using rule 104 (exp -> CTE_REAL .)
    MAS             reduce using rule 104 (exp -> CTE_REAL .)
    MENOS           reduce using rule 104 (exp -> CTE_REAL .)
    POR             reduce using rule 104 (exp -> CTE_REAL .)
    ENTRE           reduce using rule 104 (exp -> CTE_REAL .)
    MOD             reduce using rule 104 (exp -> CTE_REAL .)
    IGUALC          reduce using rule 104 (exp -> CTE_REAL .)
    NOTIGUAL        reduce using rule 104 (exp -> CTE_REAL .)
    MAYOR           reduce using rule 104 (exp -> CTE_REAL .)
    MAYORIGUAL      reduce using rule 104 (exp -> CTE_REAL .)
    MENOR           reduce using rule 104 (exp -> CTE_REAL .)
    MENORIGUAL      reduce using rule 104 (exp -> CTE_REAL .)
    AND             reduce using rule 104 (exp -> CTE_REAL .)
    OR              reduce using rule 104 (exp -> CTE_REAL .)
    COMA            reduce using rule 104 (exp -> CTE_REAL .)
    PYC             reduce using rule 104 (exp -> CTE_REAL .)
    PDER            reduce using rule 104 (exp -> CTE_REAL .)


state 94

    (102) exp -> CTE_CHAR .

    CODER           reduce using rule 102 (exp -> CTE_CHAR .)
    MAS             reduce using rule 102 (exp -> CTE_CHAR .)
    MENOS           reduce using rule 102 (exp -> CTE_CHAR .)
    POR             reduce using rule 102 (exp -> CTE_CHAR .)
    ENTRE           reduce using rule 102 (exp -> CTE_CHAR .)
    MOD             reduce using rule 102 (exp -> CTE_CHAR .)
    IGUALC          reduce using rule 102 (exp -> CTE_CHAR .)
    NOTIGUAL        reduce using rule 102 (exp -> CTE_CHAR .)
    MAYOR           reduce using rule 102 (exp -> CTE_CHAR .)
    MAYORIGUAL      reduce using rule 102 (exp -> CTE_CHAR .)
    MENOR           reduce using rule 102 (exp -> CTE_CHAR .)
    MENORIGUAL      reduce using rule 102 (exp -> CTE_CHAR .)
    AND             reduce using rule 102 (exp -> CTE_CHAR .)
    OR              reduce using rule 102 (exp -> CTE_CHAR .)
    COMA            reduce using rule 102 (exp -> CTE_CHAR .)
    PYC             reduce using rule 102 (exp -> CTE_CHAR .)
    PDER            reduce using rule 102 (exp -> CTE_CHAR .)


state 95

    (101) exp -> CTE_STR .

    CODER           reduce using rule 101 (exp -> CTE_STR .)
    MAS             reduce using rule 101 (exp -> CTE_STR .)
    MENOS           reduce using rule 101 (exp -> CTE_STR .)
    POR             reduce using rule 101 (exp -> CTE_STR .)
    ENTRE           reduce using rule 101 (exp -> CTE_STR .)
    MOD             reduce using rule 101 (exp -> CTE_STR .)
    IGUALC          reduce using rule 101 (exp -> CTE_STR .)
    NOTIGUAL        reduce using rule 101 (exp -> CTE_STR .)
    MAYOR           reduce using rule 101 (exp -> CTE_STR .)
    MAYORIGUAL      reduce using rule 101 (exp -> CTE_STR .)
    MENOR           reduce using rule 101 (exp -> CTE_STR .)
    MENORIGUAL      reduce using rule 101 (exp -> CTE_STR .)
    AND             reduce using rule 101 (exp -> CTE_STR .)
    OR              reduce using rule 101 (exp -> CTE_STR .)
    COMA            reduce using rule 101 (exp -> CTE_STR .)
    PYC             reduce using rule 101 (exp -> CTE_STR .)
    PDER            reduce using rule 101 (exp -> CTE_STR .)


state 96

    (113) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (115) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> ID . checarAtributo
    (118) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (73) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . checarFuncion PIZQ PDER
    (77) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (80) definirInvocador -> .
    (122) checarAtributo -> .
    (79) checarFuncion -> .

    PUNTO           shift and go to state 119
    COIZQ           reduce using rule 80 (definirInvocador -> .)
    MAS             reduce using rule 122 (checarAtributo -> .)
    MENOS           reduce using rule 122 (checarAtributo -> .)
    POR             reduce using rule 122 (checarAtributo -> .)
    ENTRE           reduce using rule 122 (checarAtributo -> .)
    MOD             reduce using rule 122 (checarAtributo -> .)
    IGUALC          reduce using rule 122 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 122 (checarAtributo -> .)
    MAYOR           reduce using rule 122 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 122 (checarAtributo -> .)
    MENOR           reduce using rule 122 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 122 (checarAtributo -> .)
    AND             reduce using rule 122 (checarAtributo -> .)
    OR              reduce using rule 122 (checarAtributo -> .)
    COMA            reduce using rule 122 (checarAtributo -> .)
    PYC             reduce using rule 122 (checarAtributo -> .)
    CODER           reduce using rule 122 (checarAtributo -> .)
    PDER            reduce using rule 122 (checarAtributo -> .)
    PIZQ            reduce using rule 79 (checarFuncion -> .)

    definirInvocador               shift and go to state 117
    checarAtributo                 shift and go to state 118
    checarFuncion                  shift and go to state 120

state 97

    (84) cte_bool -> FALSE .

    MAS             reduce using rule 84 (cte_bool -> FALSE .)
    MENOS           reduce using rule 84 (cte_bool -> FALSE .)
    POR             reduce using rule 84 (cte_bool -> FALSE .)
    ENTRE           reduce using rule 84 (cte_bool -> FALSE .)
    MOD             reduce using rule 84 (cte_bool -> FALSE .)
    IGUALC          reduce using rule 84 (cte_bool -> FALSE .)
    NOTIGUAL        reduce using rule 84 (cte_bool -> FALSE .)
    MAYOR           reduce using rule 84 (cte_bool -> FALSE .)
    MAYORIGUAL      reduce using rule 84 (cte_bool -> FALSE .)
    MENOR           reduce using rule 84 (cte_bool -> FALSE .)
    MENORIGUAL      reduce using rule 84 (cte_bool -> FALSE .)
    AND             reduce using rule 84 (cte_bool -> FALSE .)
    OR              reduce using rule 84 (cte_bool -> FALSE .)
    COMA            reduce using rule 84 (cte_bool -> FALSE .)
    PYC             reduce using rule 84 (cte_bool -> FALSE .)
    CODER           reduce using rule 84 (cte_bool -> FALSE .)
    PDER            reduce using rule 84 (cte_bool -> FALSE .)


state 98

    (119) atom -> THIS . PUNTO definirInvocador ID checarAtributo
    (120) atom -> THIS . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    PUNTO           shift and go to state 121


state 99

    (99) exp -> MENOS . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 122
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 100

    (31) ciclo_tipo -> ID declararVariable IGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    COMA            reduce using rule 31 (ciclo_tipo -> ID declararVariable IGUAL exp .)
    PYC             reduce using rule 31 (ciclo_tipo -> ID declararVariable IGUAL exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 101

    (98) exp -> NOT . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 136
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 102

    (28) ciclo_tipo -> ID declararVariable COIZQ exp . CODER
    (32) ciclo_tipo -> ID declararVariable COIZQ exp . CODER IGUAL exp
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 137
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 103

    (55) params_ciclo -> tipo . ID meterParametros

    ID              shift and go to state 138


state 104

    (53) params -> PIZQ params_ciclo . PDER
    (56) params_ciclo -> params_ciclo . COMA tipo ID meterParametros

    PDER            shift and go to state 139
    COMA            shift and go to state 140


state 105

    (54) params -> PIZQ PDER .

    LLIZQ           reduce using rule 54 (params -> PIZQ PDER .)


state 106

    (58) cuerpo_func -> LLIZQ . ciclo_vars_func ciclo_estatuto LLDER
    (59) cuerpo_func -> LLIZQ . ciclo_vars_func LLDER
    (60) cuerpo_func -> LLIZQ . ciclo_estatuto LLDER
    (61) cuerpo_func -> LLIZQ . LLDER
    (62) ciclo_vars_func -> . vars
    (63) ciclo_vars_func -> . ciclo_vars_func vars
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 151
    ID              shift and go to state 154
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    RETURN          shift and go to state 141
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    THIS            shift and go to state 98
    IF              shift and go to state 155

    vars                           shift and go to state 142
    var_op                         shift and go to state 32
    tipo                           shift and go to state 146
    estatuto                       shift and go to state 147
    ciclo_vars_func                shift and go to state 148
    condicion                      shift and go to state 149
    lectura                        shift and go to state 150
    return                         shift and go to state 145
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    asignacion                     shift and go to state 156
    ciclo_estatuto                 shift and go to state 157
    ciclo_cond                     shift and go to state 158
    while                          shift and go to state 159
    escritura                      shift and go to state 161

state 107

    (49) func -> acceso tipo ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)


state 108

    (50) func -> acceso WITHOUT ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)


state 109

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER . cuerpo_func
    (58) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (59) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (60) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (61) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 106

    cuerpo_func                    shift and go to state 162

state 110

    (37) ciclo_id -> ciclo_id COMA . ID declararVariable
    (38) ciclo_id -> ciclo_id COMA . ID declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA . ID declararVariable IGUAL atom limpiarInvocador

    ID              shift and go to state 163


state 111

    (35) ciclo_id -> ID declararVariable .
    (36) ciclo_id -> ID declararVariable . COIZQ exp CODER
    (39) ciclo_id -> ID declararVariable . IGUAL atom limpiarInvocador

    COMA            reduce using rule 35 (ciclo_id -> ID declararVariable .)
    PYC             reduce using rule 35 (ciclo_id -> ID declararVariable .)
    COIZQ           shift and go to state 165
    IGUAL           shift and go to state 164


state 112

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 166
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 113

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER IGUAL exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 167
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 114

    (100) exp -> PIZQ exp . PDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 168
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 115

    (106) exp -> atom limpiarInvocador .

    CODER           reduce using rule 106 (exp -> atom limpiarInvocador .)
    MAS             reduce using rule 106 (exp -> atom limpiarInvocador .)
    MENOS           reduce using rule 106 (exp -> atom limpiarInvocador .)
    POR             reduce using rule 106 (exp -> atom limpiarInvocador .)
    ENTRE           reduce using rule 106 (exp -> atom limpiarInvocador .)
    MOD             reduce using rule 106 (exp -> atom limpiarInvocador .)
    IGUALC          reduce using rule 106 (exp -> atom limpiarInvocador .)
    NOTIGUAL        reduce using rule 106 (exp -> atom limpiarInvocador .)
    MAYOR           reduce using rule 106 (exp -> atom limpiarInvocador .)
    MAYORIGUAL      reduce using rule 106 (exp -> atom limpiarInvocador .)
    MENOR           reduce using rule 106 (exp -> atom limpiarInvocador .)
    MENORIGUAL      reduce using rule 106 (exp -> atom limpiarInvocador .)
    AND             reduce using rule 106 (exp -> atom limpiarInvocador .)
    OR              reduce using rule 106 (exp -> atom limpiarInvocador .)
    COMA            reduce using rule 106 (exp -> atom limpiarInvocador .)
    PYC             reduce using rule 106 (exp -> atom limpiarInvocador .)
    PDER            reduce using rule 106 (exp -> atom limpiarInvocador .)


state 116

    (107) exp -> llamada_func limpiarInvocador .

    CODER           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MAS             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MENOS           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    POR             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    ENTRE           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MOD             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    IGUALC          reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    NOTIGUAL        reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MAYOR           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MAYORIGUAL      reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MENOR           reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    MENORIGUAL      reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    AND             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    OR              reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    COMA            reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    PYC             reduce using rule 107 (exp -> llamada_func limpiarInvocador .)
    PDER            reduce using rule 107 (exp -> llamada_func limpiarInvocador .)


state 117

    (115) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2
    (75) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    COIZQ           shift and go to state 169


state 118

    (117) atom -> ID checarAtributo .

    MAS             reduce using rule 117 (atom -> ID checarAtributo .)
    MENOS           reduce using rule 117 (atom -> ID checarAtributo .)
    POR             reduce using rule 117 (atom -> ID checarAtributo .)
    ENTRE           reduce using rule 117 (atom -> ID checarAtributo .)
    MOD             reduce using rule 117 (atom -> ID checarAtributo .)
    IGUALC          reduce using rule 117 (atom -> ID checarAtributo .)
    NOTIGUAL        reduce using rule 117 (atom -> ID checarAtributo .)
    MAYOR           reduce using rule 117 (atom -> ID checarAtributo .)
    MAYORIGUAL      reduce using rule 117 (atom -> ID checarAtributo .)
    MENOR           reduce using rule 117 (atom -> ID checarAtributo .)
    MENORIGUAL      reduce using rule 117 (atom -> ID checarAtributo .)
    AND             reduce using rule 117 (atom -> ID checarAtributo .)
    OR              reduce using rule 117 (atom -> ID checarAtributo .)
    COMA            reduce using rule 117 (atom -> ID checarAtributo .)
    PYC             reduce using rule 117 (atom -> ID checarAtributo .)
    CODER           reduce using rule 117 (atom -> ID checarAtributo .)
    PDER            reduce using rule 117 (atom -> ID checarAtributo .)
    IGUAL           reduce using rule 117 (atom -> ID checarAtributo .)


state 119

    (113) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (74) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ PDER
    (80) definirInvocador -> .

    ID              reduce using rule 80 (definirInvocador -> .)

    definirInvocador               shift and go to state 170

state 120

    (73) llamada_func -> ID checarFuncion . PIZQ exp_ciclo PDER
    (76) llamada_func -> ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 171


state 121

    (119) atom -> THIS PUNTO . definirInvocador ID checarAtributo
    (120) atom -> THIS PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (80) definirInvocador -> .

    ID              reduce using rule 80 (definirInvocador -> .)

    definirInvocador               shift and go to state 172

state 122

    (99) exp -> MENOS exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 99 (exp -> MENOS exp .)
    MAS             reduce using rule 99 (exp -> MENOS exp .)
    MENOS           reduce using rule 99 (exp -> MENOS exp .)
    POR             reduce using rule 99 (exp -> MENOS exp .)
    ENTRE           reduce using rule 99 (exp -> MENOS exp .)
    MOD             reduce using rule 99 (exp -> MENOS exp .)
    IGUALC          reduce using rule 99 (exp -> MENOS exp .)
    NOTIGUAL        reduce using rule 99 (exp -> MENOS exp .)
    MAYOR           reduce using rule 99 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 99 (exp -> MENOS exp .)
    MENOR           reduce using rule 99 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 99 (exp -> MENOS exp .)
    AND             reduce using rule 99 (exp -> MENOS exp .)
    OR              reduce using rule 99 (exp -> MENOS exp .)
    COMA            reduce using rule 99 (exp -> MENOS exp .)
    PYC             reduce using rule 99 (exp -> MENOS exp .)
    PDER            reduce using rule 99 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 125 ]
  ! MENOS           [ shift and go to state 131 ]
  ! POR             [ shift and go to state 129 ]
  ! ENTRE           [ shift and go to state 127 ]
  ! MOD             [ shift and go to state 135 ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 123

    (96) exp -> exp AND . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 173
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 124

    (97) exp -> exp OR . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 174
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 125

    (85) exp -> exp MAS . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 175
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 126

    (91) exp -> exp NOTIGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 176
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 127

    (88) exp -> exp ENTRE . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 177
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 128

    (92) exp -> exp MAYOR . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 178
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 129

    (87) exp -> exp POR . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 179
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 130

    (94) exp -> exp MENOR . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 180
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 131

    (86) exp -> exp MENOS . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 181
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 132

    (93) exp -> exp MAYORIGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 182
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 133

    (95) exp -> exp MENORIGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 183
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 134

    (90) exp -> exp IGUALC . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 184
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 135

    (89) exp -> exp MOD . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 185
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 136

    (98) exp -> NOT exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 98 (exp -> NOT exp .)
    AND             reduce using rule 98 (exp -> NOT exp .)
    OR              reduce using rule 98 (exp -> NOT exp .)
    COMA            reduce using rule 98 (exp -> NOT exp .)
    PYC             reduce using rule 98 (exp -> NOT exp .)
    PDER            reduce using rule 98 (exp -> NOT exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133

  ! MAS             [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MENOS           [ reduce using rule 98 (exp -> NOT exp .) ]
  ! POR             [ reduce using rule 98 (exp -> NOT exp .) ]
  ! ENTRE           [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MOD             [ reduce using rule 98 (exp -> NOT exp .) ]
  ! IGUALC          [ reduce using rule 98 (exp -> NOT exp .) ]
  ! NOTIGUAL        [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MAYOR           [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MENOR           [ reduce using rule 98 (exp -> NOT exp .) ]
  ! MENORIGUAL      [ reduce using rule 98 (exp -> NOT exp .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 137

    (28) ciclo_tipo -> ID declararVariable COIZQ exp CODER .
    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 28 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 28 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 186


state 138

    (55) params_ciclo -> tipo ID . meterParametros
    (57) meterParametros -> .

    PDER            reduce using rule 57 (meterParametros -> .)
    COMA            reduce using rule 57 (meterParametros -> .)

    meterParametros                shift and go to state 187

state 139

    (53) params -> PIZQ params_ciclo PDER .

    LLIZQ           reduce using rule 53 (params -> PIZQ params_ciclo PDER .)


state 140

    (56) params_ciclo -> params_ciclo COMA . tipo ID meterParametros
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 188

state 141

    (108) return -> RETURN . exp PYC
    (109) return -> RETURN . PYC
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PYC             shift and go to state 190
    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 189
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 142

    (62) ciclo_vars_func -> vars .

    LLDER           reduce using rule 62 (ciclo_vars_func -> vars .)
    ID              reduce using rule 62 (ciclo_vars_func -> vars .)
    WHILE           reduce using rule 62 (ciclo_vars_func -> vars .)
    OUTPUT          reduce using rule 62 (ciclo_vars_func -> vars .)
    INPUT           reduce using rule 62 (ciclo_vars_func -> vars .)
    RETURN          reduce using rule 62 (ciclo_vars_func -> vars .)
    NUMERAL         reduce using rule 62 (ciclo_vars_func -> vars .)
    REAL            reduce using rule 62 (ciclo_vars_func -> vars .)
    BOOL            reduce using rule 62 (ciclo_vars_func -> vars .)
    CHAR            reduce using rule 62 (ciclo_vars_func -> vars .)
    STRING          reduce using rule 62 (ciclo_vars_func -> vars .)
    THIS            reduce using rule 62 (ciclo_vars_func -> vars .)
    IF              reduce using rule 62 (ciclo_vars_func -> vars .)


state 143

    (112) asignacion -> atom . limpiarInvocador IGUAL exp PYC
    (11) limpiarInvocador -> .

    IGUAL           reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 191

state 144

    (110) while -> WHILE . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> WHILE . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 192


state 145

    (72) estatuto -> return .

    LLDER           reduce using rule 72 (estatuto -> return .)
    WHILE           reduce using rule 72 (estatuto -> return .)
    OUTPUT          reduce using rule 72 (estatuto -> return .)
    INPUT           reduce using rule 72 (estatuto -> return .)
    ID              reduce using rule 72 (estatuto -> return .)
    RETURN          reduce using rule 72 (estatuto -> return .)
    THIS            reduce using rule 72 (estatuto -> return .)
    IF              reduce using rule 72 (estatuto -> return .)


state 146

    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> . ID declararVariable IGUAL exp
    (32) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 193

    ciclo_tipo                     shift and go to state 50

state 147

    (64) ciclo_estatuto -> estatuto .

    LLDER           reduce using rule 64 (ciclo_estatuto -> estatuto .)
    WHILE           reduce using rule 64 (ciclo_estatuto -> estatuto .)
    OUTPUT          reduce using rule 64 (ciclo_estatuto -> estatuto .)
    INPUT           reduce using rule 64 (ciclo_estatuto -> estatuto .)
    ID              reduce using rule 64 (ciclo_estatuto -> estatuto .)
    RETURN          reduce using rule 64 (ciclo_estatuto -> estatuto .)
    THIS            reduce using rule 64 (ciclo_estatuto -> estatuto .)
    IF              reduce using rule 64 (ciclo_estatuto -> estatuto .)


state 148

    (58) cuerpo_func -> LLIZQ ciclo_vars_func . ciclo_estatuto LLDER
    (59) cuerpo_func -> LLIZQ ciclo_vars_func . LLDER
    (63) ciclo_vars_func -> ciclo_vars_func . vars
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 195
    ID              shift and go to state 154
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    RETURN          shift and go to state 141
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    THIS            shift and go to state 98
    IF              shift and go to state 155

    vars                           shift and go to state 194
    var_op                         shift and go to state 32
    tipo                           shift and go to state 146
    estatuto                       shift and go to state 147
    condicion                      shift and go to state 149
    lectura                        shift and go to state 150
    return                         shift and go to state 145
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    asignacion                     shift and go to state 156
    ciclo_estatuto                 shift and go to state 196
    ciclo_cond                     shift and go to state 158
    while                          shift and go to state 159
    escritura                      shift and go to state 161

state 149

    (68) estatuto -> condicion .

    LLDER           reduce using rule 68 (estatuto -> condicion .)
    WHILE           reduce using rule 68 (estatuto -> condicion .)
    OUTPUT          reduce using rule 68 (estatuto -> condicion .)
    INPUT           reduce using rule 68 (estatuto -> condicion .)
    ID              reduce using rule 68 (estatuto -> condicion .)
    RETURN          reduce using rule 68 (estatuto -> condicion .)
    THIS            reduce using rule 68 (estatuto -> condicion .)
    IF              reduce using rule 68 (estatuto -> condicion .)


state 150

    (70) estatuto -> lectura .

    LLDER           reduce using rule 70 (estatuto -> lectura .)
    WHILE           reduce using rule 70 (estatuto -> lectura .)
    OUTPUT          reduce using rule 70 (estatuto -> lectura .)
    INPUT           reduce using rule 70 (estatuto -> lectura .)
    ID              reduce using rule 70 (estatuto -> lectura .)
    RETURN          reduce using rule 70 (estatuto -> lectura .)
    THIS            reduce using rule 70 (estatuto -> lectura .)
    IF              reduce using rule 70 (estatuto -> lectura .)


state 151

    (61) cuerpo_func -> LLIZQ LLDER .

    LLDER           reduce using rule 61 (cuerpo_func -> LLIZQ LLDER .)
    HIDDEN          reduce using rule 61 (cuerpo_func -> LLIZQ LLDER .)
    VISIBLE         reduce using rule 61 (cuerpo_func -> LLIZQ LLDER .)


state 152

    (129) lectura -> INPUT . PIZQ atom limpiarInvocador PDER PYC

    PIZQ            shift and go to state 197


state 153

    (71) estatuto -> llamada_func . limpiarInvocador PYC
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 198

state 154

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (73) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . checarFuncion PIZQ PDER
    (77) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (113) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (115) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> ID . checarAtributo
    (118) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (26) revisarExistenciaClase -> .
    (79) checarFuncion -> .
    (80) definirInvocador -> .
    (122) checarAtributo -> .

    PUNTO           shift and go to state 200
    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)
    PIZQ            reduce using rule 79 (checarFuncion -> .)
    COIZQ           reduce using rule 80 (definirInvocador -> .)
    IGUAL           reduce using rule 122 (checarAtributo -> .)

    definirInvocador               shift and go to state 199
    checarAtributo                 shift and go to state 118
    checarFuncion                  shift and go to state 120
    revisarExistenciaClase         shift and go to state 54

state 155

    (125) ciclo_cond -> IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 201


state 156

    (67) estatuto -> asignacion .

    LLDER           reduce using rule 67 (estatuto -> asignacion .)
    WHILE           reduce using rule 67 (estatuto -> asignacion .)
    OUTPUT          reduce using rule 67 (estatuto -> asignacion .)
    INPUT           reduce using rule 67 (estatuto -> asignacion .)
    ID              reduce using rule 67 (estatuto -> asignacion .)
    RETURN          reduce using rule 67 (estatuto -> asignacion .)
    THIS            reduce using rule 67 (estatuto -> asignacion .)
    IF              reduce using rule 67 (estatuto -> asignacion .)


state 157

    (60) cuerpo_func -> LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 203
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    estatuto                       shift and go to state 202
    ciclo_cond                     shift and go to state 158
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    lectura                        shift and go to state 150
    escritura                      shift and go to state 161

state 158

    (123) condicion -> ciclo_cond . ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> ciclo_cond . ELSE LLIZQ LLDER
    (127) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ LLDER

    ELSE            shift and go to state 205


state 159

    (66) estatuto -> while .

    LLDER           reduce using rule 66 (estatuto -> while .)
    WHILE           reduce using rule 66 (estatuto -> while .)
    OUTPUT          reduce using rule 66 (estatuto -> while .)
    INPUT           reduce using rule 66 (estatuto -> while .)
    ID              reduce using rule 66 (estatuto -> while .)
    RETURN          reduce using rule 66 (estatuto -> while .)
    THIS            reduce using rule 66 (estatuto -> while .)
    IF              reduce using rule 66 (estatuto -> while .)


state 160

    (130) escritura -> OUTPUT . PIZQ exp PDER PYC

    PIZQ            shift and go to state 206


state 161

    (69) estatuto -> escritura .

    LLDER           reduce using rule 69 (estatuto -> escritura .)
    WHILE           reduce using rule 69 (estatuto -> escritura .)
    OUTPUT          reduce using rule 69 (estatuto -> escritura .)
    INPUT           reduce using rule 69 (estatuto -> escritura .)
    ID              reduce using rule 69 (estatuto -> escritura .)
    RETURN          reduce using rule 69 (estatuto -> escritura .)
    THIS            reduce using rule 69 (estatuto -> escritura .)
    IF              reduce using rule 69 (estatuto -> escritura .)


state 162

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .

    LLDER           reduce using rule 52 (main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .)


state 163

    (37) ciclo_id -> ciclo_id COMA ID . declararVariable
    (38) ciclo_id -> ciclo_id COMA ID . declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA ID . declararVariable IGUAL atom limpiarInvocador
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 207

state 164

    (39) ciclo_id -> ID declararVariable IGUAL . atom limpiarInvocador
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 209
    THIS            shift and go to state 98

    atom                           shift and go to state 208

state 165

    (36) ciclo_id -> ID declararVariable COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 210
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 166

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    COMA            reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)
    PYC             reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 167

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER IGUAL exp
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 211
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 168

    (100) exp -> PIZQ exp PDER .

    CODER           reduce using rule 100 (exp -> PIZQ exp PDER .)
    MAS             reduce using rule 100 (exp -> PIZQ exp PDER .)
    MENOS           reduce using rule 100 (exp -> PIZQ exp PDER .)
    POR             reduce using rule 100 (exp -> PIZQ exp PDER .)
    ENTRE           reduce using rule 100 (exp -> PIZQ exp PDER .)
    MOD             reduce using rule 100 (exp -> PIZQ exp PDER .)
    IGUALC          reduce using rule 100 (exp -> PIZQ exp PDER .)
    NOTIGUAL        reduce using rule 100 (exp -> PIZQ exp PDER .)
    MAYOR           reduce using rule 100 (exp -> PIZQ exp PDER .)
    MAYORIGUAL      reduce using rule 100 (exp -> PIZQ exp PDER .)
    MENOR           reduce using rule 100 (exp -> PIZQ exp PDER .)
    MENORIGUAL      reduce using rule 100 (exp -> PIZQ exp PDER .)
    AND             reduce using rule 100 (exp -> PIZQ exp PDER .)
    OR              reduce using rule 100 (exp -> PIZQ exp PDER .)
    COMA            reduce using rule 100 (exp -> PIZQ exp PDER .)
    PYC             reduce using rule 100 (exp -> PIZQ exp PDER .)
    PDER            reduce using rule 100 (exp -> PIZQ exp PDER .)


state 169

    (115) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (75) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ PDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 212
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 170

    (113) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (114) atom -> ID PUNTO definirInvocador . ID checarAtributo
    (74) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ PDER

    ID              shift and go to state 213


state 171

    (73) llamada_func -> ID checarFuncion PIZQ . exp_ciclo PDER
    (76) llamada_func -> ID checarFuncion PIZQ . PDER
    (81) exp_ciclo -> . exp
    (82) exp_ciclo -> . exp_ciclo COMA exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 214
    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    exp_ciclo                      shift and go to state 215
    cte_bool                       shift and go to state 89
    exp                            shift and go to state 216
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 172

    (119) atom -> THIS PUNTO definirInvocador . ID checarAtributo
    (120) atom -> THIS PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 217


state 173

    (96) exp -> exp AND exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 96 (exp -> exp AND exp .)
    AND             reduce using rule 96 (exp -> exp AND exp .)
    OR              reduce using rule 96 (exp -> exp AND exp .)
    COMA            reduce using rule 96 (exp -> exp AND exp .)
    PYC             reduce using rule 96 (exp -> exp AND exp .)
    PDER            reduce using rule 96 (exp -> exp AND exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133

  ! MAS             [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MENOS           [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! POR             [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! ENTRE           [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MOD             [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! IGUALC          [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! NOTIGUAL        [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MAYOR           [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MAYORIGUAL      [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MENOR           [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! MENORIGUAL      [ reduce using rule 96 (exp -> exp AND exp .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 174

    (97) exp -> exp OR exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 97 (exp -> exp OR exp .)
    OR              reduce using rule 97 (exp -> exp OR exp .)
    COMA            reduce using rule 97 (exp -> exp OR exp .)
    PYC             reduce using rule 97 (exp -> exp OR exp .)
    PDER            reduce using rule 97 (exp -> exp OR exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123

  ! MAS             [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MENOS           [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! POR             [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! ENTRE           [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MOD             [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! IGUALC          [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! NOTIGUAL        [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MAYOR           [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MENOR           [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! MENORIGUAL      [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 97 (exp -> exp OR exp .) ]
  ! OR              [ shift and go to state 124 ]


state 175

    (85) exp -> exp MAS exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 85 (exp -> exp MAS exp .)
    MAS             reduce using rule 85 (exp -> exp MAS exp .)
    MENOS           reduce using rule 85 (exp -> exp MAS exp .)
    IGUALC          reduce using rule 85 (exp -> exp MAS exp .)
    NOTIGUAL        reduce using rule 85 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 85 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 85 (exp -> exp MAS exp .)
    MENOR           reduce using rule 85 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 85 (exp -> exp MAS exp .)
    AND             reduce using rule 85 (exp -> exp MAS exp .)
    OR              reduce using rule 85 (exp -> exp MAS exp .)
    COMA            reduce using rule 85 (exp -> exp MAS exp .)
    PYC             reduce using rule 85 (exp -> exp MAS exp .)
    PDER            reduce using rule 85 (exp -> exp MAS exp .)
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135

  ! POR             [ reduce using rule 85 (exp -> exp MAS exp .) ]
  ! ENTRE           [ reduce using rule 85 (exp -> exp MAS exp .) ]
  ! MOD             [ reduce using rule 85 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 125 ]
  ! MENOS           [ shift and go to state 131 ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 176

    (91) exp -> exp NOTIGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    IGUALC          reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    NOTIGUAL        reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MAYOR           reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MAYORIGUAL      reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MENOR           reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MENORIGUAL      reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    AND             reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    OR              reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    COMA            reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    PYC             reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    PDER            reduce using rule 91 (exp -> exp NOTIGUAL exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135

  ! MAS             [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! MENOS           [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! POR             [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! MOD             [ reduce using rule 91 (exp -> exp NOTIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 177

    (88) exp -> exp ENTRE exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 88 (exp -> exp ENTRE exp .)
    MAS             reduce using rule 88 (exp -> exp ENTRE exp .)
    MENOS           reduce using rule 88 (exp -> exp ENTRE exp .)
    POR             reduce using rule 88 (exp -> exp ENTRE exp .)
    ENTRE           reduce using rule 88 (exp -> exp ENTRE exp .)
    MOD             reduce using rule 88 (exp -> exp ENTRE exp .)
    IGUALC          reduce using rule 88 (exp -> exp ENTRE exp .)
    NOTIGUAL        reduce using rule 88 (exp -> exp ENTRE exp .)
    MAYOR           reduce using rule 88 (exp -> exp ENTRE exp .)
    MAYORIGUAL      reduce using rule 88 (exp -> exp ENTRE exp .)
    MENOR           reduce using rule 88 (exp -> exp ENTRE exp .)
    MENORIGUAL      reduce using rule 88 (exp -> exp ENTRE exp .)
    AND             reduce using rule 88 (exp -> exp ENTRE exp .)
    OR              reduce using rule 88 (exp -> exp ENTRE exp .)
    COMA            reduce using rule 88 (exp -> exp ENTRE exp .)
    PYC             reduce using rule 88 (exp -> exp ENTRE exp .)
    PDER            reduce using rule 88 (exp -> exp ENTRE exp .)

  ! MAS             [ shift and go to state 125 ]
  ! MENOS           [ shift and go to state 131 ]
  ! POR             [ shift and go to state 129 ]
  ! ENTRE           [ shift and go to state 127 ]
  ! MOD             [ shift and go to state 135 ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 178

    (92) exp -> exp MAYOR exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 92 (exp -> exp MAYOR exp .)
    IGUALC          reduce using rule 92 (exp -> exp MAYOR exp .)
    NOTIGUAL        reduce using rule 92 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 92 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 92 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 92 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 92 (exp -> exp MAYOR exp .)
    AND             reduce using rule 92 (exp -> exp MAYOR exp .)
    OR              reduce using rule 92 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 92 (exp -> exp MAYOR exp .)
    PYC             reduce using rule 92 (exp -> exp MAYOR exp .)
    PDER            reduce using rule 92 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135

  ! MAS             [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! POR             [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! ENTRE           [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! MOD             [ reduce using rule 92 (exp -> exp MAYOR exp .) ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 179

    (87) exp -> exp POR exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 87 (exp -> exp POR exp .)
    MAS             reduce using rule 87 (exp -> exp POR exp .)
    MENOS           reduce using rule 87 (exp -> exp POR exp .)
    POR             reduce using rule 87 (exp -> exp POR exp .)
    ENTRE           reduce using rule 87 (exp -> exp POR exp .)
    MOD             reduce using rule 87 (exp -> exp POR exp .)
    IGUALC          reduce using rule 87 (exp -> exp POR exp .)
    NOTIGUAL        reduce using rule 87 (exp -> exp POR exp .)
    MAYOR           reduce using rule 87 (exp -> exp POR exp .)
    MAYORIGUAL      reduce using rule 87 (exp -> exp POR exp .)
    MENOR           reduce using rule 87 (exp -> exp POR exp .)
    MENORIGUAL      reduce using rule 87 (exp -> exp POR exp .)
    AND             reduce using rule 87 (exp -> exp POR exp .)
    OR              reduce using rule 87 (exp -> exp POR exp .)
    COMA            reduce using rule 87 (exp -> exp POR exp .)
    PYC             reduce using rule 87 (exp -> exp POR exp .)
    PDER            reduce using rule 87 (exp -> exp POR exp .)

  ! MAS             [ shift and go to state 125 ]
  ! MENOS           [ shift and go to state 131 ]
  ! POR             [ shift and go to state 129 ]
  ! ENTRE           [ shift and go to state 127 ]
  ! MOD             [ shift and go to state 135 ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 180

    (94) exp -> exp MENOR exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 94 (exp -> exp MENOR exp .)
    IGUALC          reduce using rule 94 (exp -> exp MENOR exp .)
    NOTIGUAL        reduce using rule 94 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 94 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 94 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 94 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 94 (exp -> exp MENOR exp .)
    AND             reduce using rule 94 (exp -> exp MENOR exp .)
    OR              reduce using rule 94 (exp -> exp MENOR exp .)
    COMA            reduce using rule 94 (exp -> exp MENOR exp .)
    PYC             reduce using rule 94 (exp -> exp MENOR exp .)
    PDER            reduce using rule 94 (exp -> exp MENOR exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135

  ! MAS             [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! POR             [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! ENTRE           [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! MOD             [ reduce using rule 94 (exp -> exp MENOR exp .) ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 181

    (86) exp -> exp MENOS exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 86 (exp -> exp MENOS exp .)
    MAS             reduce using rule 86 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 86 (exp -> exp MENOS exp .)
    IGUALC          reduce using rule 86 (exp -> exp MENOS exp .)
    NOTIGUAL        reduce using rule 86 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 86 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 86 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 86 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 86 (exp -> exp MENOS exp .)
    AND             reduce using rule 86 (exp -> exp MENOS exp .)
    OR              reduce using rule 86 (exp -> exp MENOS exp .)
    COMA            reduce using rule 86 (exp -> exp MENOS exp .)
    PYC             reduce using rule 86 (exp -> exp MENOS exp .)
    PDER            reduce using rule 86 (exp -> exp MENOS exp .)
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135

  ! POR             [ reduce using rule 86 (exp -> exp MENOS exp .) ]
  ! ENTRE           [ reduce using rule 86 (exp -> exp MENOS exp .) ]
  ! MOD             [ reduce using rule 86 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 125 ]
  ! MENOS           [ shift and go to state 131 ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 182

    (93) exp -> exp MAYORIGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    IGUALC          reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    NOTIGUAL        reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    AND             reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    OR              reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    PYC             reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    PDER            reduce using rule 93 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135

  ! MAS             [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! POR             [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! MOD             [ reduce using rule 93 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 183

    (95) exp -> exp MENORIGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    IGUALC          reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    NOTIGUAL        reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    AND             reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    OR              reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    PYC             reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    PDER            reduce using rule 95 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135

  ! MAS             [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! POR             [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! MOD             [ reduce using rule 95 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 184

    (90) exp -> exp IGUALC exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 90 (exp -> exp IGUALC exp .)
    IGUALC          reduce using rule 90 (exp -> exp IGUALC exp .)
    NOTIGUAL        reduce using rule 90 (exp -> exp IGUALC exp .)
    MAYOR           reduce using rule 90 (exp -> exp IGUALC exp .)
    MAYORIGUAL      reduce using rule 90 (exp -> exp IGUALC exp .)
    MENOR           reduce using rule 90 (exp -> exp IGUALC exp .)
    MENORIGUAL      reduce using rule 90 (exp -> exp IGUALC exp .)
    AND             reduce using rule 90 (exp -> exp IGUALC exp .)
    OR              reduce using rule 90 (exp -> exp IGUALC exp .)
    COMA            reduce using rule 90 (exp -> exp IGUALC exp .)
    PYC             reduce using rule 90 (exp -> exp IGUALC exp .)
    PDER            reduce using rule 90 (exp -> exp IGUALC exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135

  ! MAS             [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! MENOS           [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! POR             [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! ENTRE           [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! MOD             [ reduce using rule 90 (exp -> exp IGUALC exp .) ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 185

    (89) exp -> exp MOD exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           reduce using rule 89 (exp -> exp MOD exp .)
    MAS             reduce using rule 89 (exp -> exp MOD exp .)
    MENOS           reduce using rule 89 (exp -> exp MOD exp .)
    POR             reduce using rule 89 (exp -> exp MOD exp .)
    ENTRE           reduce using rule 89 (exp -> exp MOD exp .)
    MOD             reduce using rule 89 (exp -> exp MOD exp .)
    IGUALC          reduce using rule 89 (exp -> exp MOD exp .)
    NOTIGUAL        reduce using rule 89 (exp -> exp MOD exp .)
    MAYOR           reduce using rule 89 (exp -> exp MOD exp .)
    MAYORIGUAL      reduce using rule 89 (exp -> exp MOD exp .)
    MENOR           reduce using rule 89 (exp -> exp MOD exp .)
    MENORIGUAL      reduce using rule 89 (exp -> exp MOD exp .)
    AND             reduce using rule 89 (exp -> exp MOD exp .)
    OR              reduce using rule 89 (exp -> exp MOD exp .)
    COMA            reduce using rule 89 (exp -> exp MOD exp .)
    PYC             reduce using rule 89 (exp -> exp MOD exp .)
    PDER            reduce using rule 89 (exp -> exp MOD exp .)

  ! MAS             [ shift and go to state 125 ]
  ! MENOS           [ shift and go to state 131 ]
  ! POR             [ shift and go to state 129 ]
  ! ENTRE           [ shift and go to state 127 ]
  ! MOD             [ shift and go to state 135 ]
  ! IGUALC          [ shift and go to state 134 ]
  ! NOTIGUAL        [ shift and go to state 126 ]
  ! MAYOR           [ shift and go to state 128 ]
  ! MAYORIGUAL      [ shift and go to state 132 ]
  ! MENOR           [ shift and go to state 130 ]
  ! MENORIGUAL      [ shift and go to state 133 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 186

    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 218
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 187

    (55) params_ciclo -> tipo ID meterParametros .

    PDER            reduce using rule 55 (params_ciclo -> tipo ID meterParametros .)
    COMA            reduce using rule 55 (params_ciclo -> tipo ID meterParametros .)


state 188

    (56) params_ciclo -> params_ciclo COMA tipo . ID meterParametros

    ID              shift and go to state 219


state 189

    (108) return -> RETURN exp . PYC
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PYC             shift and go to state 220
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 190

    (109) return -> RETURN PYC .

    LLDER           reduce using rule 109 (return -> RETURN PYC .)
    WHILE           reduce using rule 109 (return -> RETURN PYC .)
    OUTPUT          reduce using rule 109 (return -> RETURN PYC .)
    INPUT           reduce using rule 109 (return -> RETURN PYC .)
    ID              reduce using rule 109 (return -> RETURN PYC .)
    RETURN          reduce using rule 109 (return -> RETURN PYC .)
    THIS            reduce using rule 109 (return -> RETURN PYC .)
    IF              reduce using rule 109 (return -> RETURN PYC .)


state 191

    (112) asignacion -> atom limpiarInvocador . IGUAL exp PYC

    IGUAL           shift and go to state 221


state 192

    (110) while -> WHILE PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> WHILE PIZQ . exp PDER LLIZQ LLDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 222
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 193

    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> ID . declararVariable IGUAL exp
    (32) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 67

state 194

    (63) ciclo_vars_func -> ciclo_vars_func vars .

    LLDER           reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    ID              reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    WHILE           reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    OUTPUT          reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    INPUT           reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    RETURN          reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    NUMERAL         reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    REAL            reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    BOOL            reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    CHAR            reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    STRING          reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    THIS            reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    IF              reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)


state 195

    (59) cuerpo_func -> LLIZQ ciclo_vars_func LLDER .

    LLDER           reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    HIDDEN          reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    VISIBLE         reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)


state 196

    (58) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 223
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    estatuto                       shift and go to state 202
    ciclo_cond                     shift and go to state 158
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    lectura                        shift and go to state 150
    escritura                      shift and go to state 161

state 197

    (129) lectura -> INPUT PIZQ . atom limpiarInvocador PDER PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 209
    THIS            shift and go to state 98

    atom                           shift and go to state 224

state 198

    (71) estatuto -> llamada_func limpiarInvocador . PYC

    PYC             shift and go to state 225


state 199

    (75) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (115) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2

    COIZQ           shift and go to state 226


state 200

    (74) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ PDER
    (113) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (80) definirInvocador -> .

    ID              reduce using rule 80 (definirInvocador -> .)

    definirInvocador               shift and go to state 227

state 201

    (125) ciclo_cond -> IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> IF PIZQ . exp PDER LLIZQ LLDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 228
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 202

    (65) ciclo_estatuto -> ciclo_estatuto estatuto .

    LLDER           reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    WHILE           reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    OUTPUT          reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    INPUT           reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    ID              reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    RETURN          reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    THIS            reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    IF              reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)


state 203

    (60) cuerpo_func -> LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    HIDDEN          reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)


state 204

    (73) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . checarFuncion PIZQ PDER
    (77) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (113) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (115) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> ID . checarAtributo
    (118) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (79) checarFuncion -> .
    (80) definirInvocador -> .
    (122) checarAtributo -> .

    PUNTO           shift and go to state 200
    PIZQ            reduce using rule 79 (checarFuncion -> .)
    COIZQ           reduce using rule 80 (definirInvocador -> .)
    IGUAL           reduce using rule 122 (checarAtributo -> .)

    definirInvocador               shift and go to state 199
    checarAtributo                 shift and go to state 118
    checarFuncion                  shift and go to state 120

state 205

    (123) condicion -> ciclo_cond ELSE . LLIZQ ciclo_estatuto LLDER
    (124) condicion -> ciclo_cond ELSE . LLIZQ LLDER
    (127) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ LLDER

    LLIZQ           shift and go to state 229
    IF              shift and go to state 230


state 206

    (130) escritura -> OUTPUT PIZQ . exp PDER PYC
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 231
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 207

    (37) ciclo_id -> ciclo_id COMA ID declararVariable .
    (38) ciclo_id -> ciclo_id COMA ID declararVariable . COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA ID declararVariable . IGUAL atom limpiarInvocador

    COMA            reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    PYC             reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    COIZQ           shift and go to state 233
    IGUAL           shift and go to state 232


state 208

    (39) ciclo_id -> ID declararVariable IGUAL atom . limpiarInvocador
    (11) limpiarInvocador -> .

    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 234

state 209

    (113) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (115) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> ID . checarAtributo
    (118) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (80) definirInvocador -> .
    (122) checarAtributo -> .

    PUNTO           shift and go to state 236
    COIZQ           reduce using rule 80 (definirInvocador -> .)
    COMA            reduce using rule 122 (checarAtributo -> .)
    PYC             reduce using rule 122 (checarAtributo -> .)
    PDER            reduce using rule 122 (checarAtributo -> .)

    definirInvocador               shift and go to state 235
    checarAtributo                 shift and go to state 118

state 210

    (36) ciclo_id -> ID declararVariable COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 237
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 211

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 238


state 212

    (115) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2
    (75) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ PDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 239
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 213

    (113) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (114) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (74) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ PDER
    (122) checarAtributo -> .
    (79) checarFuncion -> .

    COIZQ           reduce using rule 122 (checarAtributo -> .)
    MAS             reduce using rule 122 (checarAtributo -> .)
    MENOS           reduce using rule 122 (checarAtributo -> .)
    POR             reduce using rule 122 (checarAtributo -> .)
    ENTRE           reduce using rule 122 (checarAtributo -> .)
    MOD             reduce using rule 122 (checarAtributo -> .)
    IGUALC          reduce using rule 122 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 122 (checarAtributo -> .)
    MAYOR           reduce using rule 122 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 122 (checarAtributo -> .)
    MENOR           reduce using rule 122 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 122 (checarAtributo -> .)
    AND             reduce using rule 122 (checarAtributo -> .)
    OR              reduce using rule 122 (checarAtributo -> .)
    COMA            reduce using rule 122 (checarAtributo -> .)
    PYC             reduce using rule 122 (checarAtributo -> .)
    CODER           reduce using rule 122 (checarAtributo -> .)
    PDER            reduce using rule 122 (checarAtributo -> .)
    PIZQ            reduce using rule 79 (checarFuncion -> .)

    checarFuncion                  shift and go to state 241
    checarAtributo                 shift and go to state 240

state 214

    (76) llamada_func -> ID checarFuncion PIZQ PDER .

    PYC             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAS             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)


state 215

    (73) llamada_func -> ID checarFuncion PIZQ exp_ciclo . PDER
    (82) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 243
    COMA            shift and go to state 242


state 216

    (81) exp_ciclo -> exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            reduce using rule 81 (exp_ciclo -> exp .)
    COMA            reduce using rule 81 (exp_ciclo -> exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 217

    (119) atom -> THIS PUNTO definirInvocador ID . checarAtributo
    (120) atom -> THIS PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (122) checarAtributo -> .

    COIZQ           reduce using rule 122 (checarAtributo -> .)
    MAS             reduce using rule 122 (checarAtributo -> .)
    MENOS           reduce using rule 122 (checarAtributo -> .)
    POR             reduce using rule 122 (checarAtributo -> .)
    ENTRE           reduce using rule 122 (checarAtributo -> .)
    MOD             reduce using rule 122 (checarAtributo -> .)
    IGUALC          reduce using rule 122 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 122 (checarAtributo -> .)
    MAYOR           reduce using rule 122 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 122 (checarAtributo -> .)
    MENOR           reduce using rule 122 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 122 (checarAtributo -> .)
    AND             reduce using rule 122 (checarAtributo -> .)
    OR              reduce using rule 122 (checarAtributo -> .)
    COMA            reduce using rule 122 (checarAtributo -> .)
    PYC             reduce using rule 122 (checarAtributo -> .)
    CODER           reduce using rule 122 (checarAtributo -> .)
    PDER            reduce using rule 122 (checarAtributo -> .)
    IGUAL           reduce using rule 122 (checarAtributo -> .)

    checarAtributo                 shift and go to state 244

state 218

    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    COMA            reduce using rule 32 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 32 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 219

    (56) params_ciclo -> params_ciclo COMA tipo ID . meterParametros
    (57) meterParametros -> .

    PDER            reduce using rule 57 (meterParametros -> .)
    COMA            reduce using rule 57 (meterParametros -> .)

    meterParametros                shift and go to state 245

state 220

    (108) return -> RETURN exp PYC .

    LLDER           reduce using rule 108 (return -> RETURN exp PYC .)
    WHILE           reduce using rule 108 (return -> RETURN exp PYC .)
    OUTPUT          reduce using rule 108 (return -> RETURN exp PYC .)
    INPUT           reduce using rule 108 (return -> RETURN exp PYC .)
    ID              reduce using rule 108 (return -> RETURN exp PYC .)
    RETURN          reduce using rule 108 (return -> RETURN exp PYC .)
    THIS            reduce using rule 108 (return -> RETURN exp PYC .)
    IF              reduce using rule 108 (return -> RETURN exp PYC .)


state 221

    (112) asignacion -> atom limpiarInvocador IGUAL . exp PYC
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 246
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 222

    (110) while -> WHILE PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> WHILE PIZQ exp . PDER LLIZQ LLDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 247
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 223

    (58) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .

    LLDER           reduce using rule 58 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    HIDDEN          reduce using rule 58 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 58 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)


state 224

    (129) lectura -> INPUT PIZQ atom . limpiarInvocador PDER PYC
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 248

state 225

    (71) estatuto -> llamada_func limpiarInvocador PYC .

    LLDER           reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    WHILE           reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    OUTPUT          reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    INPUT           reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    ID              reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    RETURN          reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    THIS            reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    IF              reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)


state 226

    (75) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ PDER
    (115) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 249
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 227

    (74) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ PDER
    (113) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (114) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 250


state 228

    (125) ciclo_cond -> IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> IF PIZQ exp . PDER LLIZQ LLDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 251
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 229

    (123) condicion -> ciclo_cond ELSE LLIZQ . ciclo_estatuto LLDER
    (124) condicion -> ciclo_cond ELSE LLIZQ . LLDER
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 252
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    ciclo_estatuto                 shift and go to state 253
    estatuto                       shift and go to state 147
    lectura                        shift and go to state 150
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    ciclo_cond                     shift and go to state 158
    escritura                      shift and go to state 161

state 230

    (127) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 254


state 231

    (130) escritura -> OUTPUT PIZQ exp . PDER PYC
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 255
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 232

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL . atom limpiarInvocador
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 209
    THIS            shift and go to state 98

    atom                           shift and go to state 256

state 233

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 257
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 234

    (39) ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .

    COMA            reduce using rule 39 (ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .)
    PYC             reduce using rule 39 (ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .)


state 235

    (115) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2

    COIZQ           shift and go to state 258


state 236

    (113) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (80) definirInvocador -> .

    ID              reduce using rule 80 (definirInvocador -> .)

    definirInvocador               shift and go to state 259

state 237

    (36) ciclo_id -> ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 36 (ciclo_id -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 36 (ciclo_id -> ID declararVariable COIZQ exp CODER .)


state 238

    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 260
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 239

    (115) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (75) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ PDER
    (121) checarAtributo2 -> .

    PUNTO           shift and go to state 262
    MAS             reduce using rule 121 (checarAtributo2 -> .)
    MENOS           reduce using rule 121 (checarAtributo2 -> .)
    POR             reduce using rule 121 (checarAtributo2 -> .)
    ENTRE           reduce using rule 121 (checarAtributo2 -> .)
    MOD             reduce using rule 121 (checarAtributo2 -> .)
    IGUALC          reduce using rule 121 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 121 (checarAtributo2 -> .)
    MAYOR           reduce using rule 121 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 121 (checarAtributo2 -> .)
    MENOR           reduce using rule 121 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 121 (checarAtributo2 -> .)
    AND             reduce using rule 121 (checarAtributo2 -> .)
    OR              reduce using rule 121 (checarAtributo2 -> .)
    COMA            reduce using rule 121 (checarAtributo2 -> .)
    PYC             reduce using rule 121 (checarAtributo2 -> .)
    CODER           reduce using rule 121 (checarAtributo2 -> .)
    PDER            reduce using rule 121 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 261

state 240

    (113) atom -> ID PUNTO definirInvocador ID checarAtributo . COIZQ exp CODER
    (114) atom -> ID PUNTO definirInvocador ID checarAtributo .

    COIZQ           shift and go to state 263
    MAS             reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUAL           reduce using rule 114 (atom -> ID PUNTO definirInvocador ID checarAtributo .)


state 241

    (74) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 264


state 242

    (82) exp_ciclo -> exp_ciclo COMA . exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 265
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 243

    (73) llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .

    PYC             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAS             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)


state 244

    (119) atom -> THIS PUNTO definirInvocador ID checarAtributo .
    (120) atom -> THIS PUNTO definirInvocador ID checarAtributo . COIZQ exp CODER

    MAS             reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUAL           reduce using rule 119 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COIZQ           shift and go to state 266


state 245

    (56) params_ciclo -> params_ciclo COMA tipo ID meterParametros .

    PDER            reduce using rule 56 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)
    COMA            reduce using rule 56 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)


state 246

    (112) asignacion -> atom limpiarInvocador IGUAL exp . PYC
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PYC             shift and go to state 267
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 247

    (110) while -> WHILE PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (111) while -> WHILE PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 268


state 248

    (129) lectura -> INPUT PIZQ atom limpiarInvocador . PDER PYC

    PDER            shift and go to state 269


state 249

    (75) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ PDER
    (115) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 270
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 250

    (74) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ PDER
    (113) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (114) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (79) checarFuncion -> .
    (122) checarAtributo -> .

    PIZQ            reduce using rule 79 (checarFuncion -> .)
    COIZQ           reduce using rule 122 (checarAtributo -> .)
    IGUAL           reduce using rule 122 (checarAtributo -> .)

    checarFuncion                  shift and go to state 241
    checarAtributo                 shift and go to state 240

state 251

    (125) ciclo_cond -> IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 271


state 252

    (124) condicion -> ciclo_cond ELSE LLIZQ LLDER .

    LLDER           reduce using rule 124 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    WHILE           reduce using rule 124 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    OUTPUT          reduce using rule 124 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    INPUT           reduce using rule 124 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    ID              reduce using rule 124 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    RETURN          reduce using rule 124 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    THIS            reduce using rule 124 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    IF              reduce using rule 124 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)


state 253

    (123) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 272
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    estatuto                       shift and go to state 202
    lectura                        shift and go to state 150
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    ciclo_cond                     shift and go to state 158
    escritura                      shift and go to state 161

state 254

    (127) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ LLDER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 273
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 255

    (130) escritura -> OUTPUT PIZQ exp PDER . PYC

    PYC             shift and go to state 274


state 256

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom . limpiarInvocador
    (11) limpiarInvocador -> .

    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 275

state 257

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 276
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 258

    (115) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 277
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 259

    (113) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (114) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 278


state 260

    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    COMA            reduce using rule 34 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 34 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 261

    (118) atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .

    MAS             reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENOS           reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    POR             reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    ENTRE           reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MOD             reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    IGUALC          reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    NOTIGUAL        reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAYOR           reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAYORIGUAL      reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENOR           reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENORIGUAL      reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    AND             reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    OR              reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    COMA            reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    PYC             reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    CODER           reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    PDER            reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    IGUAL           reduce using rule 118 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)


state 262

    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo
    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ PDER

    ID              shift and go to state 279


state 263

    (113) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 280
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 264

    (74) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ . exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ . PDER
    (81) exp_ciclo -> . exp
    (82) exp_ciclo -> . exp_ciclo COMA exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 281
    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    exp_ciclo                      shift and go to state 282
    cte_bool                       shift and go to state 89
    exp                            shift and go to state 216
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 265

    (82) exp_ciclo -> exp_ciclo COMA exp .
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            reduce using rule 82 (exp_ciclo -> exp_ciclo COMA exp .)
    COMA            reduce using rule 82 (exp_ciclo -> exp_ciclo COMA exp .)
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 266

    (120) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 283
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 267

    (112) asignacion -> atom limpiarInvocador IGUAL exp PYC .

    LLDER           reduce using rule 112 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    WHILE           reduce using rule 112 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    OUTPUT          reduce using rule 112 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    INPUT           reduce using rule 112 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    ID              reduce using rule 112 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    RETURN          reduce using rule 112 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    THIS            reduce using rule 112 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    IF              reduce using rule 112 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)


state 268

    (110) while -> WHILE PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (111) while -> WHILE PIZQ exp PDER LLIZQ . LLDER
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 284
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    ciclo_estatuto                 shift and go to state 285
    estatuto                       shift and go to state 147
    ciclo_cond                     shift and go to state 158
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    lectura                        shift and go to state 150
    escritura                      shift and go to state 161

state 269

    (129) lectura -> INPUT PIZQ atom limpiarInvocador PDER . PYC

    PYC             shift and go to state 286


state 270

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ PDER
    (115) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (121) checarAtributo2 -> .

    PUNTO           shift and go to state 287
    IGUAL           reduce using rule 121 (checarAtributo2 -> .)
    CODER           reduce using rule 121 (checarAtributo2 -> .)
    MAS             reduce using rule 121 (checarAtributo2 -> .)
    MENOS           reduce using rule 121 (checarAtributo2 -> .)
    POR             reduce using rule 121 (checarAtributo2 -> .)
    ENTRE           reduce using rule 121 (checarAtributo2 -> .)
    MOD             reduce using rule 121 (checarAtributo2 -> .)
    IGUALC          reduce using rule 121 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 121 (checarAtributo2 -> .)
    MAYOR           reduce using rule 121 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 121 (checarAtributo2 -> .)
    MENOR           reduce using rule 121 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 121 (checarAtributo2 -> .)
    AND             reduce using rule 121 (checarAtributo2 -> .)
    OR              reduce using rule 121 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 261

state 271

    (125) ciclo_cond -> IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (126) ciclo_cond -> IF PIZQ exp PDER LLIZQ . LLDER
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 288
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    ciclo_estatuto                 shift and go to state 289
    estatuto                       shift and go to state 147
    ciclo_cond                     shift and go to state 158
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    lectura                        shift and go to state 150
    escritura                      shift and go to state 161

state 272

    (123) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 123 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 123 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 123 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 123 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 123 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 123 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 123 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 123 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)


state 273

    (127) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ LLDER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    PDER            shift and go to state 290
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 274

    (130) escritura -> OUTPUT PIZQ exp PDER PYC .

    LLDER           reduce using rule 130 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    WHILE           reduce using rule 130 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    OUTPUT          reduce using rule 130 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    INPUT           reduce using rule 130 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    ID              reduce using rule 130 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    RETURN          reduce using rule 130 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    THIS            reduce using rule 130 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    IF              reduce using rule 130 (escritura -> OUTPUT PIZQ exp PDER PYC .)


state 275

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .

    COMA            reduce using rule 40 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .)
    PYC             reduce using rule 40 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .)


state 276

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 38 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 38 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)


state 277

    (115) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 291
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 278

    (113) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (114) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (122) checarAtributo -> .

    COIZQ           reduce using rule 122 (checarAtributo -> .)
    COMA            reduce using rule 122 (checarAtributo -> .)
    PYC             reduce using rule 122 (checarAtributo -> .)
    PDER            reduce using rule 122 (checarAtributo -> .)

    checarAtributo                 shift and go to state 240

state 279

    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ PDER
    (122) checarAtributo -> .
    (79) checarFuncion -> .

    COIZQ           reduce using rule 122 (checarAtributo -> .)
    MAS             reduce using rule 122 (checarAtributo -> .)
    MENOS           reduce using rule 122 (checarAtributo -> .)
    POR             reduce using rule 122 (checarAtributo -> .)
    ENTRE           reduce using rule 122 (checarAtributo -> .)
    MOD             reduce using rule 122 (checarAtributo -> .)
    IGUALC          reduce using rule 122 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 122 (checarAtributo -> .)
    MAYOR           reduce using rule 122 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 122 (checarAtributo -> .)
    MENOR           reduce using rule 122 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 122 (checarAtributo -> .)
    AND             reduce using rule 122 (checarAtributo -> .)
    OR              reduce using rule 122 (checarAtributo -> .)
    COMA            reduce using rule 122 (checarAtributo -> .)
    PYC             reduce using rule 122 (checarAtributo -> .)
    CODER           reduce using rule 122 (checarAtributo -> .)
    PDER            reduce using rule 122 (checarAtributo -> .)
    PIZQ            reduce using rule 79 (checarFuncion -> .)

    checarFuncion                  shift and go to state 293
    checarAtributo                 shift and go to state 292

state 280

    (113) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 294
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 281

    (77) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .

    PYC             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAS             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)


state 282

    (74) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo . PDER
    (82) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 295
    COMA            shift and go to state 242


state 283

    (120) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 296
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 284

    (111) while -> WHILE PIZQ exp PDER LLIZQ LLDER .

    LLDER           reduce using rule 111 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    WHILE           reduce using rule 111 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    OUTPUT          reduce using rule 111 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    INPUT           reduce using rule 111 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    ID              reduce using rule 111 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    RETURN          reduce using rule 111 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    THIS            reduce using rule 111 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    IF              reduce using rule 111 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)


state 285

    (110) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 297
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    estatuto                       shift and go to state 202
    ciclo_cond                     shift and go to state 158
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    lectura                        shift and go to state 150
    escritura                      shift and go to state 161

state 286

    (129) lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .

    LLDER           reduce using rule 129 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    WHILE           reduce using rule 129 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    OUTPUT          reduce using rule 129 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    INPUT           reduce using rule 129 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    ID              reduce using rule 129 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    RETURN          reduce using rule 129 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    THIS            reduce using rule 129 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    IF              reduce using rule 129 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)


state 287

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ PDER
    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo

    ID              shift and go to state 298


state 288

    (126) ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 126 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)


state 289

    (125) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 299
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    estatuto                       shift and go to state 202
    ciclo_cond                     shift and go to state 158
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    lectura                        shift and go to state 150
    escritura                      shift and go to state 161

state 290

    (127) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 300


state 291

    (115) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (118) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (121) checarAtributo2 -> .

    PUNTO           shift and go to state 301
    COMA            reduce using rule 121 (checarAtributo2 -> .)
    PYC             reduce using rule 121 (checarAtributo2 -> .)
    PDER            reduce using rule 121 (checarAtributo2 -> .)
    CODER           reduce using rule 121 (checarAtributo2 -> .)
    MAS             reduce using rule 121 (checarAtributo2 -> .)
    MENOS           reduce using rule 121 (checarAtributo2 -> .)
    POR             reduce using rule 121 (checarAtributo2 -> .)
    ENTRE           reduce using rule 121 (checarAtributo2 -> .)
    MOD             reduce using rule 121 (checarAtributo2 -> .)
    IGUALC          reduce using rule 121 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 121 (checarAtributo2 -> .)
    MAYOR           reduce using rule 121 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 121 (checarAtributo2 -> .)
    MENOR           reduce using rule 121 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 121 (checarAtributo2 -> .)
    AND             reduce using rule 121 (checarAtributo2 -> .)
    OR              reduce using rule 121 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 261

state 292

    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo . COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .

    COIZQ           shift and go to state 302
    MAS             reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENOS           reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    POR             reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    ENTRE           reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MOD             reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    IGUALC          reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    NOTIGUAL        reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAYOR           reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAYORIGUAL      reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENOR           reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENORIGUAL      reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    AND             reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    OR              reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    COMA            reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    PYC             reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    CODER           reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    PDER            reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    IGUAL           reduce using rule 116 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)


state 293

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion . PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 303


state 294

    (113) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .

    MAS             reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUAL           reduce using rule 113 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)


state 295

    (74) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .

    PYC             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAS             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)


state 296

    (120) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .

    MAS             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUAL           reduce using rule 120 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)


state 297

    (110) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 110 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 110 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 110 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 110 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 110 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 110 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 110 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 110 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 298

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ PDER
    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (79) checarFuncion -> .
    (122) checarAtributo -> .

    PIZQ            reduce using rule 79 (checarFuncion -> .)
    COIZQ           reduce using rule 122 (checarAtributo -> .)
    IGUAL           reduce using rule 122 (checarAtributo -> .)
    CODER           reduce using rule 122 (checarAtributo -> .)
    MAS             reduce using rule 122 (checarAtributo -> .)
    MENOS           reduce using rule 122 (checarAtributo -> .)
    POR             reduce using rule 122 (checarAtributo -> .)
    ENTRE           reduce using rule 122 (checarAtributo -> .)
    MOD             reduce using rule 122 (checarAtributo -> .)
    IGUALC          reduce using rule 122 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 122 (checarAtributo -> .)
    MAYOR           reduce using rule 122 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 122 (checarAtributo -> .)
    MENOR           reduce using rule 122 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 122 (checarAtributo -> .)
    AND             reduce using rule 122 (checarAtributo -> .)
    OR              reduce using rule 122 (checarAtributo -> .)

    checarFuncion                  shift and go to state 293
    checarAtributo                 shift and go to state 292

state 299

    (125) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 125 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 300

    (127) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (128) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . LLDER
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 304
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    ciclo_estatuto                 shift and go to state 305
    estatuto                       shift and go to state 147
    lectura                        shift and go to state 150
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    ciclo_cond                     shift and go to state 158
    escritura                      shift and go to state 161

state 301

    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo

    ID              shift and go to state 306


state 302

    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ . exp CODER
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    cte_bool                       shift and go to state 89
    exp                            shift and go to state 307
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 303

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ . exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ . PDER
    (81) exp_ciclo -> . exp
    (82) exp_ciclo -> . exp_ciclo COMA exp
    (85) exp -> . exp MAS exp
    (86) exp -> . exp MENOS exp
    (87) exp -> . exp POR exp
    (88) exp -> . exp ENTRE exp
    (89) exp -> . exp MOD exp
    (90) exp -> . exp IGUALC exp
    (91) exp -> . exp NOTIGUAL exp
    (92) exp -> . exp MAYOR exp
    (93) exp -> . exp MAYORIGUAL exp
    (94) exp -> . exp MENOR exp
    (95) exp -> . exp MENORIGUAL exp
    (96) exp -> . exp AND exp
    (97) exp -> . exp OR exp
    (98) exp -> . NOT exp
    (99) exp -> . MENOS exp
    (100) exp -> . PIZQ exp PDER
    (101) exp -> . CTE_STR
    (102) exp -> . CTE_CHAR
    (103) exp -> . CTE_NUMERAL
    (104) exp -> . CTE_REAL
    (105) exp -> . cte_bool
    (106) exp -> . atom limpiarInvocador
    (107) exp -> . llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 308
    NOT             shift and go to state 101
    MENOS           shift and go to state 99
    PIZQ            shift and go to state 87
    CTE_STR         shift and go to state 95
    CTE_CHAR        shift and go to state 94
    CTE_NUMERAL     shift and go to state 91
    CTE_REAL        shift and go to state 93
    TRUE            shift and go to state 90
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    exp_ciclo                      shift and go to state 309
    cte_bool                       shift and go to state 89
    exp                            shift and go to state 216
    atom                           shift and go to state 88
    llamada_func                   shift and go to state 92

state 304

    (128) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 128 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)


state 305

    (127) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (110) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (111) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (112) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (123) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (124) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (130) escritura -> . OUTPUT PIZQ exp PDER PYC
    (129) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (108) return -> . RETURN exp PYC
    (109) return -> . RETURN PYC
    (113) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (114) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (115) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (116) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (117) atom -> . ID checarAtributo
    (118) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (119) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (120) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (125) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (126) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (127) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (128) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 310
    WHILE           shift and go to state 144
    OUTPUT          shift and go to state 160
    INPUT           shift and go to state 152
    ID              shift and go to state 204
    RETURN          shift and go to state 141
    THIS            shift and go to state 98
    IF              shift and go to state 155

    return                         shift and go to state 145
    asignacion                     shift and go to state 156
    estatuto                       shift and go to state 202
    lectura                        shift and go to state 150
    while                          shift and go to state 159
    condicion                      shift and go to state 149
    atom                           shift and go to state 143
    llamada_func                   shift and go to state 153
    ciclo_cond                     shift and go to state 158
    escritura                      shift and go to state 161

state 306

    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (116) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (122) checarAtributo -> .

    COIZQ           reduce using rule 122 (checarAtributo -> .)
    COMA            reduce using rule 122 (checarAtributo -> .)
    PYC             reduce using rule 122 (checarAtributo -> .)
    PDER            reduce using rule 122 (checarAtributo -> .)
    CODER           reduce using rule 122 (checarAtributo -> .)
    MAS             reduce using rule 122 (checarAtributo -> .)
    MENOS           reduce using rule 122 (checarAtributo -> .)
    POR             reduce using rule 122 (checarAtributo -> .)
    ENTRE           reduce using rule 122 (checarAtributo -> .)
    MOD             reduce using rule 122 (checarAtributo -> .)
    IGUALC          reduce using rule 122 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 122 (checarAtributo -> .)
    MAYOR           reduce using rule 122 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 122 (checarAtributo -> .)
    MENOR           reduce using rule 122 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 122 (checarAtributo -> .)
    AND             reduce using rule 122 (checarAtributo -> .)
    OR              reduce using rule 122 (checarAtributo -> .)

    checarAtributo                 shift and go to state 292

state 307

    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp . CODER
    (85) exp -> exp . MAS exp
    (86) exp -> exp . MENOS exp
    (87) exp -> exp . POR exp
    (88) exp -> exp . ENTRE exp
    (89) exp -> exp . MOD exp
    (90) exp -> exp . IGUALC exp
    (91) exp -> exp . NOTIGUAL exp
    (92) exp -> exp . MAYOR exp
    (93) exp -> exp . MAYORIGUAL exp
    (94) exp -> exp . MENOR exp
    (95) exp -> exp . MENORIGUAL exp
    (96) exp -> exp . AND exp
    (97) exp -> exp . OR exp

    CODER           shift and go to state 311
    MAS             shift and go to state 125
    MENOS           shift and go to state 131
    POR             shift and go to state 129
    ENTRE           shift and go to state 127
    MOD             shift and go to state 135
    IGUALC          shift and go to state 134
    NOTIGUAL        shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 130
    MENORIGUAL      shift and go to state 133
    AND             shift and go to state 123
    OR              shift and go to state 124


state 308

    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .

    PYC             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAS             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)


state 309

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo . PDER
    (82) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 312
    COMA            shift and go to state 242


state 310

    (127) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 127 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 311

    (115) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .

    MAS             reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    IGUAL           reduce using rule 115 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)


state 312

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .

    PYC             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAS             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)

