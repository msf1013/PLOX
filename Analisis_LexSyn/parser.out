Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ciclo_clase clase_main
Rule 2     programa -> clase_main
Rule 3     ciclo_clase -> clase
Rule 4     ciclo_clase -> ciclo_clase clase
Rule 5     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
Rule 6     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
Rule 7     clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
Rule 8     clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual
Rule 9     declararClase -> <empty>
Rule 10    limpiarMetodoActual -> <empty>
Rule 11    limpiarInvocador -> <empty>
Rule 12    herencia -> empty
Rule 13    herencia -> UNDER ID agregaAncestro
Rule 14    agregaAncestro -> <empty>
Rule 15    ciclo_vars -> acceso vars
Rule 16    ciclo_vars -> ciclo_vars acceso vars
Rule 17    ciclo_func -> func
Rule 18    ciclo_func -> ciclo_func func
Rule 19    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
Rule 20    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
Rule 21    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
Rule 22    clase_main -> CLASS MAIN declararClase LLIZQ main LLDER
Rule 23    vars -> var_op PYC
Rule 24    var_op -> tipo ciclo_tipo
Rule 25    var_op -> ID revisarExistenciaClase DOSP ciclo_id
Rule 26    revisarExistenciaClase -> <empty>
Rule 27    ciclo_tipo -> ID declararVariable
Rule 28    ciclo_tipo -> ID declararVariable COIZQ exp CODER
Rule 29    ciclo_tipo -> ciclo_tipo COMA ID declararVariable
Rule 30    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER
Rule 31    ciclo_tipo -> ID declararVariable IGUAL exp
Rule 32    ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp
Rule 33    ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp
Rule 34    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp
Rule 35    ciclo_id -> ID declararVariable
Rule 36    ciclo_id -> ID declararVariable COIZQ exp CODER
Rule 37    ciclo_id -> ciclo_id COMA ID declararVariable
Rule 38    ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER
Rule 39    ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador
Rule 40    ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador
Rule 41    declararVariable -> <empty>
Rule 42    tipo -> NUMERAL
Rule 43    tipo -> REAL
Rule 44    tipo -> BOOL
Rule 45    tipo -> CHAR
Rule 46    tipo -> STRING
Rule 47    acceso -> HIDDEN
Rule 48    acceso -> VISIBLE
Rule 49    func -> acceso tipo ID declararMetodo params cuerpo_func
Rule 50    func -> acceso WITHOUT ID declararMetodo params cuerpo_func
Rule 51    declararMetodo -> <empty>
Rule 52    main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
Rule 53    params -> PIZQ params_ciclo PDER
Rule 54    params -> PIZQ PDER
Rule 55    params_ciclo -> tipo ID meterParametros
Rule 56    params_ciclo -> params_ciclo COMA tipo ID meterParametros
Rule 57    meterParametros -> <empty>
Rule 58    cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER
Rule 59    cuerpo_func -> LLIZQ ciclo_vars_func LLDER
Rule 60    cuerpo_func -> LLIZQ ciclo_estatuto LLDER
Rule 61    cuerpo_func -> LLIZQ LLDER
Rule 62    ciclo_vars_func -> vars
Rule 63    ciclo_vars_func -> ciclo_vars_func vars
Rule 64    ciclo_estatuto -> estatuto
Rule 65    ciclo_estatuto -> ciclo_estatuto estatuto
Rule 66    estatuto -> while
Rule 67    estatuto -> asignacion
Rule 68    estatuto -> condicion
Rule 69    estatuto -> escritura
Rule 70    estatuto -> lectura
Rule 71    estatuto -> llamada_func limpiarInvocador PYC
Rule 72    estatuto -> return
Rule 73    llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER
Rule 74    llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
Rule 75    llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
Rule 76    llamada_func -> ID checarFuncion PIZQ PDER
Rule 77    llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
Rule 78    llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
Rule 79    checarFuncion -> <empty>
Rule 80    definirInvocador -> <empty>
Rule 81    exp_ciclo -> exp
Rule 82    exp_ciclo -> exp_ciclo COMA exp
Rule 83    cte_bool -> TRUE
Rule 84    cte_bool -> FALSE
Rule 85    exp -> opciones ope exp
Rule 86    exp -> opciones
Rule 87    exp -> PIZQ exp PDER
Rule 88    exp -> PIZQ exp PDER ope exp
Rule 89    exp -> MENOS PIZQ exp PDER ope exp
Rule 90    exp -> NOT exp
Rule 91    exp -> MENOS PIZQ exp PDER
Rule 92    opciones -> CTE_STR
Rule 93    opciones -> CTE_CHAR
Rule 94    opciones -> CTE_NUMERAL
Rule 95    opciones -> CTE_REAL
Rule 96    opciones -> cte_bool
Rule 97    opciones -> atom limpiarInvocador
Rule 98    opciones -> llamada_func limpiarInvocador
Rule 99    opciones -> MENOS CTE_NUMERAL
Rule 100   opciones -> MENOS CTE_REAL
Rule 101   opciones -> MENOS atom limpiarInvocador
Rule 102   opciones -> MENOS llamada_func limpiarInvocador
Rule 103   ope -> MAS
Rule 104   ope -> MENOS
Rule 105   ope -> MOD
Rule 106   ope -> ENTRE
Rule 107   ope -> POR
Rule 108   ope -> IGUALC
Rule 109   ope -> MENOR
Rule 110   ope -> MENORIGUAL
Rule 111   ope -> MAYOR
Rule 112   ope -> MAYORIGUAL
Rule 113   ope -> NOTIGUAL
Rule 114   ope -> AND
Rule 115   ope -> OR
Rule 116   return -> RETURN exp PYC
Rule 117   return -> RETURN PYC
Rule 118   while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 119   while -> WHILE PIZQ exp PDER LLIZQ LLDER
Rule 120   asignacion -> atom limpiarInvocador IGUAL exp PYC
Rule 121   atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
Rule 122   atom -> ID PUNTO definirInvocador ID checarAtributo
Rule 123   atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
Rule 124   atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
Rule 125   atom -> ID checarAtributo
Rule 126   atom -> ID definirInvocador COIZQ exp CODER checarAtributo2
Rule 127   atom -> THIS PUNTO definirInvocador ID checarAtributo
Rule 128   atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
Rule 129   checarAtributo2 -> <empty>
Rule 130   checarAtributo -> <empty>
Rule 131   condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
Rule 132   condicion -> ciclo_cond ELSE LLIZQ LLDER
Rule 133   ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 134   ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER
Rule 135   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 136   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER
Rule 137   lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC
Rule 138   escritura -> OUTPUT PIZQ exp PDER PYC
Rule 139   empty -> <empty>

Terminals, with rules where they appear

AND                  : 114
BOOL                 : 44
CHAR                 : 45
CLASS                : 5 6 7 8 19 20 21 22
CODER                : 28 30 32 34 36 38 75 78 121 123 123 124 126 128
COIZQ                : 28 30 32 34 36 38 75 78 121 123 123 124 126 128
COMA                 : 29 30 33 34 37 38 40 56 82
CTE_CHAR             : 93
CTE_NUMERAL          : 94 99
CTE_REAL             : 95 100
CTE_STR              : 92
DOSP                 : 25
ELSE                 : 131 132 135 136
ENTRE                : 106
FALSE                : 84
HIDDEN               : 47
ID                   : 5 6 7 8 13 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 49 50 55 56 73 74 74 75 75 76 77 77 78 78 121 121 122 122 123 123 124 124 125 126 127 128
IF                   : 133 134 135 136
IGUAL                : 31 32 33 34 39 40 120
IGUALC               : 108
INPUT                : 137
LLDER                : 5 6 7 8 19 20 21 22 58 59 60 61 118 119 131 132 133 134 135 136
LLIZQ                : 5 6 7 8 19 20 21 22 58 59 60 61 118 119 131 132 133 134 135 136
MAIN                 : 19 20 21 22 52
MAS                  : 103
MAYOR                : 111
MAYORIGUAL           : 112
MENOR                : 109
MENORIGUAL           : 110
MENOS                : 89 91 99 100 101 102 104
MOD                  : 105
NOT                  : 90
NOTIGUAL             : 113
NUMERAL              : 42
OR                   : 115
OUTPUT               : 138
PDER                 : 52 53 54 73 74 75 76 77 78 87 88 89 91 118 119 133 134 135 136 137 138
PIZQ                 : 52 53 54 73 74 75 76 77 78 87 88 89 91 118 119 133 134 135 136 137 138
POR                  : 107
PUNTO                : 74 75 77 78 121 122 123 124 127 128
PYC                  : 23 71 116 117 120 137 138
REAL                 : 43
RETURN               : 116 117
STRING               : 46
THIS                 : 127 128
TRUE                 : 83
UNDER                : 13
VISIBLE              : 48
WHILE                : 118 119
WITHOUT              : 50 52
error                : 

Nonterminals, with rules where they appear

acceso               : 15 16 49 50 52
agregaAncestro       : 13
asignacion           : 67
atom                 : 39 40 97 101 120 137
checarAtributo       : 121 122 123 124 125 127 128
checarAtributo2      : 126
checarFuncion        : 73 74 75 76 77 78
ciclo_clase          : 1 4
ciclo_cond           : 131 132 135 136
ciclo_estatuto       : 58 60 65 118 131 133 135
ciclo_func           : 5 7 18 19 21
ciclo_id             : 25 37 38 40
ciclo_tipo           : 24 29 30 33 34
ciclo_vars           : 5 6 16 19 20
ciclo_vars_func      : 58 59 63
clase                : 3 4
clase_main           : 1 2
condicion            : 68
cte_bool             : 96
cuerpo_func          : 49 50 52
declararClase        : 5 6 7 8 19 20 21 22
declararMetodo       : 49 50 52
declararVariable     : 27 28 29 30 31 32 33 34 35 36 37 38 39 40
definirInvocador     : 74 75 77 78 121 122 123 124 126 127 128
empty                : 12
escritura            : 69
estatuto             : 64 65
exp                  : 28 30 31 32 32 33 34 34 36 38 75 78 81 82 85 87 88 88 89 89 90 91 116 118 119 120 121 123 123 124 126 128 133 134 135 136 138
exp_ciclo            : 73 74 75 82
func                 : 17 18
herencia             : 5 6 7 8
lectura              : 70
limpiarInvocador     : 39 40 71 97 98 101 102 120 137
limpiarMetodoActual  : 5 6 7 8
llamada_func         : 71 98 102
main                 : 19 20 21 22
meterParametros      : 55 56
opciones             : 85 86
ope                  : 85 88 89
params               : 49 50
params_ciclo         : 53 56
programa             : 0
return               : 72
revisarExistenciaClase : 25
tipo                 : 24 49 55 56
var_op               : 23
vars                 : 15 16 62 63
while                : 66

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ciclo_clase clase_main
    (2) programa -> . clase_main
    (3) ciclo_clase -> . clase
    (4) ciclo_clase -> . ciclo_clase clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    ciclo_clase                    shift and go to state 1
    clase_main                     shift and go to state 2
    clase                          shift and go to state 3
    programa                       shift and go to state 4

state 1

    (1) programa -> ciclo_clase . clase_main
    (4) ciclo_clase -> ciclo_clase . clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    clase_main                     shift and go to state 6
    clase                          shift and go to state 7

state 2

    (2) programa -> clase_main .

    $end            reduce using rule 2 (programa -> clase_main .)


state 3

    (3) ciclo_clase -> clase .

    CLASS           reduce using rule 3 (ciclo_clase -> clase .)


state 4

    (0) S' -> programa .



state 5

    (19) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS . MAIN declararClase LLIZQ main LLDER
    (5) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS . ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    MAIN            shift and go to state 8
    ID              shift and go to state 9


state 6

    (1) programa -> ciclo_clase clase_main .

    $end            reduce using rule 1 (programa -> ciclo_clase clase_main .)


state 7

    (4) ciclo_clase -> ciclo_clase clase .

    CLASS           reduce using rule 4 (ciclo_clase -> ciclo_clase clase .)


state 8

    (19) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN . declararClase LLIZQ main LLDER
    (9) declararClase -> .

    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 10

state 9

    (5) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID . declararClase herencia LLIZQ LLDER limpiarMetodoActual
    (9) declararClase -> .

    UNDER           reduce using rule 9 (declararClase -> .)
    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 11

state 10

    (19) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase . LLIZQ main LLDER

    LLIZQ           shift and go to state 12


state 11

    (5) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase . herencia LLIZQ LLDER limpiarMetodoActual
    (12) herencia -> . empty
    (13) herencia -> . UNDER ID agregaAncestro
    (139) empty -> .

    UNDER           shift and go to state 13
    LLIZQ           reduce using rule 139 (empty -> .)

    herencia                       shift and go to state 14
    empty                          shift and go to state 15

state 12

    (19) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase LLIZQ . main LLDER
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 18
    ciclo_func                     shift and go to state 17
    ciclo_vars                     shift and go to state 19
    func                           shift and go to state 21
    main                           shift and go to state 16

state 13

    (13) herencia -> UNDER . ID agregaAncestro

    ID              shift and go to state 23


state 14

    (5) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia . LLIZQ LLDER limpiarMetodoActual

    LLIZQ           shift and go to state 24


state 15

    (12) herencia -> empty .

    LLIZQ           reduce using rule 12 (herencia -> empty .)


state 16

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main . LLDER

    LLDER           shift and go to state 25


state 17

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 28

state 18

    (15) ciclo_vars -> acceso . vars
    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 30
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 19

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . main LLDER
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 41
    ciclo_func                     shift and go to state 40
    func                           shift and go to state 21
    main                           shift and go to state 39

state 20

    (48) acceso -> VISIBLE .

    WITHOUT         reduce using rule 48 (acceso -> VISIBLE .)
    NUMERAL         reduce using rule 48 (acceso -> VISIBLE .)
    REAL            reduce using rule 48 (acceso -> VISIBLE .)
    BOOL            reduce using rule 48 (acceso -> VISIBLE .)
    CHAR            reduce using rule 48 (acceso -> VISIBLE .)
    STRING          reduce using rule 48 (acceso -> VISIBLE .)
    ID              reduce using rule 48 (acceso -> VISIBLE .)


state 21

    (17) ciclo_func -> func .

    LLDER           reduce using rule 17 (ciclo_func -> func .)
    HIDDEN          reduce using rule 17 (ciclo_func -> func .)
    VISIBLE         reduce using rule 17 (ciclo_func -> func .)


state 22

    (47) acceso -> HIDDEN .

    WITHOUT         reduce using rule 47 (acceso -> HIDDEN .)
    NUMERAL         reduce using rule 47 (acceso -> HIDDEN .)
    REAL            reduce using rule 47 (acceso -> HIDDEN .)
    BOOL            reduce using rule 47 (acceso -> HIDDEN .)
    CHAR            reduce using rule 47 (acceso -> HIDDEN .)
    STRING          reduce using rule 47 (acceso -> HIDDEN .)
    ID              reduce using rule 47 (acceso -> HIDDEN .)


state 23

    (13) herencia -> UNDER ID . agregaAncestro
    (14) agregaAncestro -> .

    LLIZQ           reduce using rule 14 (agregaAncestro -> .)

    agregaAncestro                 shift and go to state 42

state 24

    (5) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia LLIZQ . LLDER limpiarMetodoActual
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 43
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 45
    ciclo_func                     shift and go to state 44
    ciclo_vars                     shift and go to state 46
    func                           shift and go to state 21

state 25

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .

    $end            reduce using rule 22 (clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .)


state 26

    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 47

state 27

    (18) ciclo_func -> ciclo_func func .

    LLDER           reduce using rule 18 (ciclo_func -> ciclo_func func .)
    HIDDEN          reduce using rule 18 (ciclo_func -> ciclo_func func .)
    VISIBLE         reduce using rule 18 (ciclo_func -> ciclo_func func .)


state 28

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main . LLDER

    LLDER           shift and go to state 48


state 29

    (43) tipo -> REAL .

    ID              reduce using rule 43 (tipo -> REAL .)


state 30

    (15) ciclo_vars -> acceso vars .

    LLDER           reduce using rule 15 (ciclo_vars -> acceso vars .)
    HIDDEN          reduce using rule 15 (ciclo_vars -> acceso vars .)
    VISIBLE         reduce using rule 15 (ciclo_vars -> acceso vars .)


state 31

    (45) tipo -> CHAR .

    ID              reduce using rule 45 (tipo -> CHAR .)


state 32

    (23) vars -> var_op . PYC

    PYC             shift and go to state 49


state 33

    (42) tipo -> NUMERAL .

    ID              reduce using rule 42 (tipo -> NUMERAL .)


state 34

    (49) func -> acceso tipo . ID declararMetodo params cuerpo_func
    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> . ID declararVariable IGUAL exp
    (32) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 51

    ciclo_tipo                     shift and go to state 50

state 35

    (46) tipo -> STRING .

    ID              reduce using rule 46 (tipo -> STRING .)


state 36

    (52) main -> acceso WITHOUT . MAIN declararMetodo PIZQ PDER cuerpo_func
    (50) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    MAIN            shift and go to state 53
    ID              shift and go to state 52


state 37

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (26) revisarExistenciaClase -> .

    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)

    revisarExistenciaClase         shift and go to state 54

state 38

    (44) tipo -> BOOL .

    ID              reduce using rule 44 (tipo -> BOOL .)


state 39

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main . LLDER

    LLDER           shift and go to state 55


state 40

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 56

state 41

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 36
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 57
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 42

    (13) herencia -> UNDER ID agregaAncestro .

    LLIZQ           reduce using rule 13 (herencia -> UNDER ID agregaAncestro .)


state 43

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 58

state 44

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    LLDER           shift and go to state 59
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 45

    (15) ciclo_vars -> acceso . vars
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 30
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 46

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . LLDER limpiarMetodoActual
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 62
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 64
    ciclo_func                     shift and go to state 63
    func                           shift and go to state 21

state 47

    (49) func -> acceso tipo . ID declararMetodo params cuerpo_func

    ID              shift and go to state 65


state 48

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .

    $end            reduce using rule 21 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .)


state 49

    (23) vars -> var_op PYC .

    HIDDEN          reduce using rule 23 (vars -> var_op PYC .)
    VISIBLE         reduce using rule 23 (vars -> var_op PYC .)
    LLDER           reduce using rule 23 (vars -> var_op PYC .)
    ID              reduce using rule 23 (vars -> var_op PYC .)
    WHILE           reduce using rule 23 (vars -> var_op PYC .)
    OUTPUT          reduce using rule 23 (vars -> var_op PYC .)
    INPUT           reduce using rule 23 (vars -> var_op PYC .)
    RETURN          reduce using rule 23 (vars -> var_op PYC .)
    NUMERAL         reduce using rule 23 (vars -> var_op PYC .)
    REAL            reduce using rule 23 (vars -> var_op PYC .)
    BOOL            reduce using rule 23 (vars -> var_op PYC .)
    CHAR            reduce using rule 23 (vars -> var_op PYC .)
    STRING          reduce using rule 23 (vars -> var_op PYC .)
    THIS            reduce using rule 23 (vars -> var_op PYC .)
    IF              reduce using rule 23 (vars -> var_op PYC .)


state 50

    (24) var_op -> tipo ciclo_tipo .
    (29) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER IGUAL exp

    PYC             reduce using rule 24 (var_op -> tipo ciclo_tipo .)
    COMA            shift and go to state 66


state 51

    (49) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> ID . declararVariable IGUAL exp
    (32) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (51) declararMetodo -> .
    (41) declararVariable -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)
    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 67
    declararMetodo                 shift and go to state 68

state 52

    (50) func -> acceso WITHOUT ID . declararMetodo params cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 69

state 53

    (52) main -> acceso WITHOUT MAIN . declararMetodo PIZQ PDER cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 70

state 54

    (25) var_op -> ID revisarExistenciaClase . DOSP ciclo_id

    DOSP            shift and go to state 71


state 55

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .

    $end            reduce using rule 20 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .)


state 56

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main . LLDER

    LLDER           shift and go to state 72


state 57

    (16) ciclo_vars -> ciclo_vars acceso vars .

    LLDER           reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    HIDDEN          reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    VISIBLE         reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)


state 58

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .

    CLASS           reduce using rule 8 (clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .)


state 59

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 73

state 60

    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 47

state 61

    (50) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    ID              shift and go to state 52


state 62

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 74

state 63

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    LLDER           shift and go to state 75
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 60
    func                           shift and go to state 27

state 64

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    ID              shift and go to state 37

    vars                           shift and go to state 57
    tipo                           shift and go to state 34
    var_op                         shift and go to state 32

state 65

    (49) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 68

state 66

    (29) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 76


state 67

    (27) ciclo_tipo -> ID declararVariable .
    (28) ciclo_tipo -> ID declararVariable . COIZQ exp CODER
    (31) ciclo_tipo -> ID declararVariable . IGUAL exp
    (32) ciclo_tipo -> ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    PYC             reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    COIZQ           shift and go to state 78
    IGUAL           shift and go to state 77


state 68

    (49) func -> acceso tipo ID declararMetodo . params cuerpo_func
    (53) params -> . PIZQ params_ciclo PDER
    (54) params -> . PIZQ PDER

    PIZQ            shift and go to state 79

    params                         shift and go to state 80

state 69

    (50) func -> acceso WITHOUT ID declararMetodo . params cuerpo_func
    (53) params -> . PIZQ params_ciclo PDER
    (54) params -> . PIZQ PDER

    PIZQ            shift and go to state 79

    params                         shift and go to state 81

state 70

    (52) main -> acceso WITHOUT MAIN declararMetodo . PIZQ PDER cuerpo_func

    PIZQ            shift and go to state 82


state 71

    (25) var_op -> ID revisarExistenciaClase DOSP . ciclo_id
    (35) ciclo_id -> . ID declararVariable
    (36) ciclo_id -> . ID declararVariable COIZQ exp CODER
    (37) ciclo_id -> . ciclo_id COMA ID declararVariable
    (38) ciclo_id -> . ciclo_id COMA ID declararVariable COIZQ exp CODER
    (39) ciclo_id -> . ID declararVariable IGUAL atom limpiarInvocador
    (40) ciclo_id -> . ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador

    ID              shift and go to state 84

    ciclo_id                       shift and go to state 83

state 72

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .

    $end            reduce using rule 19 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .)


state 73

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 7 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .)


state 74

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .

    CLASS           reduce using rule 6 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .)


state 75

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 85

state 76

    (29) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER IGUAL exp
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 86

state 77

    (31) ciclo_tipo -> ID declararVariable IGUAL . exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 101
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 78

    (28) ciclo_tipo -> ID declararVariable COIZQ . exp CODER
    (32) ciclo_tipo -> ID declararVariable COIZQ . exp CODER IGUAL exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 103
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 79

    (53) params -> PIZQ . params_ciclo PDER
    (54) params -> PIZQ . PDER
    (55) params_ciclo -> . tipo ID meterParametros
    (56) params_ciclo -> . params_ciclo COMA tipo ID meterParametros
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    PDER            shift and go to state 106
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 104
    params_ciclo                   shift and go to state 105

state 80

    (49) func -> acceso tipo ID declararMetodo params . cuerpo_func
    (58) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (59) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (60) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (61) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 107

    cuerpo_func                    shift and go to state 108

state 81

    (50) func -> acceso WITHOUT ID declararMetodo params . cuerpo_func
    (58) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (59) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (60) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (61) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 107

    cuerpo_func                    shift and go to state 109

state 82

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ . PDER cuerpo_func

    PDER            shift and go to state 110


state 83

    (25) var_op -> ID revisarExistenciaClase DOSP ciclo_id .
    (37) ciclo_id -> ciclo_id . COMA ID declararVariable
    (38) ciclo_id -> ciclo_id . COMA ID declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id . COMA ID declararVariable IGUAL atom limpiarInvocador

    PYC             reduce using rule 25 (var_op -> ID revisarExistenciaClase DOSP ciclo_id .)
    COMA            shift and go to state 111


state 84

    (35) ciclo_id -> ID . declararVariable
    (36) ciclo_id -> ID . declararVariable COIZQ exp CODER
    (39) ciclo_id -> ID . declararVariable IGUAL atom limpiarInvocador
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 112

state 85

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 5 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .)


state 86

    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable .
    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    PYC             reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    COIZQ           shift and go to state 114
    IGUAL           shift and go to state 113


state 87

    (87) exp -> PIZQ . exp PDER
    (88) exp -> PIZQ . exp PDER ope exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 115
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 88

    (96) opciones -> cte_bool .

    MAS             reduce using rule 96 (opciones -> cte_bool .)
    MENOS           reduce using rule 96 (opciones -> cte_bool .)
    MOD             reduce using rule 96 (opciones -> cte_bool .)
    ENTRE           reduce using rule 96 (opciones -> cte_bool .)
    POR             reduce using rule 96 (opciones -> cte_bool .)
    IGUALC          reduce using rule 96 (opciones -> cte_bool .)
    MENOR           reduce using rule 96 (opciones -> cte_bool .)
    MENORIGUAL      reduce using rule 96 (opciones -> cte_bool .)
    MAYOR           reduce using rule 96 (opciones -> cte_bool .)
    MAYORIGUAL      reduce using rule 96 (opciones -> cte_bool .)
    NOTIGUAL        reduce using rule 96 (opciones -> cte_bool .)
    AND             reduce using rule 96 (opciones -> cte_bool .)
    OR              reduce using rule 96 (opciones -> cte_bool .)
    PDER            reduce using rule 96 (opciones -> cte_bool .)
    COMA            reduce using rule 96 (opciones -> cte_bool .)
    CODER           reduce using rule 96 (opciones -> cte_bool .)
    PYC             reduce using rule 96 (opciones -> cte_bool .)


state 89

    (83) cte_bool -> TRUE .

    MAS             reduce using rule 83 (cte_bool -> TRUE .)
    MENOS           reduce using rule 83 (cte_bool -> TRUE .)
    MOD             reduce using rule 83 (cte_bool -> TRUE .)
    ENTRE           reduce using rule 83 (cte_bool -> TRUE .)
    POR             reduce using rule 83 (cte_bool -> TRUE .)
    IGUALC          reduce using rule 83 (cte_bool -> TRUE .)
    MENOR           reduce using rule 83 (cte_bool -> TRUE .)
    MENORIGUAL      reduce using rule 83 (cte_bool -> TRUE .)
    MAYOR           reduce using rule 83 (cte_bool -> TRUE .)
    MAYORIGUAL      reduce using rule 83 (cte_bool -> TRUE .)
    NOTIGUAL        reduce using rule 83 (cte_bool -> TRUE .)
    AND             reduce using rule 83 (cte_bool -> TRUE .)
    OR              reduce using rule 83 (cte_bool -> TRUE .)
    PDER            reduce using rule 83 (cte_bool -> TRUE .)
    COMA            reduce using rule 83 (cte_bool -> TRUE .)
    PYC             reduce using rule 83 (cte_bool -> TRUE .)
    CODER           reduce using rule 83 (cte_bool -> TRUE .)


state 90

    (94) opciones -> CTE_NUMERAL .

    MAS             reduce using rule 94 (opciones -> CTE_NUMERAL .)
    MENOS           reduce using rule 94 (opciones -> CTE_NUMERAL .)
    MOD             reduce using rule 94 (opciones -> CTE_NUMERAL .)
    ENTRE           reduce using rule 94 (opciones -> CTE_NUMERAL .)
    POR             reduce using rule 94 (opciones -> CTE_NUMERAL .)
    IGUALC          reduce using rule 94 (opciones -> CTE_NUMERAL .)
    MENOR           reduce using rule 94 (opciones -> CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 94 (opciones -> CTE_NUMERAL .)
    MAYOR           reduce using rule 94 (opciones -> CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 94 (opciones -> CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 94 (opciones -> CTE_NUMERAL .)
    AND             reduce using rule 94 (opciones -> CTE_NUMERAL .)
    OR              reduce using rule 94 (opciones -> CTE_NUMERAL .)
    PDER            reduce using rule 94 (opciones -> CTE_NUMERAL .)
    COMA            reduce using rule 94 (opciones -> CTE_NUMERAL .)
    CODER           reduce using rule 94 (opciones -> CTE_NUMERAL .)
    PYC             reduce using rule 94 (opciones -> CTE_NUMERAL .)


state 91

    (95) opciones -> CTE_REAL .

    MAS             reduce using rule 95 (opciones -> CTE_REAL .)
    MENOS           reduce using rule 95 (opciones -> CTE_REAL .)
    MOD             reduce using rule 95 (opciones -> CTE_REAL .)
    ENTRE           reduce using rule 95 (opciones -> CTE_REAL .)
    POR             reduce using rule 95 (opciones -> CTE_REAL .)
    IGUALC          reduce using rule 95 (opciones -> CTE_REAL .)
    MENOR           reduce using rule 95 (opciones -> CTE_REAL .)
    MENORIGUAL      reduce using rule 95 (opciones -> CTE_REAL .)
    MAYOR           reduce using rule 95 (opciones -> CTE_REAL .)
    MAYORIGUAL      reduce using rule 95 (opciones -> CTE_REAL .)
    NOTIGUAL        reduce using rule 95 (opciones -> CTE_REAL .)
    AND             reduce using rule 95 (opciones -> CTE_REAL .)
    OR              reduce using rule 95 (opciones -> CTE_REAL .)
    PDER            reduce using rule 95 (opciones -> CTE_REAL .)
    COMA            reduce using rule 95 (opciones -> CTE_REAL .)
    CODER           reduce using rule 95 (opciones -> CTE_REAL .)
    PYC             reduce using rule 95 (opciones -> CTE_REAL .)


state 92

    (93) opciones -> CTE_CHAR .

    MAS             reduce using rule 93 (opciones -> CTE_CHAR .)
    MENOS           reduce using rule 93 (opciones -> CTE_CHAR .)
    MOD             reduce using rule 93 (opciones -> CTE_CHAR .)
    ENTRE           reduce using rule 93 (opciones -> CTE_CHAR .)
    POR             reduce using rule 93 (opciones -> CTE_CHAR .)
    IGUALC          reduce using rule 93 (opciones -> CTE_CHAR .)
    MENOR           reduce using rule 93 (opciones -> CTE_CHAR .)
    MENORIGUAL      reduce using rule 93 (opciones -> CTE_CHAR .)
    MAYOR           reduce using rule 93 (opciones -> CTE_CHAR .)
    MAYORIGUAL      reduce using rule 93 (opciones -> CTE_CHAR .)
    NOTIGUAL        reduce using rule 93 (opciones -> CTE_CHAR .)
    AND             reduce using rule 93 (opciones -> CTE_CHAR .)
    OR              reduce using rule 93 (opciones -> CTE_CHAR .)
    PDER            reduce using rule 93 (opciones -> CTE_CHAR .)
    COMA            reduce using rule 93 (opciones -> CTE_CHAR .)
    CODER           reduce using rule 93 (opciones -> CTE_CHAR .)
    PYC             reduce using rule 93 (opciones -> CTE_CHAR .)


state 93

    (85) exp -> opciones . ope exp
    (86) exp -> opciones .
    (103) ope -> . MAS
    (104) ope -> . MENOS
    (105) ope -> . MOD
    (106) ope -> . ENTRE
    (107) ope -> . POR
    (108) ope -> . IGUALC
    (109) ope -> . MENOR
    (110) ope -> . MENORIGUAL
    (111) ope -> . MAYOR
    (112) ope -> . MAYORIGUAL
    (113) ope -> . NOTIGUAL
    (114) ope -> . AND
    (115) ope -> . OR

    COMA            reduce using rule 86 (exp -> opciones .)
    PYC             reduce using rule 86 (exp -> opciones .)
    CODER           reduce using rule 86 (exp -> opciones .)
    PDER            reduce using rule 86 (exp -> opciones .)
    MAS             shift and go to state 117
    MENOS           shift and go to state 124
    MOD             shift and go to state 129
    ENTRE           shift and go to state 119
    POR             shift and go to state 120
    IGUALC          shift and go to state 127
    MENOR           shift and go to state 123
    MENORIGUAL      shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 125
    NOTIGUAL        shift and go to state 118
    AND             shift and go to state 116
    OR              shift and go to state 121

    ope                            shift and go to state 122

state 94

    (92) opciones -> CTE_STR .

    MAS             reduce using rule 92 (opciones -> CTE_STR .)
    MENOS           reduce using rule 92 (opciones -> CTE_STR .)
    MOD             reduce using rule 92 (opciones -> CTE_STR .)
    ENTRE           reduce using rule 92 (opciones -> CTE_STR .)
    POR             reduce using rule 92 (opciones -> CTE_STR .)
    IGUALC          reduce using rule 92 (opciones -> CTE_STR .)
    MENOR           reduce using rule 92 (opciones -> CTE_STR .)
    MENORIGUAL      reduce using rule 92 (opciones -> CTE_STR .)
    MAYOR           reduce using rule 92 (opciones -> CTE_STR .)
    MAYORIGUAL      reduce using rule 92 (opciones -> CTE_STR .)
    NOTIGUAL        reduce using rule 92 (opciones -> CTE_STR .)
    AND             reduce using rule 92 (opciones -> CTE_STR .)
    OR              reduce using rule 92 (opciones -> CTE_STR .)
    PDER            reduce using rule 92 (opciones -> CTE_STR .)
    COMA            reduce using rule 92 (opciones -> CTE_STR .)
    CODER           reduce using rule 92 (opciones -> CTE_STR .)
    PYC             reduce using rule 92 (opciones -> CTE_STR .)


state 95

    (97) opciones -> atom . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 130

state 96

    (98) opciones -> llamada_func . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 131

state 97

    (121) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (123) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> ID . checarAtributo
    (126) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (73) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . checarFuncion PIZQ PDER
    (77) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (80) definirInvocador -> .
    (130) checarAtributo -> .
    (79) checarFuncion -> .

    PUNTO           shift and go to state 134
    COIZQ           reduce using rule 80 (definirInvocador -> .)
    MAS             reduce using rule 130 (checarAtributo -> .)
    MENOS           reduce using rule 130 (checarAtributo -> .)
    MOD             reduce using rule 130 (checarAtributo -> .)
    ENTRE           reduce using rule 130 (checarAtributo -> .)
    POR             reduce using rule 130 (checarAtributo -> .)
    IGUALC          reduce using rule 130 (checarAtributo -> .)
    MENOR           reduce using rule 130 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 130 (checarAtributo -> .)
    MAYOR           reduce using rule 130 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 130 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 130 (checarAtributo -> .)
    AND             reduce using rule 130 (checarAtributo -> .)
    OR              reduce using rule 130 (checarAtributo -> .)
    COMA            reduce using rule 130 (checarAtributo -> .)
    PYC             reduce using rule 130 (checarAtributo -> .)
    CODER           reduce using rule 130 (checarAtributo -> .)
    PDER            reduce using rule 130 (checarAtributo -> .)
    PIZQ            reduce using rule 79 (checarFuncion -> .)

    definirInvocador               shift and go to state 132
    checarAtributo                 shift and go to state 133
    checarFuncion                  shift and go to state 135

state 98

    (84) cte_bool -> FALSE .

    MAS             reduce using rule 84 (cte_bool -> FALSE .)
    MENOS           reduce using rule 84 (cte_bool -> FALSE .)
    MOD             reduce using rule 84 (cte_bool -> FALSE .)
    ENTRE           reduce using rule 84 (cte_bool -> FALSE .)
    POR             reduce using rule 84 (cte_bool -> FALSE .)
    IGUALC          reduce using rule 84 (cte_bool -> FALSE .)
    MENOR           reduce using rule 84 (cte_bool -> FALSE .)
    MENORIGUAL      reduce using rule 84 (cte_bool -> FALSE .)
    MAYOR           reduce using rule 84 (cte_bool -> FALSE .)
    MAYORIGUAL      reduce using rule 84 (cte_bool -> FALSE .)
    NOTIGUAL        reduce using rule 84 (cte_bool -> FALSE .)
    AND             reduce using rule 84 (cte_bool -> FALSE .)
    OR              reduce using rule 84 (cte_bool -> FALSE .)
    PDER            reduce using rule 84 (cte_bool -> FALSE .)
    COMA            reduce using rule 84 (cte_bool -> FALSE .)
    PYC             reduce using rule 84 (cte_bool -> FALSE .)
    CODER           reduce using rule 84 (cte_bool -> FALSE .)


state 99

    (127) atom -> THIS . PUNTO definirInvocador ID checarAtributo
    (128) atom -> THIS . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    PUNTO           shift and go to state 136


state 100

    (89) exp -> MENOS . PIZQ exp PDER ope exp
    (91) exp -> MENOS . PIZQ exp PDER
    (99) opciones -> MENOS . CTE_NUMERAL
    (100) opciones -> MENOS . CTE_REAL
    (101) opciones -> MENOS . atom limpiarInvocador
    (102) opciones -> MENOS . llamada_func limpiarInvocador
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 137
    CTE_NUMERAL     shift and go to state 141
    CTE_REAL        shift and go to state 138
    ID              shift and go to state 97
    THIS            shift and go to state 99

    atom                           shift and go to state 139
    llamada_func                   shift and go to state 140

state 101

    (31) ciclo_tipo -> ID declararVariable IGUAL exp .

    COMA            reduce using rule 31 (ciclo_tipo -> ID declararVariable IGUAL exp .)
    PYC             reduce using rule 31 (ciclo_tipo -> ID declararVariable IGUAL exp .)


state 102

    (90) exp -> NOT . exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 142
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 103

    (28) ciclo_tipo -> ID declararVariable COIZQ exp . CODER
    (32) ciclo_tipo -> ID declararVariable COIZQ exp . CODER IGUAL exp

    CODER           shift and go to state 143


state 104

    (55) params_ciclo -> tipo . ID meterParametros

    ID              shift and go to state 144


state 105

    (53) params -> PIZQ params_ciclo . PDER
    (56) params_ciclo -> params_ciclo . COMA tipo ID meterParametros

    PDER            shift and go to state 145
    COMA            shift and go to state 146


state 106

    (54) params -> PIZQ PDER .

    LLIZQ           reduce using rule 54 (params -> PIZQ PDER .)


state 107

    (58) cuerpo_func -> LLIZQ . ciclo_vars_func ciclo_estatuto LLDER
    (59) cuerpo_func -> LLIZQ . ciclo_vars_func LLDER
    (60) cuerpo_func -> LLIZQ . ciclo_estatuto LLDER
    (61) cuerpo_func -> LLIZQ . LLDER
    (62) ciclo_vars_func -> . vars
    (63) ciclo_vars_func -> . ciclo_vars_func vars
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 157
    ID              shift and go to state 160
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    RETURN          shift and go to state 147
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    THIS            shift and go to state 99
    IF              shift and go to state 161

    vars                           shift and go to state 148
    var_op                         shift and go to state 32
    tipo                           shift and go to state 152
    estatuto                       shift and go to state 153
    ciclo_vars_func                shift and go to state 154
    condicion                      shift and go to state 155
    lectura                        shift and go to state 156
    return                         shift and go to state 151
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    asignacion                     shift and go to state 162
    ciclo_estatuto                 shift and go to state 163
    ciclo_cond                     shift and go to state 164
    while                          shift and go to state 165
    escritura                      shift and go to state 167

state 108

    (49) func -> acceso tipo ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)


state 109

    (50) func -> acceso WITHOUT ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)


state 110

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER . cuerpo_func
    (58) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (59) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (60) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (61) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 107

    cuerpo_func                    shift and go to state 168

state 111

    (37) ciclo_id -> ciclo_id COMA . ID declararVariable
    (38) ciclo_id -> ciclo_id COMA . ID declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA . ID declararVariable IGUAL atom limpiarInvocador

    ID              shift and go to state 169


state 112

    (35) ciclo_id -> ID declararVariable .
    (36) ciclo_id -> ID declararVariable . COIZQ exp CODER
    (39) ciclo_id -> ID declararVariable . IGUAL atom limpiarInvocador

    COMA            reduce using rule 35 (ciclo_id -> ID declararVariable .)
    PYC             reduce using rule 35 (ciclo_id -> ID declararVariable .)
    COIZQ           shift and go to state 171
    IGUAL           shift and go to state 170


state 113

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL . exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    atom                           shift and go to state 95
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 172
    llamada_func                   shift and go to state 96

state 114

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER IGUAL exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    atom                           shift and go to state 95
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 173
    llamada_func                   shift and go to state 96

state 115

    (87) exp -> PIZQ exp . PDER
    (88) exp -> PIZQ exp . PDER ope exp

    PDER            shift and go to state 174


state 116

    (114) ope -> AND .

    PIZQ            reduce using rule 114 (ope -> AND .)
    MENOS           reduce using rule 114 (ope -> AND .)
    NOT             reduce using rule 114 (ope -> AND .)
    CTE_STR         reduce using rule 114 (ope -> AND .)
    CTE_CHAR        reduce using rule 114 (ope -> AND .)
    CTE_NUMERAL     reduce using rule 114 (ope -> AND .)
    CTE_REAL        reduce using rule 114 (ope -> AND .)
    TRUE            reduce using rule 114 (ope -> AND .)
    FALSE           reduce using rule 114 (ope -> AND .)
    ID              reduce using rule 114 (ope -> AND .)
    THIS            reduce using rule 114 (ope -> AND .)


state 117

    (103) ope -> MAS .

    PIZQ            reduce using rule 103 (ope -> MAS .)
    MENOS           reduce using rule 103 (ope -> MAS .)
    NOT             reduce using rule 103 (ope -> MAS .)
    CTE_STR         reduce using rule 103 (ope -> MAS .)
    CTE_CHAR        reduce using rule 103 (ope -> MAS .)
    CTE_NUMERAL     reduce using rule 103 (ope -> MAS .)
    CTE_REAL        reduce using rule 103 (ope -> MAS .)
    TRUE            reduce using rule 103 (ope -> MAS .)
    FALSE           reduce using rule 103 (ope -> MAS .)
    ID              reduce using rule 103 (ope -> MAS .)
    THIS            reduce using rule 103 (ope -> MAS .)


state 118

    (113) ope -> NOTIGUAL .

    PIZQ            reduce using rule 113 (ope -> NOTIGUAL .)
    MENOS           reduce using rule 113 (ope -> NOTIGUAL .)
    NOT             reduce using rule 113 (ope -> NOTIGUAL .)
    CTE_STR         reduce using rule 113 (ope -> NOTIGUAL .)
    CTE_CHAR        reduce using rule 113 (ope -> NOTIGUAL .)
    CTE_NUMERAL     reduce using rule 113 (ope -> NOTIGUAL .)
    CTE_REAL        reduce using rule 113 (ope -> NOTIGUAL .)
    TRUE            reduce using rule 113 (ope -> NOTIGUAL .)
    FALSE           reduce using rule 113 (ope -> NOTIGUAL .)
    ID              reduce using rule 113 (ope -> NOTIGUAL .)
    THIS            reduce using rule 113 (ope -> NOTIGUAL .)


state 119

    (106) ope -> ENTRE .

    PIZQ            reduce using rule 106 (ope -> ENTRE .)
    MENOS           reduce using rule 106 (ope -> ENTRE .)
    NOT             reduce using rule 106 (ope -> ENTRE .)
    CTE_STR         reduce using rule 106 (ope -> ENTRE .)
    CTE_CHAR        reduce using rule 106 (ope -> ENTRE .)
    CTE_NUMERAL     reduce using rule 106 (ope -> ENTRE .)
    CTE_REAL        reduce using rule 106 (ope -> ENTRE .)
    TRUE            reduce using rule 106 (ope -> ENTRE .)
    FALSE           reduce using rule 106 (ope -> ENTRE .)
    ID              reduce using rule 106 (ope -> ENTRE .)
    THIS            reduce using rule 106 (ope -> ENTRE .)


state 120

    (107) ope -> POR .

    PIZQ            reduce using rule 107 (ope -> POR .)
    MENOS           reduce using rule 107 (ope -> POR .)
    NOT             reduce using rule 107 (ope -> POR .)
    CTE_STR         reduce using rule 107 (ope -> POR .)
    CTE_CHAR        reduce using rule 107 (ope -> POR .)
    CTE_NUMERAL     reduce using rule 107 (ope -> POR .)
    CTE_REAL        reduce using rule 107 (ope -> POR .)
    TRUE            reduce using rule 107 (ope -> POR .)
    FALSE           reduce using rule 107 (ope -> POR .)
    ID              reduce using rule 107 (ope -> POR .)
    THIS            reduce using rule 107 (ope -> POR .)


state 121

    (115) ope -> OR .

    PIZQ            reduce using rule 115 (ope -> OR .)
    MENOS           reduce using rule 115 (ope -> OR .)
    NOT             reduce using rule 115 (ope -> OR .)
    CTE_STR         reduce using rule 115 (ope -> OR .)
    CTE_CHAR        reduce using rule 115 (ope -> OR .)
    CTE_NUMERAL     reduce using rule 115 (ope -> OR .)
    CTE_REAL        reduce using rule 115 (ope -> OR .)
    TRUE            reduce using rule 115 (ope -> OR .)
    FALSE           reduce using rule 115 (ope -> OR .)
    ID              reduce using rule 115 (ope -> OR .)
    THIS            reduce using rule 115 (ope -> OR .)


state 122

    (85) exp -> opciones ope . exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 175
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 123

    (109) ope -> MENOR .

    PIZQ            reduce using rule 109 (ope -> MENOR .)
    MENOS           reduce using rule 109 (ope -> MENOR .)
    NOT             reduce using rule 109 (ope -> MENOR .)
    CTE_STR         reduce using rule 109 (ope -> MENOR .)
    CTE_CHAR        reduce using rule 109 (ope -> MENOR .)
    CTE_NUMERAL     reduce using rule 109 (ope -> MENOR .)
    CTE_REAL        reduce using rule 109 (ope -> MENOR .)
    TRUE            reduce using rule 109 (ope -> MENOR .)
    FALSE           reduce using rule 109 (ope -> MENOR .)
    ID              reduce using rule 109 (ope -> MENOR .)
    THIS            reduce using rule 109 (ope -> MENOR .)


state 124

    (104) ope -> MENOS .

    PIZQ            reduce using rule 104 (ope -> MENOS .)
    MENOS           reduce using rule 104 (ope -> MENOS .)
    NOT             reduce using rule 104 (ope -> MENOS .)
    CTE_STR         reduce using rule 104 (ope -> MENOS .)
    CTE_CHAR        reduce using rule 104 (ope -> MENOS .)
    CTE_NUMERAL     reduce using rule 104 (ope -> MENOS .)
    CTE_REAL        reduce using rule 104 (ope -> MENOS .)
    TRUE            reduce using rule 104 (ope -> MENOS .)
    FALSE           reduce using rule 104 (ope -> MENOS .)
    ID              reduce using rule 104 (ope -> MENOS .)
    THIS            reduce using rule 104 (ope -> MENOS .)


state 125

    (112) ope -> MAYORIGUAL .

    PIZQ            reduce using rule 112 (ope -> MAYORIGUAL .)
    MENOS           reduce using rule 112 (ope -> MAYORIGUAL .)
    NOT             reduce using rule 112 (ope -> MAYORIGUAL .)
    CTE_STR         reduce using rule 112 (ope -> MAYORIGUAL .)
    CTE_CHAR        reduce using rule 112 (ope -> MAYORIGUAL .)
    CTE_NUMERAL     reduce using rule 112 (ope -> MAYORIGUAL .)
    CTE_REAL        reduce using rule 112 (ope -> MAYORIGUAL .)
    TRUE            reduce using rule 112 (ope -> MAYORIGUAL .)
    FALSE           reduce using rule 112 (ope -> MAYORIGUAL .)
    ID              reduce using rule 112 (ope -> MAYORIGUAL .)
    THIS            reduce using rule 112 (ope -> MAYORIGUAL .)


state 126

    (110) ope -> MENORIGUAL .

    PIZQ            reduce using rule 110 (ope -> MENORIGUAL .)
    MENOS           reduce using rule 110 (ope -> MENORIGUAL .)
    NOT             reduce using rule 110 (ope -> MENORIGUAL .)
    CTE_STR         reduce using rule 110 (ope -> MENORIGUAL .)
    CTE_CHAR        reduce using rule 110 (ope -> MENORIGUAL .)
    CTE_NUMERAL     reduce using rule 110 (ope -> MENORIGUAL .)
    CTE_REAL        reduce using rule 110 (ope -> MENORIGUAL .)
    TRUE            reduce using rule 110 (ope -> MENORIGUAL .)
    FALSE           reduce using rule 110 (ope -> MENORIGUAL .)
    ID              reduce using rule 110 (ope -> MENORIGUAL .)
    THIS            reduce using rule 110 (ope -> MENORIGUAL .)


state 127

    (108) ope -> IGUALC .

    PIZQ            reduce using rule 108 (ope -> IGUALC .)
    MENOS           reduce using rule 108 (ope -> IGUALC .)
    NOT             reduce using rule 108 (ope -> IGUALC .)
    CTE_STR         reduce using rule 108 (ope -> IGUALC .)
    CTE_CHAR        reduce using rule 108 (ope -> IGUALC .)
    CTE_NUMERAL     reduce using rule 108 (ope -> IGUALC .)
    CTE_REAL        reduce using rule 108 (ope -> IGUALC .)
    TRUE            reduce using rule 108 (ope -> IGUALC .)
    FALSE           reduce using rule 108 (ope -> IGUALC .)
    ID              reduce using rule 108 (ope -> IGUALC .)
    THIS            reduce using rule 108 (ope -> IGUALC .)


state 128

    (111) ope -> MAYOR .

    PIZQ            reduce using rule 111 (ope -> MAYOR .)
    MENOS           reduce using rule 111 (ope -> MAYOR .)
    NOT             reduce using rule 111 (ope -> MAYOR .)
    CTE_STR         reduce using rule 111 (ope -> MAYOR .)
    CTE_CHAR        reduce using rule 111 (ope -> MAYOR .)
    CTE_NUMERAL     reduce using rule 111 (ope -> MAYOR .)
    CTE_REAL        reduce using rule 111 (ope -> MAYOR .)
    TRUE            reduce using rule 111 (ope -> MAYOR .)
    FALSE           reduce using rule 111 (ope -> MAYOR .)
    ID              reduce using rule 111 (ope -> MAYOR .)
    THIS            reduce using rule 111 (ope -> MAYOR .)


state 129

    (105) ope -> MOD .

    PIZQ            reduce using rule 105 (ope -> MOD .)
    MENOS           reduce using rule 105 (ope -> MOD .)
    NOT             reduce using rule 105 (ope -> MOD .)
    CTE_STR         reduce using rule 105 (ope -> MOD .)
    CTE_CHAR        reduce using rule 105 (ope -> MOD .)
    CTE_NUMERAL     reduce using rule 105 (ope -> MOD .)
    CTE_REAL        reduce using rule 105 (ope -> MOD .)
    TRUE            reduce using rule 105 (ope -> MOD .)
    FALSE           reduce using rule 105 (ope -> MOD .)
    ID              reduce using rule 105 (ope -> MOD .)
    THIS            reduce using rule 105 (ope -> MOD .)


state 130

    (97) opciones -> atom limpiarInvocador .

    MAS             reduce using rule 97 (opciones -> atom limpiarInvocador .)
    MENOS           reduce using rule 97 (opciones -> atom limpiarInvocador .)
    MOD             reduce using rule 97 (opciones -> atom limpiarInvocador .)
    ENTRE           reduce using rule 97 (opciones -> atom limpiarInvocador .)
    POR             reduce using rule 97 (opciones -> atom limpiarInvocador .)
    IGUALC          reduce using rule 97 (opciones -> atom limpiarInvocador .)
    MENOR           reduce using rule 97 (opciones -> atom limpiarInvocador .)
    MENORIGUAL      reduce using rule 97 (opciones -> atom limpiarInvocador .)
    MAYOR           reduce using rule 97 (opciones -> atom limpiarInvocador .)
    MAYORIGUAL      reduce using rule 97 (opciones -> atom limpiarInvocador .)
    NOTIGUAL        reduce using rule 97 (opciones -> atom limpiarInvocador .)
    AND             reduce using rule 97 (opciones -> atom limpiarInvocador .)
    OR              reduce using rule 97 (opciones -> atom limpiarInvocador .)
    PDER            reduce using rule 97 (opciones -> atom limpiarInvocador .)
    COMA            reduce using rule 97 (opciones -> atom limpiarInvocador .)
    CODER           reduce using rule 97 (opciones -> atom limpiarInvocador .)
    PYC             reduce using rule 97 (opciones -> atom limpiarInvocador .)


state 131

    (98) opciones -> llamada_func limpiarInvocador .

    MAS             reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    MENOS           reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    MOD             reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    ENTRE           reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    POR             reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    IGUALC          reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    MENOR           reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    MENORIGUAL      reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    MAYOR           reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    MAYORIGUAL      reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    NOTIGUAL        reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    AND             reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    OR              reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    PDER            reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    COMA            reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    CODER           reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)
    PYC             reduce using rule 98 (opciones -> llamada_func limpiarInvocador .)


state 132

    (123) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2
    (75) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    COIZQ           shift and go to state 176


state 133

    (125) atom -> ID checarAtributo .

    IGUAL           reduce using rule 125 (atom -> ID checarAtributo .)
    MAS             reduce using rule 125 (atom -> ID checarAtributo .)
    MENOS           reduce using rule 125 (atom -> ID checarAtributo .)
    MOD             reduce using rule 125 (atom -> ID checarAtributo .)
    ENTRE           reduce using rule 125 (atom -> ID checarAtributo .)
    POR             reduce using rule 125 (atom -> ID checarAtributo .)
    IGUALC          reduce using rule 125 (atom -> ID checarAtributo .)
    MENOR           reduce using rule 125 (atom -> ID checarAtributo .)
    MENORIGUAL      reduce using rule 125 (atom -> ID checarAtributo .)
    MAYOR           reduce using rule 125 (atom -> ID checarAtributo .)
    MAYORIGUAL      reduce using rule 125 (atom -> ID checarAtributo .)
    NOTIGUAL        reduce using rule 125 (atom -> ID checarAtributo .)
    AND             reduce using rule 125 (atom -> ID checarAtributo .)
    OR              reduce using rule 125 (atom -> ID checarAtributo .)
    CODER           reduce using rule 125 (atom -> ID checarAtributo .)
    COMA            reduce using rule 125 (atom -> ID checarAtributo .)
    PYC             reduce using rule 125 (atom -> ID checarAtributo .)
    PDER            reduce using rule 125 (atom -> ID checarAtributo .)


state 134

    (121) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (74) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ PDER
    (80) definirInvocador -> .

    ID              reduce using rule 80 (definirInvocador -> .)

    definirInvocador               shift and go to state 177

state 135

    (73) llamada_func -> ID checarFuncion . PIZQ exp_ciclo PDER
    (76) llamada_func -> ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 178


state 136

    (127) atom -> THIS PUNTO . definirInvocador ID checarAtributo
    (128) atom -> THIS PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (80) definirInvocador -> .

    ID              reduce using rule 80 (definirInvocador -> .)

    definirInvocador               shift and go to state 179

state 137

    (89) exp -> MENOS PIZQ . exp PDER ope exp
    (91) exp -> MENOS PIZQ . exp PDER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 180
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 138

    (100) opciones -> MENOS CTE_REAL .

    MAS             reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    MENOS           reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    MOD             reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    ENTRE           reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    POR             reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    IGUALC          reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    MENOR           reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    MENORIGUAL      reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    MAYOR           reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    MAYORIGUAL      reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    NOTIGUAL        reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    AND             reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    OR              reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    PDER            reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    COMA            reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    CODER           reduce using rule 100 (opciones -> MENOS CTE_REAL .)
    PYC             reduce using rule 100 (opciones -> MENOS CTE_REAL .)


state 139

    (101) opciones -> MENOS atom . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 181

state 140

    (102) opciones -> MENOS llamada_func . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 182

state 141

    (99) opciones -> MENOS CTE_NUMERAL .

    MAS             reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    MENOS           reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    MOD             reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    ENTRE           reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    POR             reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    IGUALC          reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    MENOR           reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    MAYOR           reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    AND             reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    OR              reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    PDER            reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    COMA            reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    CODER           reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)
    PYC             reduce using rule 99 (opciones -> MENOS CTE_NUMERAL .)


state 142

    (90) exp -> NOT exp .

    COMA            reduce using rule 90 (exp -> NOT exp .)
    PYC             reduce using rule 90 (exp -> NOT exp .)
    CODER           reduce using rule 90 (exp -> NOT exp .)
    PDER            reduce using rule 90 (exp -> NOT exp .)


state 143

    (28) ciclo_tipo -> ID declararVariable COIZQ exp CODER .
    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 28 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 28 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 183


state 144

    (55) params_ciclo -> tipo ID . meterParametros
    (57) meterParametros -> .

    PDER            reduce using rule 57 (meterParametros -> .)
    COMA            reduce using rule 57 (meterParametros -> .)

    meterParametros                shift and go to state 184

state 145

    (53) params -> PIZQ params_ciclo PDER .

    LLIZQ           reduce using rule 53 (params -> PIZQ params_ciclo PDER .)


state 146

    (56) params_ciclo -> params_ciclo COMA . tipo ID meterParametros
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35

    tipo                           shift and go to state 185

state 147

    (116) return -> RETURN . exp PYC
    (117) return -> RETURN . PYC
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PYC             shift and go to state 187
    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 186
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 148

    (62) ciclo_vars_func -> vars .

    LLDER           reduce using rule 62 (ciclo_vars_func -> vars .)
    ID              reduce using rule 62 (ciclo_vars_func -> vars .)
    WHILE           reduce using rule 62 (ciclo_vars_func -> vars .)
    OUTPUT          reduce using rule 62 (ciclo_vars_func -> vars .)
    INPUT           reduce using rule 62 (ciclo_vars_func -> vars .)
    RETURN          reduce using rule 62 (ciclo_vars_func -> vars .)
    NUMERAL         reduce using rule 62 (ciclo_vars_func -> vars .)
    REAL            reduce using rule 62 (ciclo_vars_func -> vars .)
    BOOL            reduce using rule 62 (ciclo_vars_func -> vars .)
    CHAR            reduce using rule 62 (ciclo_vars_func -> vars .)
    STRING          reduce using rule 62 (ciclo_vars_func -> vars .)
    THIS            reduce using rule 62 (ciclo_vars_func -> vars .)
    IF              reduce using rule 62 (ciclo_vars_func -> vars .)


state 149

    (120) asignacion -> atom . limpiarInvocador IGUAL exp PYC
    (11) limpiarInvocador -> .

    IGUAL           reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 188

state 150

    (118) while -> WHILE . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> WHILE . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 189


state 151

    (72) estatuto -> return .

    LLDER           reduce using rule 72 (estatuto -> return .)
    WHILE           reduce using rule 72 (estatuto -> return .)
    OUTPUT          reduce using rule 72 (estatuto -> return .)
    INPUT           reduce using rule 72 (estatuto -> return .)
    ID              reduce using rule 72 (estatuto -> return .)
    RETURN          reduce using rule 72 (estatuto -> return .)
    THIS            reduce using rule 72 (estatuto -> return .)
    IF              reduce using rule 72 (estatuto -> return .)


state 152

    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> . ID declararVariable IGUAL exp
    (32) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 190

    ciclo_tipo                     shift and go to state 50

state 153

    (64) ciclo_estatuto -> estatuto .

    LLDER           reduce using rule 64 (ciclo_estatuto -> estatuto .)
    WHILE           reduce using rule 64 (ciclo_estatuto -> estatuto .)
    OUTPUT          reduce using rule 64 (ciclo_estatuto -> estatuto .)
    INPUT           reduce using rule 64 (ciclo_estatuto -> estatuto .)
    ID              reduce using rule 64 (ciclo_estatuto -> estatuto .)
    RETURN          reduce using rule 64 (ciclo_estatuto -> estatuto .)
    THIS            reduce using rule 64 (ciclo_estatuto -> estatuto .)
    IF              reduce using rule 64 (ciclo_estatuto -> estatuto .)


state 154

    (58) cuerpo_func -> LLIZQ ciclo_vars_func . ciclo_estatuto LLDER
    (59) cuerpo_func -> LLIZQ ciclo_vars_func . LLDER
    (63) ciclo_vars_func -> ciclo_vars_func . vars
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 192
    ID              shift and go to state 160
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    RETURN          shift and go to state 147
    NUMERAL         shift and go to state 33
    REAL            shift and go to state 29
    BOOL            shift and go to state 38
    CHAR            shift and go to state 31
    STRING          shift and go to state 35
    THIS            shift and go to state 99
    IF              shift and go to state 161

    vars                           shift and go to state 191
    var_op                         shift and go to state 32
    tipo                           shift and go to state 152
    estatuto                       shift and go to state 153
    condicion                      shift and go to state 155
    lectura                        shift and go to state 156
    return                         shift and go to state 151
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    asignacion                     shift and go to state 162
    ciclo_estatuto                 shift and go to state 193
    ciclo_cond                     shift and go to state 164
    while                          shift and go to state 165
    escritura                      shift and go to state 167

state 155

    (68) estatuto -> condicion .

    LLDER           reduce using rule 68 (estatuto -> condicion .)
    WHILE           reduce using rule 68 (estatuto -> condicion .)
    OUTPUT          reduce using rule 68 (estatuto -> condicion .)
    INPUT           reduce using rule 68 (estatuto -> condicion .)
    ID              reduce using rule 68 (estatuto -> condicion .)
    RETURN          reduce using rule 68 (estatuto -> condicion .)
    THIS            reduce using rule 68 (estatuto -> condicion .)
    IF              reduce using rule 68 (estatuto -> condicion .)


state 156

    (70) estatuto -> lectura .

    LLDER           reduce using rule 70 (estatuto -> lectura .)
    WHILE           reduce using rule 70 (estatuto -> lectura .)
    OUTPUT          reduce using rule 70 (estatuto -> lectura .)
    INPUT           reduce using rule 70 (estatuto -> lectura .)
    ID              reduce using rule 70 (estatuto -> lectura .)
    RETURN          reduce using rule 70 (estatuto -> lectura .)
    THIS            reduce using rule 70 (estatuto -> lectura .)
    IF              reduce using rule 70 (estatuto -> lectura .)


state 157

    (61) cuerpo_func -> LLIZQ LLDER .

    LLDER           reduce using rule 61 (cuerpo_func -> LLIZQ LLDER .)
    HIDDEN          reduce using rule 61 (cuerpo_func -> LLIZQ LLDER .)
    VISIBLE         reduce using rule 61 (cuerpo_func -> LLIZQ LLDER .)


state 158

    (137) lectura -> INPUT . PIZQ atom limpiarInvocador PDER PYC

    PIZQ            shift and go to state 194


state 159

    (71) estatuto -> llamada_func . limpiarInvocador PYC
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 195

state 160

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (73) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . checarFuncion PIZQ PDER
    (77) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (121) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (123) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> ID . checarAtributo
    (126) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (26) revisarExistenciaClase -> .
    (79) checarFuncion -> .
    (80) definirInvocador -> .
    (130) checarAtributo -> .

    PUNTO           shift and go to state 197
    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)
    PIZQ            reduce using rule 79 (checarFuncion -> .)
    COIZQ           reduce using rule 80 (definirInvocador -> .)
    IGUAL           reduce using rule 130 (checarAtributo -> .)

    definirInvocador               shift and go to state 196
    checarAtributo                 shift and go to state 133
    checarFuncion                  shift and go to state 135
    revisarExistenciaClase         shift and go to state 54

state 161

    (133) ciclo_cond -> IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 198


state 162

    (67) estatuto -> asignacion .

    LLDER           reduce using rule 67 (estatuto -> asignacion .)
    WHILE           reduce using rule 67 (estatuto -> asignacion .)
    OUTPUT          reduce using rule 67 (estatuto -> asignacion .)
    INPUT           reduce using rule 67 (estatuto -> asignacion .)
    ID              reduce using rule 67 (estatuto -> asignacion .)
    RETURN          reduce using rule 67 (estatuto -> asignacion .)
    THIS            reduce using rule 67 (estatuto -> asignacion .)
    IF              reduce using rule 67 (estatuto -> asignacion .)


state 163

    (60) cuerpo_func -> LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 200
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    estatuto                       shift and go to state 199
    ciclo_cond                     shift and go to state 164
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    lectura                        shift and go to state 156
    escritura                      shift and go to state 167

state 164

    (131) condicion -> ciclo_cond . ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> ciclo_cond . ELSE LLIZQ LLDER
    (135) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ LLDER

    ELSE            shift and go to state 202


state 165

    (66) estatuto -> while .

    LLDER           reduce using rule 66 (estatuto -> while .)
    WHILE           reduce using rule 66 (estatuto -> while .)
    OUTPUT          reduce using rule 66 (estatuto -> while .)
    INPUT           reduce using rule 66 (estatuto -> while .)
    ID              reduce using rule 66 (estatuto -> while .)
    RETURN          reduce using rule 66 (estatuto -> while .)
    THIS            reduce using rule 66 (estatuto -> while .)
    IF              reduce using rule 66 (estatuto -> while .)


state 166

    (138) escritura -> OUTPUT . PIZQ exp PDER PYC

    PIZQ            shift and go to state 203


state 167

    (69) estatuto -> escritura .

    LLDER           reduce using rule 69 (estatuto -> escritura .)
    WHILE           reduce using rule 69 (estatuto -> escritura .)
    OUTPUT          reduce using rule 69 (estatuto -> escritura .)
    INPUT           reduce using rule 69 (estatuto -> escritura .)
    ID              reduce using rule 69 (estatuto -> escritura .)
    RETURN          reduce using rule 69 (estatuto -> escritura .)
    THIS            reduce using rule 69 (estatuto -> escritura .)
    IF              reduce using rule 69 (estatuto -> escritura .)


state 168

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .

    LLDER           reduce using rule 52 (main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER cuerpo_func .)


state 169

    (37) ciclo_id -> ciclo_id COMA ID . declararVariable
    (38) ciclo_id -> ciclo_id COMA ID . declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA ID . declararVariable IGUAL atom limpiarInvocador
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 204

state 170

    (39) ciclo_id -> ID declararVariable IGUAL . atom limpiarInvocador
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 206
    THIS            shift and go to state 99

    atom                           shift and go to state 205

state 171

    (36) ciclo_id -> ID declararVariable COIZQ . exp CODER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 207
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 172

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .

    COMA            reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)
    PYC             reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)


state 173

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER IGUAL exp

    CODER           shift and go to state 208


state 174

    (87) exp -> PIZQ exp PDER .
    (88) exp -> PIZQ exp PDER . ope exp
    (103) ope -> . MAS
    (104) ope -> . MENOS
    (105) ope -> . MOD
    (106) ope -> . ENTRE
    (107) ope -> . POR
    (108) ope -> . IGUALC
    (109) ope -> . MENOR
    (110) ope -> . MENORIGUAL
    (111) ope -> . MAYOR
    (112) ope -> . MAYORIGUAL
    (113) ope -> . NOTIGUAL
    (114) ope -> . AND
    (115) ope -> . OR

    COMA            reduce using rule 87 (exp -> PIZQ exp PDER .)
    PYC             reduce using rule 87 (exp -> PIZQ exp PDER .)
    CODER           reduce using rule 87 (exp -> PIZQ exp PDER .)
    PDER            reduce using rule 87 (exp -> PIZQ exp PDER .)
    MAS             shift and go to state 117
    MENOS           shift and go to state 124
    MOD             shift and go to state 129
    ENTRE           shift and go to state 119
    POR             shift and go to state 120
    IGUALC          shift and go to state 127
    MENOR           shift and go to state 123
    MENORIGUAL      shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 125
    NOTIGUAL        shift and go to state 118
    AND             shift and go to state 116
    OR              shift and go to state 121

    ope                            shift and go to state 209

state 175

    (85) exp -> opciones ope exp .

    COMA            reduce using rule 85 (exp -> opciones ope exp .)
    PYC             reduce using rule 85 (exp -> opciones ope exp .)
    CODER           reduce using rule 85 (exp -> opciones ope exp .)
    PDER            reduce using rule 85 (exp -> opciones ope exp .)


state 176

    (123) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (75) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ PDER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 210
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 177

    (121) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (122) atom -> ID PUNTO definirInvocador . ID checarAtributo
    (74) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ PDER

    ID              shift and go to state 211


state 178

    (73) llamada_func -> ID checarFuncion PIZQ . exp_ciclo PDER
    (76) llamada_func -> ID checarFuncion PIZQ . PDER
    (81) exp_ciclo -> . exp
    (82) exp_ciclo -> . exp_ciclo COMA exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 212
    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    exp_ciclo                      shift and go to state 213
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 214
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 179

    (127) atom -> THIS PUNTO definirInvocador . ID checarAtributo
    (128) atom -> THIS PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 215


state 180

    (89) exp -> MENOS PIZQ exp . PDER ope exp
    (91) exp -> MENOS PIZQ exp . PDER

    PDER            shift and go to state 216


state 181

    (101) opciones -> MENOS atom limpiarInvocador .

    MAS             reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    MENOS           reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    MOD             reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    ENTRE           reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    POR             reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    IGUALC          reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    MENOR           reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    MENORIGUAL      reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    MAYOR           reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    MAYORIGUAL      reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    NOTIGUAL        reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    AND             reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    OR              reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    PDER            reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    COMA            reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    CODER           reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)
    PYC             reduce using rule 101 (opciones -> MENOS atom limpiarInvocador .)


state 182

    (102) opciones -> MENOS llamada_func limpiarInvocador .

    MAS             reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    MENOS           reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    MOD             reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    ENTRE           reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    POR             reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    IGUALC          reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    MENOR           reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    MENORIGUAL      reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    MAYOR           reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    MAYORIGUAL      reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    NOTIGUAL        reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    AND             reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    OR              reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    PDER            reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    COMA            reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    CODER           reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)
    PYC             reduce using rule 102 (opciones -> MENOS llamada_func limpiarInvocador .)


state 183

    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL . exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 217
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 184

    (55) params_ciclo -> tipo ID meterParametros .

    PDER            reduce using rule 55 (params_ciclo -> tipo ID meterParametros .)
    COMA            reduce using rule 55 (params_ciclo -> tipo ID meterParametros .)


state 185

    (56) params_ciclo -> params_ciclo COMA tipo . ID meterParametros

    ID              shift and go to state 218


state 186

    (116) return -> RETURN exp . PYC

    PYC             shift and go to state 219


state 187

    (117) return -> RETURN PYC .

    LLDER           reduce using rule 117 (return -> RETURN PYC .)
    WHILE           reduce using rule 117 (return -> RETURN PYC .)
    OUTPUT          reduce using rule 117 (return -> RETURN PYC .)
    INPUT           reduce using rule 117 (return -> RETURN PYC .)
    ID              reduce using rule 117 (return -> RETURN PYC .)
    RETURN          reduce using rule 117 (return -> RETURN PYC .)
    THIS            reduce using rule 117 (return -> RETURN PYC .)
    IF              reduce using rule 117 (return -> RETURN PYC .)


state 188

    (120) asignacion -> atom limpiarInvocador . IGUAL exp PYC

    IGUAL           shift and go to state 220


state 189

    (118) while -> WHILE PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> WHILE PIZQ . exp PDER LLIZQ LLDER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 221
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 190

    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> ID . declararVariable IGUAL exp
    (32) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 67

state 191

    (63) ciclo_vars_func -> ciclo_vars_func vars .

    LLDER           reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    ID              reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    WHILE           reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    OUTPUT          reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    INPUT           reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    RETURN          reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    NUMERAL         reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    REAL            reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    BOOL            reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    CHAR            reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    STRING          reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    THIS            reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)
    IF              reduce using rule 63 (ciclo_vars_func -> ciclo_vars_func vars .)


state 192

    (59) cuerpo_func -> LLIZQ ciclo_vars_func LLDER .

    LLDER           reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    HIDDEN          reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    VISIBLE         reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)


state 193

    (58) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 222
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    estatuto                       shift and go to state 199
    ciclo_cond                     shift and go to state 164
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    lectura                        shift and go to state 156
    escritura                      shift and go to state 167

state 194

    (137) lectura -> INPUT PIZQ . atom limpiarInvocador PDER PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 206
    THIS            shift and go to state 99

    atom                           shift and go to state 223

state 195

    (71) estatuto -> llamada_func limpiarInvocador . PYC

    PYC             shift and go to state 224


state 196

    (75) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (123) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2

    COIZQ           shift and go to state 225


state 197

    (74) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ PDER
    (121) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (80) definirInvocador -> .

    ID              reduce using rule 80 (definirInvocador -> .)

    definirInvocador               shift and go to state 226

state 198

    (133) ciclo_cond -> IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> IF PIZQ . exp PDER LLIZQ LLDER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 227
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 199

    (65) ciclo_estatuto -> ciclo_estatuto estatuto .

    LLDER           reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    WHILE           reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    OUTPUT          reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    INPUT           reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    ID              reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    RETURN          reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    THIS            reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    IF              reduce using rule 65 (ciclo_estatuto -> ciclo_estatuto estatuto .)


state 200

    (60) cuerpo_func -> LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    HIDDEN          reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)


state 201

    (73) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . checarFuncion PIZQ PDER
    (77) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (121) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (123) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> ID . checarAtributo
    (126) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (79) checarFuncion -> .
    (80) definirInvocador -> .
    (130) checarAtributo -> .

    PUNTO           shift and go to state 197
    PIZQ            reduce using rule 79 (checarFuncion -> .)
    COIZQ           reduce using rule 80 (definirInvocador -> .)
    IGUAL           reduce using rule 130 (checarAtributo -> .)

    definirInvocador               shift and go to state 196
    checarAtributo                 shift and go to state 133
    checarFuncion                  shift and go to state 135

state 202

    (131) condicion -> ciclo_cond ELSE . LLIZQ ciclo_estatuto LLDER
    (132) condicion -> ciclo_cond ELSE . LLIZQ LLDER
    (135) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ LLDER

    LLIZQ           shift and go to state 228
    IF              shift and go to state 229


state 203

    (138) escritura -> OUTPUT PIZQ . exp PDER PYC
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 230
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 204

    (37) ciclo_id -> ciclo_id COMA ID declararVariable .
    (38) ciclo_id -> ciclo_id COMA ID declararVariable . COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA ID declararVariable . IGUAL atom limpiarInvocador

    COMA            reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    PYC             reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    COIZQ           shift and go to state 232
    IGUAL           shift and go to state 231


state 205

    (39) ciclo_id -> ID declararVariable IGUAL atom . limpiarInvocador
    (11) limpiarInvocador -> .

    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 233

state 206

    (121) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (123) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> ID . checarAtributo
    (126) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (80) definirInvocador -> .
    (130) checarAtributo -> .

    PUNTO           shift and go to state 235
    COIZQ           reduce using rule 80 (definirInvocador -> .)
    COMA            reduce using rule 130 (checarAtributo -> .)
    PYC             reduce using rule 130 (checarAtributo -> .)
    PDER            reduce using rule 130 (checarAtributo -> .)

    definirInvocador               shift and go to state 234
    checarAtributo                 shift and go to state 133

state 207

    (36) ciclo_id -> ID declararVariable COIZQ exp . CODER

    CODER           shift and go to state 236


state 208

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 237


state 209

    (88) exp -> PIZQ exp PDER ope . exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 238
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 210

    (123) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2
    (75) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ PDER

    CODER           shift and go to state 239


state 211

    (121) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (122) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (74) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ PDER
    (130) checarAtributo -> .
    (79) checarFuncion -> .

    COIZQ           reduce using rule 130 (checarAtributo -> .)
    MAS             reduce using rule 130 (checarAtributo -> .)
    MENOS           reduce using rule 130 (checarAtributo -> .)
    MOD             reduce using rule 130 (checarAtributo -> .)
    ENTRE           reduce using rule 130 (checarAtributo -> .)
    POR             reduce using rule 130 (checarAtributo -> .)
    IGUALC          reduce using rule 130 (checarAtributo -> .)
    MENOR           reduce using rule 130 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 130 (checarAtributo -> .)
    MAYOR           reduce using rule 130 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 130 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 130 (checarAtributo -> .)
    AND             reduce using rule 130 (checarAtributo -> .)
    OR              reduce using rule 130 (checarAtributo -> .)
    COMA            reduce using rule 130 (checarAtributo -> .)
    PYC             reduce using rule 130 (checarAtributo -> .)
    CODER           reduce using rule 130 (checarAtributo -> .)
    PDER            reduce using rule 130 (checarAtributo -> .)
    PIZQ            reduce using rule 79 (checarFuncion -> .)

    checarFuncion                  shift and go to state 241
    checarAtributo                 shift and go to state 240

state 212

    (76) llamada_func -> ID checarFuncion PIZQ PDER .

    MAS             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    PYC             reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 76 (llamada_func -> ID checarFuncion PIZQ PDER .)


state 213

    (73) llamada_func -> ID checarFuncion PIZQ exp_ciclo . PDER
    (82) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 243
    COMA            shift and go to state 242


state 214

    (81) exp_ciclo -> exp .

    PDER            reduce using rule 81 (exp_ciclo -> exp .)
    COMA            reduce using rule 81 (exp_ciclo -> exp .)


state 215

    (127) atom -> THIS PUNTO definirInvocador ID . checarAtributo
    (128) atom -> THIS PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (130) checarAtributo -> .

    COIZQ           reduce using rule 130 (checarAtributo -> .)
    MAS             reduce using rule 130 (checarAtributo -> .)
    MENOS           reduce using rule 130 (checarAtributo -> .)
    MOD             reduce using rule 130 (checarAtributo -> .)
    ENTRE           reduce using rule 130 (checarAtributo -> .)
    POR             reduce using rule 130 (checarAtributo -> .)
    IGUALC          reduce using rule 130 (checarAtributo -> .)
    MENOR           reduce using rule 130 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 130 (checarAtributo -> .)
    MAYOR           reduce using rule 130 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 130 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 130 (checarAtributo -> .)
    AND             reduce using rule 130 (checarAtributo -> .)
    OR              reduce using rule 130 (checarAtributo -> .)
    COMA            reduce using rule 130 (checarAtributo -> .)
    PYC             reduce using rule 130 (checarAtributo -> .)
    CODER           reduce using rule 130 (checarAtributo -> .)
    PDER            reduce using rule 130 (checarAtributo -> .)
    IGUAL           reduce using rule 130 (checarAtributo -> .)

    checarAtributo                 shift and go to state 244

state 216

    (89) exp -> MENOS PIZQ exp PDER . ope exp
    (91) exp -> MENOS PIZQ exp PDER .
    (103) ope -> . MAS
    (104) ope -> . MENOS
    (105) ope -> . MOD
    (106) ope -> . ENTRE
    (107) ope -> . POR
    (108) ope -> . IGUALC
    (109) ope -> . MENOR
    (110) ope -> . MENORIGUAL
    (111) ope -> . MAYOR
    (112) ope -> . MAYORIGUAL
    (113) ope -> . NOTIGUAL
    (114) ope -> . AND
    (115) ope -> . OR

    COMA            reduce using rule 91 (exp -> MENOS PIZQ exp PDER .)
    PYC             reduce using rule 91 (exp -> MENOS PIZQ exp PDER .)
    CODER           reduce using rule 91 (exp -> MENOS PIZQ exp PDER .)
    PDER            reduce using rule 91 (exp -> MENOS PIZQ exp PDER .)
    MAS             shift and go to state 117
    MENOS           shift and go to state 124
    MOD             shift and go to state 129
    ENTRE           shift and go to state 119
    POR             shift and go to state 120
    IGUALC          shift and go to state 127
    MENOR           shift and go to state 123
    MENORIGUAL      shift and go to state 126
    MAYOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 125
    NOTIGUAL        shift and go to state 118
    AND             shift and go to state 116
    OR              shift and go to state 121

    ope                            shift and go to state 245

state 217

    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .

    COMA            reduce using rule 32 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 32 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)


state 218

    (56) params_ciclo -> params_ciclo COMA tipo ID . meterParametros
    (57) meterParametros -> .

    PDER            reduce using rule 57 (meterParametros -> .)
    COMA            reduce using rule 57 (meterParametros -> .)

    meterParametros                shift and go to state 246

state 219

    (116) return -> RETURN exp PYC .

    LLDER           reduce using rule 116 (return -> RETURN exp PYC .)
    WHILE           reduce using rule 116 (return -> RETURN exp PYC .)
    OUTPUT          reduce using rule 116 (return -> RETURN exp PYC .)
    INPUT           reduce using rule 116 (return -> RETURN exp PYC .)
    ID              reduce using rule 116 (return -> RETURN exp PYC .)
    RETURN          reduce using rule 116 (return -> RETURN exp PYC .)
    THIS            reduce using rule 116 (return -> RETURN exp PYC .)
    IF              reduce using rule 116 (return -> RETURN exp PYC .)


state 220

    (120) asignacion -> atom limpiarInvocador IGUAL . exp PYC
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 247
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 221

    (118) while -> WHILE PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> WHILE PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 248


state 222

    (58) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .

    LLDER           reduce using rule 58 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    HIDDEN          reduce using rule 58 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 58 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)


state 223

    (137) lectura -> INPUT PIZQ atom . limpiarInvocador PDER PYC
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 249

state 224

    (71) estatuto -> llamada_func limpiarInvocador PYC .

    LLDER           reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    WHILE           reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    OUTPUT          reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    INPUT           reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    ID              reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    RETURN          reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    THIS            reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)
    IF              reduce using rule 71 (estatuto -> llamada_func limpiarInvocador PYC .)


state 225

    (75) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ PDER
    (123) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 250
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 226

    (74) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ PDER
    (121) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (122) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 251


state 227

    (133) ciclo_cond -> IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> IF PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 252


state 228

    (131) condicion -> ciclo_cond ELSE LLIZQ . ciclo_estatuto LLDER
    (132) condicion -> ciclo_cond ELSE LLIZQ . LLDER
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 253
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    ciclo_estatuto                 shift and go to state 254
    estatuto                       shift and go to state 153
    lectura                        shift and go to state 156
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    ciclo_cond                     shift and go to state 164
    escritura                      shift and go to state 167

state 229

    (135) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 255


state 230

    (138) escritura -> OUTPUT PIZQ exp . PDER PYC

    PDER            shift and go to state 256


state 231

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL . atom limpiarInvocador
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 206
    THIS            shift and go to state 99

    atom                           shift and go to state 257

state 232

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ . exp CODER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 258
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 233

    (39) ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .

    COMA            reduce using rule 39 (ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .)
    PYC             reduce using rule 39 (ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .)


state 234

    (123) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2

    COIZQ           shift and go to state 259


state 235

    (121) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (80) definirInvocador -> .

    ID              reduce using rule 80 (definirInvocador -> .)

    definirInvocador               shift and go to state 260

state 236

    (36) ciclo_id -> ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 36 (ciclo_id -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 36 (ciclo_id -> ID declararVariable COIZQ exp CODER .)


state 237

    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL . exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    atom                           shift and go to state 95
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 261
    llamada_func                   shift and go to state 96

state 238

    (88) exp -> PIZQ exp PDER ope exp .

    COMA            reduce using rule 88 (exp -> PIZQ exp PDER ope exp .)
    PYC             reduce using rule 88 (exp -> PIZQ exp PDER ope exp .)
    CODER           reduce using rule 88 (exp -> PIZQ exp PDER ope exp .)
    PDER            reduce using rule 88 (exp -> PIZQ exp PDER ope exp .)


state 239

    (123) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (75) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ PDER
    (129) checarAtributo2 -> .

    PUNTO           shift and go to state 263
    MAS             reduce using rule 129 (checarAtributo2 -> .)
    MENOS           reduce using rule 129 (checarAtributo2 -> .)
    MOD             reduce using rule 129 (checarAtributo2 -> .)
    ENTRE           reduce using rule 129 (checarAtributo2 -> .)
    POR             reduce using rule 129 (checarAtributo2 -> .)
    IGUALC          reduce using rule 129 (checarAtributo2 -> .)
    MENOR           reduce using rule 129 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 129 (checarAtributo2 -> .)
    MAYOR           reduce using rule 129 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 129 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 129 (checarAtributo2 -> .)
    AND             reduce using rule 129 (checarAtributo2 -> .)
    OR              reduce using rule 129 (checarAtributo2 -> .)
    COMA            reduce using rule 129 (checarAtributo2 -> .)
    PYC             reduce using rule 129 (checarAtributo2 -> .)
    CODER           reduce using rule 129 (checarAtributo2 -> .)
    PDER            reduce using rule 129 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 262

state 240

    (121) atom -> ID PUNTO definirInvocador ID checarAtributo . COIZQ exp CODER
    (122) atom -> ID PUNTO definirInvocador ID checarAtributo .

    COIZQ           shift and go to state 264
    IGUAL           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAS             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo .)


state 241

    (74) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 265


state 242

    (82) exp_ciclo -> exp_ciclo COMA . exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 266
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 243

    (73) llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .

    MAS             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 73 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)


state 244

    (127) atom -> THIS PUNTO definirInvocador ID checarAtributo .
    (128) atom -> THIS PUNTO definirInvocador ID checarAtributo . COIZQ exp CODER

    IGUAL           reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAS             reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 127 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COIZQ           shift and go to state 267


state 245

    (89) exp -> MENOS PIZQ exp PDER ope . exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 268
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 246

    (56) params_ciclo -> params_ciclo COMA tipo ID meterParametros .

    PDER            reduce using rule 56 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)
    COMA            reduce using rule 56 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)


state 247

    (120) asignacion -> atom limpiarInvocador IGUAL exp . PYC

    PYC             shift and go to state 269


state 248

    (118) while -> WHILE PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (119) while -> WHILE PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 270


state 249

    (137) lectura -> INPUT PIZQ atom limpiarInvocador . PDER PYC

    PDER            shift and go to state 271


state 250

    (75) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ PDER
    (123) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2

    CODER           shift and go to state 272


state 251

    (74) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ PDER
    (121) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (122) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (79) checarFuncion -> .
    (130) checarAtributo -> .

    PIZQ            reduce using rule 79 (checarFuncion -> .)
    COIZQ           reduce using rule 130 (checarAtributo -> .)
    IGUAL           reduce using rule 130 (checarAtributo -> .)

    checarFuncion                  shift and go to state 241
    checarAtributo                 shift and go to state 240

state 252

    (133) ciclo_cond -> IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 273


state 253

    (132) condicion -> ciclo_cond ELSE LLIZQ LLDER .

    LLDER           reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    WHILE           reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    OUTPUT          reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    INPUT           reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    ID              reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    RETURN          reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    THIS            reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    IF              reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)


state 254

    (131) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 274
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    estatuto                       shift and go to state 199
    lectura                        shift and go to state 156
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    ciclo_cond                     shift and go to state 164
    escritura                      shift and go to state 167

state 255

    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ LLDER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 275
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 256

    (138) escritura -> OUTPUT PIZQ exp PDER . PYC

    PYC             shift and go to state 276


state 257

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom . limpiarInvocador
    (11) limpiarInvocador -> .

    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 277

state 258

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp . CODER

    CODER           shift and go to state 278


state 259

    (123) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 279
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 260

    (121) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (122) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 280


state 261

    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .

    COMA            reduce using rule 34 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 34 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)


state 262

    (126) atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .

    IGUAL           reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAS             reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENOS           reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MOD             reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    ENTRE           reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    POR             reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    IGUALC          reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENOR           reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENORIGUAL      reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAYOR           reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAYORIGUAL      reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    NOTIGUAL        reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    AND             reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    OR              reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    CODER           reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    COMA            reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    PYC             reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    PDER            reduce using rule 126 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)


state 263

    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo
    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ PDER

    ID              shift and go to state 281


state 264

    (121) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ . exp CODER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 282
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 265

    (74) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ . exp_ciclo PDER
    (77) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ . PDER
    (81) exp_ciclo -> . exp
    (82) exp_ciclo -> . exp_ciclo COMA exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 283
    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    exp_ciclo                      shift and go to state 284
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 214
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 266

    (82) exp_ciclo -> exp_ciclo COMA exp .

    PDER            reduce using rule 82 (exp_ciclo -> exp_ciclo COMA exp .)
    COMA            reduce using rule 82 (exp_ciclo -> exp_ciclo COMA exp .)


state 267

    (128) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ . exp CODER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 285
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 268

    (89) exp -> MENOS PIZQ exp PDER ope exp .

    COMA            reduce using rule 89 (exp -> MENOS PIZQ exp PDER ope exp .)
    PYC             reduce using rule 89 (exp -> MENOS PIZQ exp PDER ope exp .)
    CODER           reduce using rule 89 (exp -> MENOS PIZQ exp PDER ope exp .)
    PDER            reduce using rule 89 (exp -> MENOS PIZQ exp PDER ope exp .)


state 269

    (120) asignacion -> atom limpiarInvocador IGUAL exp PYC .

    LLDER           reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    WHILE           reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    OUTPUT          reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    INPUT           reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    ID              reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    RETURN          reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    THIS            reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    IF              reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)


state 270

    (118) while -> WHILE PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (119) while -> WHILE PIZQ exp PDER LLIZQ . LLDER
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 286
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    ciclo_estatuto                 shift and go to state 287
    estatuto                       shift and go to state 153
    ciclo_cond                     shift and go to state 164
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    lectura                        shift and go to state 156
    escritura                      shift and go to state 167

state 271

    (137) lectura -> INPUT PIZQ atom limpiarInvocador PDER . PYC

    PYC             shift and go to state 288


state 272

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ PDER
    (123) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (129) checarAtributo2 -> .

    PUNTO           shift and go to state 289
    IGUAL           reduce using rule 129 (checarAtributo2 -> .)
    MAS             reduce using rule 129 (checarAtributo2 -> .)
    MENOS           reduce using rule 129 (checarAtributo2 -> .)
    MOD             reduce using rule 129 (checarAtributo2 -> .)
    ENTRE           reduce using rule 129 (checarAtributo2 -> .)
    POR             reduce using rule 129 (checarAtributo2 -> .)
    IGUALC          reduce using rule 129 (checarAtributo2 -> .)
    MENOR           reduce using rule 129 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 129 (checarAtributo2 -> .)
    MAYOR           reduce using rule 129 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 129 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 129 (checarAtributo2 -> .)
    AND             reduce using rule 129 (checarAtributo2 -> .)
    OR              reduce using rule 129 (checarAtributo2 -> .)
    CODER           reduce using rule 129 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 262

state 273

    (133) ciclo_cond -> IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (134) ciclo_cond -> IF PIZQ exp PDER LLIZQ . LLDER
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 290
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    ciclo_estatuto                 shift and go to state 291
    estatuto                       shift and go to state 153
    ciclo_cond                     shift and go to state 164
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    lectura                        shift and go to state 156
    escritura                      shift and go to state 167

state 274

    (131) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 131 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 131 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 131 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 131 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 131 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 131 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 131 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 131 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)


state 275

    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 292


state 276

    (138) escritura -> OUTPUT PIZQ exp PDER PYC .

    LLDER           reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    WHILE           reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    OUTPUT          reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    INPUT           reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    ID              reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    RETURN          reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    THIS            reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    IF              reduce using rule 138 (escritura -> OUTPUT PIZQ exp PDER PYC .)


state 277

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .

    COMA            reduce using rule 40 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .)
    PYC             reduce using rule 40 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .)


state 278

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 38 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 38 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)


state 279

    (123) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2

    CODER           shift and go to state 293


state 280

    (121) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (122) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (130) checarAtributo -> .

    COIZQ           reduce using rule 130 (checarAtributo -> .)
    COMA            reduce using rule 130 (checarAtributo -> .)
    PYC             reduce using rule 130 (checarAtributo -> .)
    PDER            reduce using rule 130 (checarAtributo -> .)

    checarAtributo                 shift and go to state 240

state 281

    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ PDER
    (130) checarAtributo -> .
    (79) checarFuncion -> .

    COIZQ           reduce using rule 130 (checarAtributo -> .)
    MAS             reduce using rule 130 (checarAtributo -> .)
    MENOS           reduce using rule 130 (checarAtributo -> .)
    MOD             reduce using rule 130 (checarAtributo -> .)
    ENTRE           reduce using rule 130 (checarAtributo -> .)
    POR             reduce using rule 130 (checarAtributo -> .)
    IGUALC          reduce using rule 130 (checarAtributo -> .)
    MENOR           reduce using rule 130 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 130 (checarAtributo -> .)
    MAYOR           reduce using rule 130 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 130 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 130 (checarAtributo -> .)
    AND             reduce using rule 130 (checarAtributo -> .)
    OR              reduce using rule 130 (checarAtributo -> .)
    COMA            reduce using rule 130 (checarAtributo -> .)
    PYC             reduce using rule 130 (checarAtributo -> .)
    CODER           reduce using rule 130 (checarAtributo -> .)
    PDER            reduce using rule 130 (checarAtributo -> .)
    PIZQ            reduce using rule 79 (checarFuncion -> .)

    checarFuncion                  shift and go to state 295
    checarAtributo                 shift and go to state 294

state 282

    (121) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp . CODER

    CODER           shift and go to state 296


state 283

    (77) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .

    MAS             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    PYC             reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 77 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)


state 284

    (74) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo . PDER
    (82) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 297
    COMA            shift and go to state 242


state 285

    (128) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp . CODER

    CODER           shift and go to state 298


state 286

    (119) while -> WHILE PIZQ exp PDER LLIZQ LLDER .

    LLDER           reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    WHILE           reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    OUTPUT          reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    INPUT           reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    ID              reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    RETURN          reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    THIS            reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    IF              reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)


state 287

    (118) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 299
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    estatuto                       shift and go to state 199
    ciclo_cond                     shift and go to state 164
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    lectura                        shift and go to state 156
    escritura                      shift and go to state 167

state 288

    (137) lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .

    LLDER           reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    WHILE           reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    OUTPUT          reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    INPUT           reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    ID              reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    RETURN          reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    THIS            reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    IF              reduce using rule 137 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)


state 289

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ PDER
    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo

    ID              shift and go to state 300


state 290

    (134) ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 134 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)


state 291

    (133) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 301
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    estatuto                       shift and go to state 199
    ciclo_cond                     shift and go to state 164
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    lectura                        shift and go to state 156
    escritura                      shift and go to state 167

state 292

    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 302


state 293

    (123) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (126) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (129) checarAtributo2 -> .

    PUNTO           shift and go to state 303
    COMA            reduce using rule 129 (checarAtributo2 -> .)
    PYC             reduce using rule 129 (checarAtributo2 -> .)
    PDER            reduce using rule 129 (checarAtributo2 -> .)
    MAS             reduce using rule 129 (checarAtributo2 -> .)
    MENOS           reduce using rule 129 (checarAtributo2 -> .)
    MOD             reduce using rule 129 (checarAtributo2 -> .)
    ENTRE           reduce using rule 129 (checarAtributo2 -> .)
    POR             reduce using rule 129 (checarAtributo2 -> .)
    IGUALC          reduce using rule 129 (checarAtributo2 -> .)
    MENOR           reduce using rule 129 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 129 (checarAtributo2 -> .)
    MAYOR           reduce using rule 129 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 129 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 129 (checarAtributo2 -> .)
    AND             reduce using rule 129 (checarAtributo2 -> .)
    OR              reduce using rule 129 (checarAtributo2 -> .)
    CODER           reduce using rule 129 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 262

state 294

    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo . COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .

    COIZQ           shift and go to state 304
    IGUAL           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAS             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENOS           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MOD             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    ENTRE           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    POR             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    IGUALC          reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENOR           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENORIGUAL      reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAYOR           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAYORIGUAL      reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    NOTIGUAL        reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    AND             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    OR              reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    CODER           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    COMA            reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    PYC             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    PDER            reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)


state 295

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion . PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 305


state 296

    (121) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .

    IGUAL           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAS             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)


state 297

    (74) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .

    MAS             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 74 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)


state 298

    (128) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .

    IGUAL           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAS             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)


state 299

    (118) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 118 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 300

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ PDER
    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (79) checarFuncion -> .
    (130) checarAtributo -> .

    PIZQ            reduce using rule 79 (checarFuncion -> .)
    COIZQ           reduce using rule 130 (checarAtributo -> .)
    IGUAL           reduce using rule 130 (checarAtributo -> .)
    MAS             reduce using rule 130 (checarAtributo -> .)
    MENOS           reduce using rule 130 (checarAtributo -> .)
    MOD             reduce using rule 130 (checarAtributo -> .)
    ENTRE           reduce using rule 130 (checarAtributo -> .)
    POR             reduce using rule 130 (checarAtributo -> .)
    IGUALC          reduce using rule 130 (checarAtributo -> .)
    MENOR           reduce using rule 130 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 130 (checarAtributo -> .)
    MAYOR           reduce using rule 130 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 130 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 130 (checarAtributo -> .)
    AND             reduce using rule 130 (checarAtributo -> .)
    OR              reduce using rule 130 (checarAtributo -> .)
    CODER           reduce using rule 130 (checarAtributo -> .)

    checarFuncion                  shift and go to state 295
    checarAtributo                 shift and go to state 294

state 301

    (133) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 302

    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . LLDER
    (64) ciclo_estatuto -> . estatuto
    (65) ciclo_estatuto -> . ciclo_estatuto estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 306
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    ciclo_estatuto                 shift and go to state 307
    estatuto                       shift and go to state 153
    lectura                        shift and go to state 156
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    ciclo_cond                     shift and go to state 164
    escritura                      shift and go to state 167

state 303

    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo

    ID              shift and go to state 308


state 304

    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ . exp CODER
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 309
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 305

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ . exp_ciclo PDER
    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ . PDER
    (81) exp_ciclo -> . exp
    (82) exp_ciclo -> . exp_ciclo COMA exp
    (85) exp -> . opciones ope exp
    (86) exp -> . opciones
    (87) exp -> . PIZQ exp PDER
    (88) exp -> . PIZQ exp PDER ope exp
    (89) exp -> . MENOS PIZQ exp PDER ope exp
    (90) exp -> . NOT exp
    (91) exp -> . MENOS PIZQ exp PDER
    (92) opciones -> . CTE_STR
    (93) opciones -> . CTE_CHAR
    (94) opciones -> . CTE_NUMERAL
    (95) opciones -> . CTE_REAL
    (96) opciones -> . cte_bool
    (97) opciones -> . atom limpiarInvocador
    (98) opciones -> . llamada_func limpiarInvocador
    (99) opciones -> . MENOS CTE_NUMERAL
    (100) opciones -> . MENOS CTE_REAL
    (101) opciones -> . MENOS atom limpiarInvocador
    (102) opciones -> . MENOS llamada_func limpiarInvocador
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 310
    PIZQ            shift and go to state 87
    MENOS           shift and go to state 100
    NOT             shift and go to state 102
    CTE_STR         shift and go to state 94
    CTE_CHAR        shift and go to state 92
    CTE_NUMERAL     shift and go to state 90
    CTE_REAL        shift and go to state 91
    TRUE            shift and go to state 89
    FALSE           shift and go to state 98
    ID              shift and go to state 97
    THIS            shift and go to state 99

    opciones                       shift and go to state 93
    exp_ciclo                      shift and go to state 311
    cte_bool                       shift and go to state 88
    exp                            shift and go to state 214
    atom                           shift and go to state 95
    llamada_func                   shift and go to state 96

state 306

    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 136 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)


state 307

    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (65) ciclo_estatuto -> ciclo_estatuto . estatuto
    (66) estatuto -> . while
    (67) estatuto -> . asignacion
    (68) estatuto -> . condicion
    (69) estatuto -> . escritura
    (70) estatuto -> . lectura
    (71) estatuto -> . llamada_func limpiarInvocador PYC
    (72) estatuto -> . return
    (118) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (119) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (131) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (132) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (138) escritura -> . OUTPUT PIZQ exp PDER PYC
    (137) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (73) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID checarFuncion PIZQ PDER
    (77) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (116) return -> . RETURN exp PYC
    (117) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (123) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (127) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (133) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 312
    WHILE           shift and go to state 150
    OUTPUT          shift and go to state 166
    INPUT           shift and go to state 158
    ID              shift and go to state 201
    RETURN          shift and go to state 147
    THIS            shift and go to state 99
    IF              shift and go to state 161

    return                         shift and go to state 151
    asignacion                     shift and go to state 162
    estatuto                       shift and go to state 199
    lectura                        shift and go to state 156
    while                          shift and go to state 165
    condicion                      shift and go to state 155
    atom                           shift and go to state 149
    llamada_func                   shift and go to state 159
    ciclo_cond                     shift and go to state 164
    escritura                      shift and go to state 167

state 308

    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (130) checarAtributo -> .

    COIZQ           reduce using rule 130 (checarAtributo -> .)
    COMA            reduce using rule 130 (checarAtributo -> .)
    PYC             reduce using rule 130 (checarAtributo -> .)
    PDER            reduce using rule 130 (checarAtributo -> .)
    MAS             reduce using rule 130 (checarAtributo -> .)
    MENOS           reduce using rule 130 (checarAtributo -> .)
    MOD             reduce using rule 130 (checarAtributo -> .)
    ENTRE           reduce using rule 130 (checarAtributo -> .)
    POR             reduce using rule 130 (checarAtributo -> .)
    IGUALC          reduce using rule 130 (checarAtributo -> .)
    MENOR           reduce using rule 130 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 130 (checarAtributo -> .)
    MAYOR           reduce using rule 130 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 130 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 130 (checarAtributo -> .)
    AND             reduce using rule 130 (checarAtributo -> .)
    OR              reduce using rule 130 (checarAtributo -> .)
    CODER           reduce using rule 130 (checarAtributo -> .)

    checarAtributo                 shift and go to state 294

state 309

    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp . CODER

    CODER           shift and go to state 313


state 310

    (78) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .

    MAS             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    PYC             reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 78 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)


state 311

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo . PDER
    (82) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 314
    COMA            shift and go to state 242


state 312

    (135) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 313

    (123) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .

    IGUAL           reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAS             reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 123 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)


state 314

    (75) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .

    MAS             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 75 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)

