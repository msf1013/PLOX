Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ciclo_clase clase_main
Rule 2     programa -> clase_main
Rule 3     ciclo_clase -> clase
Rule 4     ciclo_clase -> ciclo_clase clase
Rule 5     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER
Rule 6     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER
Rule 7     clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER
Rule 8     clase -> CLASS ID declararClase herencia LLIZQ LLDER
Rule 9     declararClase -> <empty>
Rule 10    herencia -> empty
Rule 11    herencia -> UNDER ID agregaAncestro
Rule 12    agregaAncestro -> <empty>
Rule 13    ciclo_vars -> acceso vars
Rule 14    ciclo_vars -> ciclo_vars acceso vars
Rule 15    ciclo_func -> func
Rule 16    ciclo_func -> ciclo_func func
Rule 17    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
Rule 18    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
Rule 19    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
Rule 20    clase_main -> CLASS MAIN declararClase LLIZQ main LLDER
Rule 21    vars -> var_op PYC
Rule 22    var_op -> tipo ciclo_tipo
Rule 23    var_op -> ID revisarExistenciaClase ciclo_id
Rule 24    revisarExistenciaClase -> <empty>
Rule 25    ciclo_tipo -> ID
Rule 26    ciclo_tipo -> ID COIZQ exp CODER
Rule 27    ciclo_tipo -> ciclo_tipo COMA ID
Rule 28    ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER
Rule 29    ciclo_tipo -> ID IGUAL exp
Rule 30    ciclo_tipo -> ID COIZQ exp CODER IGUAL exp
Rule 31    ciclo_tipo -> ciclo_tipo COMA ID IGUAL exp
Rule 32    ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER IGUAL exp
Rule 33    ciclo_id -> ID
Rule 34    ciclo_id -> ID COIZQ exp CODER
Rule 35    ciclo_id -> ciclo_id COMA ID
Rule 36    ciclo_id -> ciclo_id COMA ID COIZQ exp CODER
Rule 37    ciclo_id -> ID IGUAL NEW ID PIZQ PDER
Rule 38    ciclo_id -> ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER
Rule 39    ciclo_id -> ciclo_id COMA ID IGUAL NEW ID PIZQ PDER
Rule 40    ciclo_id -> ciclo_id COMA ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER
Rule 41    tipo -> NUMERAL
Rule 42    tipo -> REAL
Rule 43    tipo -> BOOL
Rule 44    tipo -> CHAR
Rule 45    tipo -> STRING
Rule 46    acceso -> HIDDEN
Rule 47    acceso -> VISIBLE
Rule 48    func -> acceso tipo ID params cuerpo_func
Rule 49    func -> acceso WITHOUT ID params cuerpo_func
Rule 50    main -> acceso WITHOUT MAIN PIZQ PDER cuerpo_func
Rule 51    params -> PIZQ params_ciclo PDER
Rule 52    params -> PIZQ PDER
Rule 53    params_ciclo -> tipo ID
Rule 54    params_ciclo -> params_ciclo COMA tipo ID
Rule 55    cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER
Rule 56    cuerpo_func -> LLIZQ ciclo_vars_func LLDER
Rule 57    cuerpo_func -> LLIZQ ciclo_estatuto LLDER
Rule 58    cuerpo_func -> LLIZQ LLDER
Rule 59    ciclo_vars_func -> vars
Rule 60    ciclo_vars_func -> ciclo_vars_func vars
Rule 61    ciclo_estatuto -> estatuto
Rule 62    ciclo_estatuto -> ciclo_estatuto estatuto
Rule 63    estatuto -> while
Rule 64    estatuto -> asignacion
Rule 65    estatuto -> condicion
Rule 66    estatuto -> escritura
Rule 67    estatuto -> lectura
Rule 68    estatuto -> llamada_func PYC
Rule 69    estatuto -> return
Rule 70    llamada_func -> ID PIZQ exp_ciclo PDER
Rule 71    llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER
Rule 72    llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER
Rule 73    llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
Rule 74    llamada_func -> ID PIZQ PDER
Rule 75    llamada_func -> THIS PUNTO ID PIZQ PDER
Rule 76    llamada_func -> ID PUNTO ID PIZQ PDER
Rule 77    llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER
Rule 78    exp_ciclo -> exp
Rule 79    exp_ciclo -> exp_ciclo COMA exp
Rule 80    cte_bool -> TRUE
Rule 81    cte_bool -> FALSE
Rule 82    exp -> opciones ope exp
Rule 83    exp -> opciones
Rule 84    exp -> PIZQ exp PDER
Rule 85    exp -> PIZQ exp PDER ope exp
Rule 86    exp -> MENOS PIZQ exp PDER ope exp
Rule 87    exp -> NOT exp
Rule 88    exp -> MENOS PIZQ exp PDER
Rule 89    opciones -> CTE_STR
Rule 90    opciones -> CTE_CHAR
Rule 91    opciones -> CTE_NUMERAL
Rule 92    opciones -> CTE_REAL
Rule 93    opciones -> cte_bool
Rule 94    opciones -> atom
Rule 95    opciones -> llamada_func
Rule 96    opciones -> MENOS CTE_NUMERAL
Rule 97    opciones -> MENOS CTE_REAL
Rule 98    opciones -> MENOS atom
Rule 99    opciones -> MENOS llamada_func
Rule 100   ope -> MAS
Rule 101   ope -> MENOS
Rule 102   ope -> MOD
Rule 103   ope -> ENTRE
Rule 104   ope -> POR
Rule 105   ope -> IGUALC
Rule 106   ope -> MENOR
Rule 107   ope -> MENORIGUAL
Rule 108   ope -> MAYOR
Rule 109   ope -> MAYORIGUAL
Rule 110   ope -> NOTIGUAL
Rule 111   ope -> AND
Rule 112   ope -> OR
Rule 113   return -> RETURN exp PYC
Rule 114   return -> RETURN PYC
Rule 115   while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 116   while -> WHILE PIZQ exp PDER LLIZQ LLDER
Rule 117   asignacion -> atom IGUAL exp PYC
Rule 118   asignacion -> atom IGUAL NEW ID PIZQ PDER PYC
Rule 119   atom -> ID PUNTO ID COIZQ exp CODER
Rule 120   atom -> ID PUNTO ID
Rule 121   atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
Rule 122   atom -> ID COIZQ exp CODER PUNTO ID
Rule 123   atom -> ID
Rule 124   atom -> ID COIZQ exp CODER
Rule 125   atom -> THIS PUNTO ID
Rule 126   atom -> THIS PUNTO ID COIZQ exp CODER
Rule 127   condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
Rule 128   condicion -> ciclo_cond ELSE LLIZQ LLDER
Rule 129   ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 130   ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER
Rule 131   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 132   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER
Rule 133   lectura -> INPUT PIZQ atom PDER PYC
Rule 134   escritura -> OUTPUT PIZQ exp PDER PYC
Rule 135   empty -> <empty>

Terminals, with rules where they appear

AND                  : 111
BOOL                 : 43
CHAR                 : 44
CLASS                : 5 6 7 8 17 18 19 20
CODER                : 26 28 30 32 34 36 38 40 73 77 119 121 121 122 124 126
COIZQ                : 26 28 30 32 34 36 38 40 73 77 119 121 121 122 124 126
COMA                 : 27 28 31 32 35 36 39 40 54 79
CTE_CHAR             : 90
CTE_NUMERAL          : 91 96
CTE_REAL             : 92 97
CTE_STR              : 89
ELSE                 : 127 128 131 132
ENTRE                : 103
FALSE                : 81
HIDDEN               : 46
ID                   : 5 6 7 8 11 23 25 26 27 28 29 30 31 32 33 34 35 36 37 37 38 38 39 39 40 40 48 49 53 54 70 71 72 72 73 73 74 75 76 76 77 77 118 119 119 120 120 121 121 122 122 123 124 125 126
IF                   : 129 130 131 132
IGUAL                : 29 30 31 32 37 38 39 40 117 118
IGUALC               : 105
INPUT                : 133
LLDER                : 5 6 7 8 17 18 19 20 55 56 57 58 115 116 127 128 129 130 131 132
LLIZQ                : 5 6 7 8 17 18 19 20 55 56 57 58 115 116 127 128 129 130 131 132
MAIN                 : 17 18 19 20 50
MAS                  : 100
MAYOR                : 108
MAYORIGUAL           : 109
MENOR                : 106
MENORIGUAL           : 107
MENOS                : 86 88 96 97 98 99 101
MOD                  : 102
NEW                  : 37 38 39 40 118
NOT                  : 87
NOTIGUAL             : 110
NUMERAL              : 41
OR                   : 112
OUTPUT               : 134
PDER                 : 37 38 39 40 50 51 52 70 71 72 73 74 75 76 77 84 85 86 88 115 116 118 129 130 131 132 133 134
PIZQ                 : 37 38 39 40 50 51 52 70 71 72 73 74 75 76 77 84 85 86 88 115 116 118 129 130 131 132 133 134
POR                  : 104
PUNTO                : 71 72 73 75 76 77 119 120 121 122 125 126
PYC                  : 21 68 113 114 117 118 133 134
REAL                 : 42
RETURN               : 113 114
STRING               : 45
THIS                 : 71 75 125 126
TRUE                 : 80
UNDER                : 11
VISIBLE              : 47
WHILE                : 115 116
WITHOUT              : 49 50
error                : 

Nonterminals, with rules where they appear

acceso               : 13 14 48 49 50
agregaAncestro       : 11
asignacion           : 64
atom                 : 94 98 117 118 133
ciclo_clase          : 1 4
ciclo_cond           : 127 128 131 132
ciclo_estatuto       : 55 57 62 115 127 129 131
ciclo_func           : 5 7 16 17 19
ciclo_id             : 23 35 36 39 40
ciclo_tipo           : 22 27 28 31 32
ciclo_vars           : 5 6 14 17 18
ciclo_vars_func      : 55 56 60
clase                : 3 4
clase_main           : 1 2
condicion            : 65
cte_bool             : 93
cuerpo_func          : 48 49 50
declararClase        : 5 6 7 8 17 18 19 20
empty                : 10
escritura            : 66
estatuto             : 61 62
exp                  : 26 28 29 30 30 31 32 32 34 36 38 40 73 77 78 79 82 84 85 85 86 86 87 88 113 115 116 117 119 121 121 122 124 126 129 130 131 132 134
exp_ciclo            : 70 71 72 73 79
func                 : 15 16
herencia             : 5 6 7 8
lectura              : 67
llamada_func         : 68 95 99
main                 : 17 18 19 20
opciones             : 82 83
ope                  : 82 85 86
params               : 48 49
params_ciclo         : 51 54
programa             : 0
return               : 69
revisarExistenciaClase : 23
tipo                 : 22 48 53 54
var_op               : 21
vars                 : 13 14 59 60
while                : 63

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ciclo_clase clase_main
    (2) programa -> . clase_main
    (3) ciclo_clase -> . clase
    (4) ciclo_clase -> . ciclo_clase clase
    (17) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (18) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER

    CLASS           shift and go to state 5

    ciclo_clase                    shift and go to state 1
    clase_main                     shift and go to state 2
    clase                          shift and go to state 3
    programa                       shift and go to state 4

state 1

    (1) programa -> ciclo_clase . clase_main
    (4) ciclo_clase -> ciclo_clase . clase
    (17) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (18) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER

    CLASS           shift and go to state 5

    clase_main                     shift and go to state 6
    clase                          shift and go to state 7

state 2

    (2) programa -> clase_main .

    $end            reduce using rule 2 (programa -> clase_main .)


state 3

    (3) ciclo_clase -> clase .

    CLASS           reduce using rule 3 (ciclo_clase -> clase .)


state 4

    (0) S' -> programa .



state 5

    (17) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (18) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars main LLDER
    (19) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_func main LLDER
    (20) clase_main -> CLASS . MAIN declararClase LLIZQ main LLDER
    (5) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER
    (6) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars LLDER
    (7) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_func LLDER
    (8) clase -> CLASS . ID declararClase herencia LLIZQ LLDER

    MAIN            shift and go to state 8
    ID              shift and go to state 9


state 6

    (1) programa -> ciclo_clase clase_main .

    $end            reduce using rule 1 (programa -> ciclo_clase clase_main .)


state 7

    (4) ciclo_clase -> ciclo_clase clase .

    CLASS           reduce using rule 4 (ciclo_clase -> ciclo_clase clase .)


state 8

    (17) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (18) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars main LLDER
    (19) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN . declararClase LLIZQ main LLDER
    (9) declararClase -> .

    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 10

state 9

    (5) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER
    (6) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars LLDER
    (7) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_func LLDER
    (8) clase -> CLASS ID . declararClase herencia LLIZQ LLDER
    (9) declararClase -> .

    UNDER           reduce using rule 9 (declararClase -> .)
    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 11

state 10

    (17) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars ciclo_func main LLDER
    (18) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars main LLDER
    (19) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase . LLIZQ main LLDER

    LLIZQ           shift and go to state 12


state 11

    (5) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars ciclo_func LLDER
    (6) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars LLDER
    (7) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_func LLDER
    (8) clase -> CLASS ID declararClase . herencia LLIZQ LLDER
    (10) herencia -> . empty
    (11) herencia -> . UNDER ID agregaAncestro
    (135) empty -> .

    UNDER           shift and go to state 13
    LLIZQ           reduce using rule 135 (empty -> .)

    herencia                       shift and go to state 14
    empty                          shift and go to state 15

state 12

    (17) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars ciclo_func main LLDER
    (18) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars main LLDER
    (19) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ . main LLDER
    (13) ciclo_vars -> . acceso vars
    (14) ciclo_vars -> . ciclo_vars acceso vars
    (15) ciclo_func -> . func
    (16) ciclo_func -> . ciclo_func func
    (50) main -> . acceso WITHOUT MAIN PIZQ PDER cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE
    (48) func -> . acceso tipo ID params cuerpo_func
    (49) func -> . acceso WITHOUT ID params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 18
    ciclo_func                     shift and go to state 17
    ciclo_vars                     shift and go to state 19
    func                           shift and go to state 21
    main                           shift and go to state 16

state 13

    (11) herencia -> UNDER . ID agregaAncestro

    ID              shift and go to state 23


state 14

    (5) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars ciclo_func LLDER
    (6) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars LLDER
    (7) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_func LLDER
    (8) clase -> CLASS ID declararClase herencia . LLIZQ LLDER

    LLIZQ           shift and go to state 24


state 15

    (10) herencia -> empty .

    LLIZQ           reduce using rule 10 (herencia -> empty .)


state 16

    (20) clase_main -> CLASS MAIN declararClase LLIZQ main . LLDER

    LLDER           shift and go to state 25


state 17

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func . main LLDER
    (16) ciclo_func -> ciclo_func . func
    (50) main -> . acceso WITHOUT MAIN PIZQ PDER cuerpo_func
    (48) func -> . acceso tipo ID params cuerpo_func
    (49) func -> . acceso WITHOUT ID params cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 28

state 18

    (13) ciclo_vars -> acceso . vars
    (50) main -> acceso . WITHOUT MAIN PIZQ PDER cuerpo_func
    (48) func -> acceso . tipo ID params cuerpo_func
    (49) func -> acceso . WITHOUT ID params cuerpo_func
    (21) vars -> . var_op PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (22) var_op -> . tipo ciclo_tipo
    (23) var_op -> . ID revisarExistenciaClase ciclo_id

    WITHOUT         shift and go to state 33
    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37
    ID              shift and go to state 31

    vars                           shift and go to state 30
    tipo                           shift and go to state 38
    var_op                         shift and go to state 36

state 19

    (17) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . ciclo_func main LLDER
    (18) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . main LLDER
    (14) ciclo_vars -> ciclo_vars . acceso vars
    (15) ciclo_func -> . func
    (16) ciclo_func -> . ciclo_func func
    (50) main -> . acceso WITHOUT MAIN PIZQ PDER cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE
    (48) func -> . acceso tipo ID params cuerpo_func
    (49) func -> . acceso WITHOUT ID params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 41
    ciclo_func                     shift and go to state 40
    func                           shift and go to state 21
    main                           shift and go to state 39

state 20

    (47) acceso -> VISIBLE .

    WITHOUT         reduce using rule 47 (acceso -> VISIBLE .)
    NUMERAL         reduce using rule 47 (acceso -> VISIBLE .)
    REAL            reduce using rule 47 (acceso -> VISIBLE .)
    BOOL            reduce using rule 47 (acceso -> VISIBLE .)
    CHAR            reduce using rule 47 (acceso -> VISIBLE .)
    STRING          reduce using rule 47 (acceso -> VISIBLE .)
    ID              reduce using rule 47 (acceso -> VISIBLE .)


state 21

    (15) ciclo_func -> func .

    LLDER           reduce using rule 15 (ciclo_func -> func .)
    HIDDEN          reduce using rule 15 (ciclo_func -> func .)
    VISIBLE         reduce using rule 15 (ciclo_func -> func .)


state 22

    (46) acceso -> HIDDEN .

    WITHOUT         reduce using rule 46 (acceso -> HIDDEN .)
    NUMERAL         reduce using rule 46 (acceso -> HIDDEN .)
    REAL            reduce using rule 46 (acceso -> HIDDEN .)
    BOOL            reduce using rule 46 (acceso -> HIDDEN .)
    CHAR            reduce using rule 46 (acceso -> HIDDEN .)
    STRING          reduce using rule 46 (acceso -> HIDDEN .)
    ID              reduce using rule 46 (acceso -> HIDDEN .)


state 23

    (11) herencia -> UNDER ID . agregaAncestro
    (12) agregaAncestro -> .

    LLIZQ           reduce using rule 12 (agregaAncestro -> .)

    agregaAncestro                 shift and go to state 42

state 24

    (5) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars ciclo_func LLDER
    (6) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars LLDER
    (7) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_func LLDER
    (8) clase -> CLASS ID declararClase herencia LLIZQ . LLDER
    (13) ciclo_vars -> . acceso vars
    (14) ciclo_vars -> . ciclo_vars acceso vars
    (15) ciclo_func -> . func
    (16) ciclo_func -> . ciclo_func func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE
    (48) func -> . acceso tipo ID params cuerpo_func
    (49) func -> . acceso WITHOUT ID params cuerpo_func

    LLDER           shift and go to state 43
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 45
    ciclo_func                     shift and go to state 44
    ciclo_vars                     shift and go to state 46
    func                           shift and go to state 21

state 25

    (20) clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .

    $end            reduce using rule 20 (clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .)


state 26

    (50) main -> acceso . WITHOUT MAIN PIZQ PDER cuerpo_func
    (48) func -> acceso . tipo ID params cuerpo_func
    (49) func -> acceso . WITHOUT ID params cuerpo_func
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING

    WITHOUT         shift and go to state 33
    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37

    tipo                           shift and go to state 47

state 27

    (16) ciclo_func -> ciclo_func func .

    LLDER           reduce using rule 16 (ciclo_func -> ciclo_func func .)
    HIDDEN          reduce using rule 16 (ciclo_func -> ciclo_func func .)
    VISIBLE         reduce using rule 16 (ciclo_func -> ciclo_func func .)


state 28

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main . LLDER

    LLDER           shift and go to state 48


state 29

    (42) tipo -> REAL .

    ID              reduce using rule 42 (tipo -> REAL .)


state 30

    (13) ciclo_vars -> acceso vars .

    LLDER           reduce using rule 13 (ciclo_vars -> acceso vars .)
    HIDDEN          reduce using rule 13 (ciclo_vars -> acceso vars .)
    VISIBLE         reduce using rule 13 (ciclo_vars -> acceso vars .)


state 31

    (23) var_op -> ID . revisarExistenciaClase ciclo_id
    (24) revisarExistenciaClase -> .

    ID              reduce using rule 24 (revisarExistenciaClase -> .)

    revisarExistenciaClase         shift and go to state 49

state 32

    (44) tipo -> CHAR .

    ID              reduce using rule 44 (tipo -> CHAR .)


state 33

    (50) main -> acceso WITHOUT . MAIN PIZQ PDER cuerpo_func
    (49) func -> acceso WITHOUT . ID params cuerpo_func

    MAIN            shift and go to state 51
    ID              shift and go to state 50


state 34

    (43) tipo -> BOOL .

    ID              reduce using rule 43 (tipo -> BOOL .)


state 35

    (41) tipo -> NUMERAL .

    ID              reduce using rule 41 (tipo -> NUMERAL .)


state 36

    (21) vars -> var_op . PYC

    PYC             shift and go to state 52


state 37

    (45) tipo -> STRING .

    ID              reduce using rule 45 (tipo -> STRING .)


state 38

    (48) func -> acceso tipo . ID params cuerpo_func
    (22) var_op -> tipo . ciclo_tipo
    (25) ciclo_tipo -> . ID
    (26) ciclo_tipo -> . ID COIZQ exp CODER
    (27) ciclo_tipo -> . ciclo_tipo COMA ID
    (28) ciclo_tipo -> . ciclo_tipo COMA ID COIZQ exp CODER
    (29) ciclo_tipo -> . ID IGUAL exp
    (30) ciclo_tipo -> . ID COIZQ exp CODER IGUAL exp
    (31) ciclo_tipo -> . ciclo_tipo COMA ID IGUAL exp
    (32) ciclo_tipo -> . ciclo_tipo COMA ID COIZQ exp CODER IGUAL exp

    ID              shift and go to state 54

    ciclo_tipo                     shift and go to state 53

state 39

    (18) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main . LLDER

    LLDER           shift and go to state 55


state 40

    (17) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func . main LLDER
    (16) ciclo_func -> ciclo_func . func
    (50) main -> . acceso WITHOUT MAIN PIZQ PDER cuerpo_func
    (48) func -> . acceso tipo ID params cuerpo_func
    (49) func -> . acceso WITHOUT ID params cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 26
    func                           shift and go to state 27
    main                           shift and go to state 56

state 41

    (14) ciclo_vars -> ciclo_vars acceso . vars
    (50) main -> acceso . WITHOUT MAIN PIZQ PDER cuerpo_func
    (48) func -> acceso . tipo ID params cuerpo_func
    (49) func -> acceso . WITHOUT ID params cuerpo_func
    (21) vars -> . var_op PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (22) var_op -> . tipo ciclo_tipo
    (23) var_op -> . ID revisarExistenciaClase ciclo_id

    WITHOUT         shift and go to state 33
    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37
    ID              shift and go to state 31

    vars                           shift and go to state 57
    tipo                           shift and go to state 38
    var_op                         shift and go to state 36

state 42

    (11) herencia -> UNDER ID agregaAncestro .

    LLIZQ           reduce using rule 11 (herencia -> UNDER ID agregaAncestro .)


state 43

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER .

    CLASS           reduce using rule 8 (clase -> CLASS ID declararClase herencia LLIZQ LLDER .)


state 44

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func . LLDER
    (16) ciclo_func -> ciclo_func . func
    (48) func -> . acceso tipo ID params cuerpo_func
    (49) func -> . acceso WITHOUT ID params cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE

    LLDER           shift and go to state 58
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 59
    func                           shift and go to state 27

state 45

    (13) ciclo_vars -> acceso . vars
    (48) func -> acceso . tipo ID params cuerpo_func
    (49) func -> acceso . WITHOUT ID params cuerpo_func
    (21) vars -> . var_op PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (22) var_op -> . tipo ciclo_tipo
    (23) var_op -> . ID revisarExistenciaClase ciclo_id

    WITHOUT         shift and go to state 60
    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37
    ID              shift and go to state 31

    vars                           shift and go to state 30
    tipo                           shift and go to state 38
    var_op                         shift and go to state 36

state 46

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . ciclo_func LLDER
    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . LLDER
    (14) ciclo_vars -> ciclo_vars . acceso vars
    (15) ciclo_func -> . func
    (16) ciclo_func -> . ciclo_func func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE
    (48) func -> . acceso tipo ID params cuerpo_func
    (49) func -> . acceso WITHOUT ID params cuerpo_func

    LLDER           shift and go to state 61
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 63
    ciclo_func                     shift and go to state 62
    func                           shift and go to state 21

state 47

    (48) func -> acceso tipo . ID params cuerpo_func

    ID              shift and go to state 64


state 48

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .

    $end            reduce using rule 19 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .)


state 49

    (23) var_op -> ID revisarExistenciaClase . ciclo_id
    (33) ciclo_id -> . ID
    (34) ciclo_id -> . ID COIZQ exp CODER
    (35) ciclo_id -> . ciclo_id COMA ID
    (36) ciclo_id -> . ciclo_id COMA ID COIZQ exp CODER
    (37) ciclo_id -> . ID IGUAL NEW ID PIZQ PDER
    (38) ciclo_id -> . ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER
    (39) ciclo_id -> . ciclo_id COMA ID IGUAL NEW ID PIZQ PDER
    (40) ciclo_id -> . ciclo_id COMA ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER

    ID              shift and go to state 66

    ciclo_id                       shift and go to state 65

state 50

    (49) func -> acceso WITHOUT ID . params cuerpo_func
    (51) params -> . PIZQ params_ciclo PDER
    (52) params -> . PIZQ PDER

    PIZQ            shift and go to state 67

    params                         shift and go to state 68

state 51

    (50) main -> acceso WITHOUT MAIN . PIZQ PDER cuerpo_func

    PIZQ            shift and go to state 69


state 52

    (21) vars -> var_op PYC .

    HIDDEN          reduce using rule 21 (vars -> var_op PYC .)
    VISIBLE         reduce using rule 21 (vars -> var_op PYC .)
    LLDER           reduce using rule 21 (vars -> var_op PYC .)
    ID              reduce using rule 21 (vars -> var_op PYC .)
    WHILE           reduce using rule 21 (vars -> var_op PYC .)
    OUTPUT          reduce using rule 21 (vars -> var_op PYC .)
    INPUT           reduce using rule 21 (vars -> var_op PYC .)
    THIS            reduce using rule 21 (vars -> var_op PYC .)
    RETURN          reduce using rule 21 (vars -> var_op PYC .)
    NUMERAL         reduce using rule 21 (vars -> var_op PYC .)
    REAL            reduce using rule 21 (vars -> var_op PYC .)
    BOOL            reduce using rule 21 (vars -> var_op PYC .)
    CHAR            reduce using rule 21 (vars -> var_op PYC .)
    STRING          reduce using rule 21 (vars -> var_op PYC .)
    IF              reduce using rule 21 (vars -> var_op PYC .)


state 53

    (22) var_op -> tipo ciclo_tipo .
    (27) ciclo_tipo -> ciclo_tipo . COMA ID
    (28) ciclo_tipo -> ciclo_tipo . COMA ID COIZQ exp CODER
    (31) ciclo_tipo -> ciclo_tipo . COMA ID IGUAL exp
    (32) ciclo_tipo -> ciclo_tipo . COMA ID COIZQ exp CODER IGUAL exp

    PYC             reduce using rule 22 (var_op -> tipo ciclo_tipo .)
    COMA            shift and go to state 70


state 54

    (48) func -> acceso tipo ID . params cuerpo_func
    (25) ciclo_tipo -> ID .
    (26) ciclo_tipo -> ID . COIZQ exp CODER
    (29) ciclo_tipo -> ID . IGUAL exp
    (30) ciclo_tipo -> ID . COIZQ exp CODER IGUAL exp
    (51) params -> . PIZQ params_ciclo PDER
    (52) params -> . PIZQ PDER

    COMA            reduce using rule 25 (ciclo_tipo -> ID .)
    PYC             reduce using rule 25 (ciclo_tipo -> ID .)
    COIZQ           shift and go to state 73
    IGUAL           shift and go to state 71
    PIZQ            shift and go to state 67

    params                         shift and go to state 72

state 55

    (18) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .

    $end            reduce using rule 18 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .)


state 56

    (17) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main . LLDER

    LLDER           shift and go to state 74


state 57

    (14) ciclo_vars -> ciclo_vars acceso vars .

    LLDER           reduce using rule 14 (ciclo_vars -> ciclo_vars acceso vars .)
    HIDDEN          reduce using rule 14 (ciclo_vars -> ciclo_vars acceso vars .)
    VISIBLE         reduce using rule 14 (ciclo_vars -> ciclo_vars acceso vars .)


state 58

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER .

    CLASS           reduce using rule 7 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER .)


state 59

    (48) func -> acceso . tipo ID params cuerpo_func
    (49) func -> acceso . WITHOUT ID params cuerpo_func
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING

    WITHOUT         shift and go to state 60
    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37

    tipo                           shift and go to state 47

state 60

    (49) func -> acceso WITHOUT . ID params cuerpo_func

    ID              shift and go to state 50


state 61

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER .

    CLASS           reduce using rule 6 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER .)


state 62

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func . LLDER
    (16) ciclo_func -> ciclo_func . func
    (48) func -> . acceso tipo ID params cuerpo_func
    (49) func -> . acceso WITHOUT ID params cuerpo_func
    (46) acceso -> . HIDDEN
    (47) acceso -> . VISIBLE

    LLDER           shift and go to state 75
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 20

    acceso                         shift and go to state 59
    func                           shift and go to state 27

state 63

    (14) ciclo_vars -> ciclo_vars acceso . vars
    (48) func -> acceso . tipo ID params cuerpo_func
    (49) func -> acceso . WITHOUT ID params cuerpo_func
    (21) vars -> . var_op PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (22) var_op -> . tipo ciclo_tipo
    (23) var_op -> . ID revisarExistenciaClase ciclo_id

    WITHOUT         shift and go to state 60
    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37
    ID              shift and go to state 31

    vars                           shift and go to state 57
    tipo                           shift and go to state 38
    var_op                         shift and go to state 36

state 64

    (48) func -> acceso tipo ID . params cuerpo_func
    (51) params -> . PIZQ params_ciclo PDER
    (52) params -> . PIZQ PDER

    PIZQ            shift and go to state 67

    params                         shift and go to state 72

state 65

    (23) var_op -> ID revisarExistenciaClase ciclo_id .
    (35) ciclo_id -> ciclo_id . COMA ID
    (36) ciclo_id -> ciclo_id . COMA ID COIZQ exp CODER
    (39) ciclo_id -> ciclo_id . COMA ID IGUAL NEW ID PIZQ PDER
    (40) ciclo_id -> ciclo_id . COMA ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER

    PYC             reduce using rule 23 (var_op -> ID revisarExistenciaClase ciclo_id .)
    COMA            shift and go to state 76


state 66

    (33) ciclo_id -> ID .
    (34) ciclo_id -> ID . COIZQ exp CODER
    (37) ciclo_id -> ID . IGUAL NEW ID PIZQ PDER
    (38) ciclo_id -> ID . COIZQ exp CODER IGUAL NEW ID PIZQ PDER

    COMA            reduce using rule 33 (ciclo_id -> ID .)
    PYC             reduce using rule 33 (ciclo_id -> ID .)
    COIZQ           shift and go to state 78
    IGUAL           shift and go to state 77


state 67

    (51) params -> PIZQ . params_ciclo PDER
    (52) params -> PIZQ . PDER
    (53) params_ciclo -> . tipo ID
    (54) params_ciclo -> . params_ciclo COMA tipo ID
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING

    PDER            shift and go to state 81
    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37

    tipo                           shift and go to state 79
    params_ciclo                   shift and go to state 80

state 68

    (49) func -> acceso WITHOUT ID params . cuerpo_func
    (55) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (56) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (57) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (58) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 82

    cuerpo_func                    shift and go to state 83

state 69

    (50) main -> acceso WITHOUT MAIN PIZQ . PDER cuerpo_func

    PDER            shift and go to state 84


state 70

    (27) ciclo_tipo -> ciclo_tipo COMA . ID
    (28) ciclo_tipo -> ciclo_tipo COMA . ID COIZQ exp CODER
    (31) ciclo_tipo -> ciclo_tipo COMA . ID IGUAL exp
    (32) ciclo_tipo -> ciclo_tipo COMA . ID COIZQ exp CODER IGUAL exp

    ID              shift and go to state 85


state 71

    (29) ciclo_tipo -> ID IGUAL . exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 100
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 72

    (48) func -> acceso tipo ID params . cuerpo_func
    (55) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (56) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (57) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (58) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 82

    cuerpo_func                    shift and go to state 102

state 73

    (26) ciclo_tipo -> ID COIZQ . exp CODER
    (30) ciclo_tipo -> ID COIZQ . exp CODER IGUAL exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 103
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 74

    (17) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .

    $end            reduce using rule 17 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .)


state 75

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER .

    CLASS           reduce using rule 5 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER .)


state 76

    (35) ciclo_id -> ciclo_id COMA . ID
    (36) ciclo_id -> ciclo_id COMA . ID COIZQ exp CODER
    (39) ciclo_id -> ciclo_id COMA . ID IGUAL NEW ID PIZQ PDER
    (40) ciclo_id -> ciclo_id COMA . ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER

    ID              shift and go to state 104


state 77

    (37) ciclo_id -> ID IGUAL . NEW ID PIZQ PDER

    NEW             shift and go to state 105


state 78

    (34) ciclo_id -> ID COIZQ . exp CODER
    (38) ciclo_id -> ID COIZQ . exp CODER IGUAL NEW ID PIZQ PDER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 106
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 79

    (53) params_ciclo -> tipo . ID

    ID              shift and go to state 107


state 80

    (51) params -> PIZQ params_ciclo . PDER
    (54) params_ciclo -> params_ciclo . COMA tipo ID

    PDER            shift and go to state 108
    COMA            shift and go to state 109


state 81

    (52) params -> PIZQ PDER .

    LLIZQ           reduce using rule 52 (params -> PIZQ PDER .)


state 82

    (55) cuerpo_func -> LLIZQ . ciclo_vars_func ciclo_estatuto LLDER
    (56) cuerpo_func -> LLIZQ . ciclo_vars_func LLDER
    (57) cuerpo_func -> LLIZQ . ciclo_estatuto LLDER
    (58) cuerpo_func -> LLIZQ . LLDER
    (59) ciclo_vars_func -> . vars
    (60) ciclo_vars_func -> . ciclo_vars_func vars
    (61) ciclo_estatuto -> . estatuto
    (62) ciclo_estatuto -> . ciclo_estatuto estatuto
    (21) vars -> . var_op PYC
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (22) var_op -> . tipo ciclo_tipo
    (23) var_op -> . ID revisarExistenciaClase ciclo_id
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 120
    ID              shift and go to state 123
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37
    IF              shift and go to state 124

    atom                           shift and go to state 112
    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    vars                           shift and go to state 111
    ciclo_estatuto                 shift and go to state 127
    estatuto                       shift and go to state 116
    tipo                           shift and go to state 115
    ciclo_vars_func                shift and go to state 117
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    var_op                         shift and go to state 36
    llamada_func                   shift and go to state 122
    lectura                        shift and go to state 119
    ciclo_cond                     shift and go to state 128
    escritura                      shift and go to state 131

state 83

    (49) func -> acceso WITHOUT ID params cuerpo_func .

    LLDER           reduce using rule 49 (func -> acceso WITHOUT ID params cuerpo_func .)
    HIDDEN          reduce using rule 49 (func -> acceso WITHOUT ID params cuerpo_func .)
    VISIBLE         reduce using rule 49 (func -> acceso WITHOUT ID params cuerpo_func .)


state 84

    (50) main -> acceso WITHOUT MAIN PIZQ PDER . cuerpo_func
    (55) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (56) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (57) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (58) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 82

    cuerpo_func                    shift and go to state 132

state 85

    (27) ciclo_tipo -> ciclo_tipo COMA ID .
    (28) ciclo_tipo -> ciclo_tipo COMA ID . COIZQ exp CODER
    (31) ciclo_tipo -> ciclo_tipo COMA ID . IGUAL exp
    (32) ciclo_tipo -> ciclo_tipo COMA ID . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 27 (ciclo_tipo -> ciclo_tipo COMA ID .)
    PYC             reduce using rule 27 (ciclo_tipo -> ciclo_tipo COMA ID .)
    COIZQ           shift and go to state 134
    IGUAL           shift and go to state 133


state 86

    (84) exp -> PIZQ . exp PDER
    (85) exp -> PIZQ . exp PDER ope exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 135
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 87

    (93) opciones -> cte_bool .

    MAS             reduce using rule 93 (opciones -> cte_bool .)
    MENOS           reduce using rule 93 (opciones -> cte_bool .)
    MOD             reduce using rule 93 (opciones -> cte_bool .)
    ENTRE           reduce using rule 93 (opciones -> cte_bool .)
    POR             reduce using rule 93 (opciones -> cte_bool .)
    IGUALC          reduce using rule 93 (opciones -> cte_bool .)
    MENOR           reduce using rule 93 (opciones -> cte_bool .)
    MENORIGUAL      reduce using rule 93 (opciones -> cte_bool .)
    MAYOR           reduce using rule 93 (opciones -> cte_bool .)
    MAYORIGUAL      reduce using rule 93 (opciones -> cte_bool .)
    NOTIGUAL        reduce using rule 93 (opciones -> cte_bool .)
    AND             reduce using rule 93 (opciones -> cte_bool .)
    OR              reduce using rule 93 (opciones -> cte_bool .)
    PDER            reduce using rule 93 (opciones -> cte_bool .)
    COMA            reduce using rule 93 (opciones -> cte_bool .)
    CODER           reduce using rule 93 (opciones -> cte_bool .)
    PYC             reduce using rule 93 (opciones -> cte_bool .)


state 88

    (80) cte_bool -> TRUE .

    MAS             reduce using rule 80 (cte_bool -> TRUE .)
    MENOS           reduce using rule 80 (cte_bool -> TRUE .)
    MOD             reduce using rule 80 (cte_bool -> TRUE .)
    ENTRE           reduce using rule 80 (cte_bool -> TRUE .)
    POR             reduce using rule 80 (cte_bool -> TRUE .)
    IGUALC          reduce using rule 80 (cte_bool -> TRUE .)
    MENOR           reduce using rule 80 (cte_bool -> TRUE .)
    MENORIGUAL      reduce using rule 80 (cte_bool -> TRUE .)
    MAYOR           reduce using rule 80 (cte_bool -> TRUE .)
    MAYORIGUAL      reduce using rule 80 (cte_bool -> TRUE .)
    NOTIGUAL        reduce using rule 80 (cte_bool -> TRUE .)
    AND             reduce using rule 80 (cte_bool -> TRUE .)
    OR              reduce using rule 80 (cte_bool -> TRUE .)
    COMA            reduce using rule 80 (cte_bool -> TRUE .)
    PYC             reduce using rule 80 (cte_bool -> TRUE .)
    CODER           reduce using rule 80 (cte_bool -> TRUE .)
    PDER            reduce using rule 80 (cte_bool -> TRUE .)


state 89

    (91) opciones -> CTE_NUMERAL .

    MAS             reduce using rule 91 (opciones -> CTE_NUMERAL .)
    MENOS           reduce using rule 91 (opciones -> CTE_NUMERAL .)
    MOD             reduce using rule 91 (opciones -> CTE_NUMERAL .)
    ENTRE           reduce using rule 91 (opciones -> CTE_NUMERAL .)
    POR             reduce using rule 91 (opciones -> CTE_NUMERAL .)
    IGUALC          reduce using rule 91 (opciones -> CTE_NUMERAL .)
    MENOR           reduce using rule 91 (opciones -> CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 91 (opciones -> CTE_NUMERAL .)
    MAYOR           reduce using rule 91 (opciones -> CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 91 (opciones -> CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 91 (opciones -> CTE_NUMERAL .)
    AND             reduce using rule 91 (opciones -> CTE_NUMERAL .)
    OR              reduce using rule 91 (opciones -> CTE_NUMERAL .)
    PDER            reduce using rule 91 (opciones -> CTE_NUMERAL .)
    COMA            reduce using rule 91 (opciones -> CTE_NUMERAL .)
    CODER           reduce using rule 91 (opciones -> CTE_NUMERAL .)
    PYC             reduce using rule 91 (opciones -> CTE_NUMERAL .)


state 90

    (92) opciones -> CTE_REAL .

    MAS             reduce using rule 92 (opciones -> CTE_REAL .)
    MENOS           reduce using rule 92 (opciones -> CTE_REAL .)
    MOD             reduce using rule 92 (opciones -> CTE_REAL .)
    ENTRE           reduce using rule 92 (opciones -> CTE_REAL .)
    POR             reduce using rule 92 (opciones -> CTE_REAL .)
    IGUALC          reduce using rule 92 (opciones -> CTE_REAL .)
    MENOR           reduce using rule 92 (opciones -> CTE_REAL .)
    MENORIGUAL      reduce using rule 92 (opciones -> CTE_REAL .)
    MAYOR           reduce using rule 92 (opciones -> CTE_REAL .)
    MAYORIGUAL      reduce using rule 92 (opciones -> CTE_REAL .)
    NOTIGUAL        reduce using rule 92 (opciones -> CTE_REAL .)
    AND             reduce using rule 92 (opciones -> CTE_REAL .)
    OR              reduce using rule 92 (opciones -> CTE_REAL .)
    PDER            reduce using rule 92 (opciones -> CTE_REAL .)
    COMA            reduce using rule 92 (opciones -> CTE_REAL .)
    CODER           reduce using rule 92 (opciones -> CTE_REAL .)
    PYC             reduce using rule 92 (opciones -> CTE_REAL .)


state 91

    (90) opciones -> CTE_CHAR .

    MAS             reduce using rule 90 (opciones -> CTE_CHAR .)
    MENOS           reduce using rule 90 (opciones -> CTE_CHAR .)
    MOD             reduce using rule 90 (opciones -> CTE_CHAR .)
    ENTRE           reduce using rule 90 (opciones -> CTE_CHAR .)
    POR             reduce using rule 90 (opciones -> CTE_CHAR .)
    IGUALC          reduce using rule 90 (opciones -> CTE_CHAR .)
    MENOR           reduce using rule 90 (opciones -> CTE_CHAR .)
    MENORIGUAL      reduce using rule 90 (opciones -> CTE_CHAR .)
    MAYOR           reduce using rule 90 (opciones -> CTE_CHAR .)
    MAYORIGUAL      reduce using rule 90 (opciones -> CTE_CHAR .)
    NOTIGUAL        reduce using rule 90 (opciones -> CTE_CHAR .)
    AND             reduce using rule 90 (opciones -> CTE_CHAR .)
    OR              reduce using rule 90 (opciones -> CTE_CHAR .)
    PDER            reduce using rule 90 (opciones -> CTE_CHAR .)
    COMA            reduce using rule 90 (opciones -> CTE_CHAR .)
    CODER           reduce using rule 90 (opciones -> CTE_CHAR .)
    PYC             reduce using rule 90 (opciones -> CTE_CHAR .)


state 92

    (82) exp -> opciones . ope exp
    (83) exp -> opciones .
    (100) ope -> . MAS
    (101) ope -> . MENOS
    (102) ope -> . MOD
    (103) ope -> . ENTRE
    (104) ope -> . POR
    (105) ope -> . IGUALC
    (106) ope -> . MENOR
    (107) ope -> . MENORIGUAL
    (108) ope -> . MAYOR
    (109) ope -> . MAYORIGUAL
    (110) ope -> . NOTIGUAL
    (111) ope -> . AND
    (112) ope -> . OR

    CODER           reduce using rule 83 (exp -> opciones .)
    PDER            reduce using rule 83 (exp -> opciones .)
    COMA            reduce using rule 83 (exp -> opciones .)
    PYC             reduce using rule 83 (exp -> opciones .)
    MAS             shift and go to state 137
    MENOS           shift and go to state 144
    MOD             shift and go to state 149
    ENTRE           shift and go to state 139
    POR             shift and go to state 140
    IGUALC          shift and go to state 147
    MENOR           shift and go to state 143
    MENORIGUAL      shift and go to state 146
    MAYOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 145
    NOTIGUAL        shift and go to state 138
    AND             shift and go to state 136
    OR              shift and go to state 141

    ope                            shift and go to state 142

state 93

    (89) opciones -> CTE_STR .

    MAS             reduce using rule 89 (opciones -> CTE_STR .)
    MENOS           reduce using rule 89 (opciones -> CTE_STR .)
    MOD             reduce using rule 89 (opciones -> CTE_STR .)
    ENTRE           reduce using rule 89 (opciones -> CTE_STR .)
    POR             reduce using rule 89 (opciones -> CTE_STR .)
    IGUALC          reduce using rule 89 (opciones -> CTE_STR .)
    MENOR           reduce using rule 89 (opciones -> CTE_STR .)
    MENORIGUAL      reduce using rule 89 (opciones -> CTE_STR .)
    MAYOR           reduce using rule 89 (opciones -> CTE_STR .)
    MAYORIGUAL      reduce using rule 89 (opciones -> CTE_STR .)
    NOTIGUAL        reduce using rule 89 (opciones -> CTE_STR .)
    AND             reduce using rule 89 (opciones -> CTE_STR .)
    OR              reduce using rule 89 (opciones -> CTE_STR .)
    PDER            reduce using rule 89 (opciones -> CTE_STR .)
    COMA            reduce using rule 89 (opciones -> CTE_STR .)
    CODER           reduce using rule 89 (opciones -> CTE_STR .)
    PYC             reduce using rule 89 (opciones -> CTE_STR .)


state 94

    (94) opciones -> atom .

    MAS             reduce using rule 94 (opciones -> atom .)
    MENOS           reduce using rule 94 (opciones -> atom .)
    MOD             reduce using rule 94 (opciones -> atom .)
    ENTRE           reduce using rule 94 (opciones -> atom .)
    POR             reduce using rule 94 (opciones -> atom .)
    IGUALC          reduce using rule 94 (opciones -> atom .)
    MENOR           reduce using rule 94 (opciones -> atom .)
    MENORIGUAL      reduce using rule 94 (opciones -> atom .)
    MAYOR           reduce using rule 94 (opciones -> atom .)
    MAYORIGUAL      reduce using rule 94 (opciones -> atom .)
    NOTIGUAL        reduce using rule 94 (opciones -> atom .)
    AND             reduce using rule 94 (opciones -> atom .)
    OR              reduce using rule 94 (opciones -> atom .)
    PDER            reduce using rule 94 (opciones -> atom .)
    COMA            reduce using rule 94 (opciones -> atom .)
    CODER           reduce using rule 94 (opciones -> atom .)
    PYC             reduce using rule 94 (opciones -> atom .)


state 95

    (95) opciones -> llamada_func .

    MAS             reduce using rule 95 (opciones -> llamada_func .)
    MENOS           reduce using rule 95 (opciones -> llamada_func .)
    MOD             reduce using rule 95 (opciones -> llamada_func .)
    ENTRE           reduce using rule 95 (opciones -> llamada_func .)
    POR             reduce using rule 95 (opciones -> llamada_func .)
    IGUALC          reduce using rule 95 (opciones -> llamada_func .)
    MENOR           reduce using rule 95 (opciones -> llamada_func .)
    MENORIGUAL      reduce using rule 95 (opciones -> llamada_func .)
    MAYOR           reduce using rule 95 (opciones -> llamada_func .)
    MAYORIGUAL      reduce using rule 95 (opciones -> llamada_func .)
    NOTIGUAL        reduce using rule 95 (opciones -> llamada_func .)
    AND             reduce using rule 95 (opciones -> llamada_func .)
    OR              reduce using rule 95 (opciones -> llamada_func .)
    PDER            reduce using rule 95 (opciones -> llamada_func .)
    COMA            reduce using rule 95 (opciones -> llamada_func .)
    CODER           reduce using rule 95 (opciones -> llamada_func .)
    PYC             reduce using rule 95 (opciones -> llamada_func .)


state 96

    (119) atom -> ID . PUNTO ID COIZQ exp CODER
    (120) atom -> ID . PUNTO ID
    (121) atom -> ID . COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID . COIZQ exp CODER PUNTO ID
    (123) atom -> ID .
    (124) atom -> ID . COIZQ exp CODER
    (70) llamada_func -> ID . PIZQ exp_ciclo PDER
    (72) llamada_func -> ID . PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PIZQ PDER
    (76) llamada_func -> ID . PUNTO ID PIZQ PDER
    (77) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ PDER

    PUNTO           shift and go to state 151
    COIZQ           shift and go to state 152
    MAS             reduce using rule 123 (atom -> ID .)
    MENOS           reduce using rule 123 (atom -> ID .)
    MOD             reduce using rule 123 (atom -> ID .)
    ENTRE           reduce using rule 123 (atom -> ID .)
    POR             reduce using rule 123 (atom -> ID .)
    IGUALC          reduce using rule 123 (atom -> ID .)
    MENOR           reduce using rule 123 (atom -> ID .)
    MENORIGUAL      reduce using rule 123 (atom -> ID .)
    MAYOR           reduce using rule 123 (atom -> ID .)
    MAYORIGUAL      reduce using rule 123 (atom -> ID .)
    NOTIGUAL        reduce using rule 123 (atom -> ID .)
    AND             reduce using rule 123 (atom -> ID .)
    OR              reduce using rule 123 (atom -> ID .)
    PYC             reduce using rule 123 (atom -> ID .)
    PDER            reduce using rule 123 (atom -> ID .)
    COMA            reduce using rule 123 (atom -> ID .)
    CODER           reduce using rule 123 (atom -> ID .)
    PIZQ            shift and go to state 150


state 97

    (81) cte_bool -> FALSE .

    MAS             reduce using rule 81 (cte_bool -> FALSE .)
    MENOS           reduce using rule 81 (cte_bool -> FALSE .)
    MOD             reduce using rule 81 (cte_bool -> FALSE .)
    ENTRE           reduce using rule 81 (cte_bool -> FALSE .)
    POR             reduce using rule 81 (cte_bool -> FALSE .)
    IGUALC          reduce using rule 81 (cte_bool -> FALSE .)
    MENOR           reduce using rule 81 (cte_bool -> FALSE .)
    MENORIGUAL      reduce using rule 81 (cte_bool -> FALSE .)
    MAYOR           reduce using rule 81 (cte_bool -> FALSE .)
    MAYORIGUAL      reduce using rule 81 (cte_bool -> FALSE .)
    NOTIGUAL        reduce using rule 81 (cte_bool -> FALSE .)
    AND             reduce using rule 81 (cte_bool -> FALSE .)
    OR              reduce using rule 81 (cte_bool -> FALSE .)
    COMA            reduce using rule 81 (cte_bool -> FALSE .)
    PYC             reduce using rule 81 (cte_bool -> FALSE .)
    CODER           reduce using rule 81 (cte_bool -> FALSE .)
    PDER            reduce using rule 81 (cte_bool -> FALSE .)


state 98

    (125) atom -> THIS . PUNTO ID
    (126) atom -> THIS . PUNTO ID COIZQ exp CODER
    (71) llamada_func -> THIS . PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> THIS . PUNTO ID PIZQ PDER

    PUNTO           shift and go to state 153


state 99

    (86) exp -> MENOS . PIZQ exp PDER ope exp
    (88) exp -> MENOS . PIZQ exp PDER
    (96) opciones -> MENOS . CTE_NUMERAL
    (97) opciones -> MENOS . CTE_REAL
    (98) opciones -> MENOS . atom
    (99) opciones -> MENOS . llamada_func
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 154
    CTE_NUMERAL     shift and go to state 158
    CTE_REAL        shift and go to state 155
    ID              shift and go to state 96
    THIS            shift and go to state 98

    llamada_func                   shift and go to state 157
    atom                           shift and go to state 156

state 100

    (29) ciclo_tipo -> ID IGUAL exp .

    COMA            reduce using rule 29 (ciclo_tipo -> ID IGUAL exp .)
    PYC             reduce using rule 29 (ciclo_tipo -> ID IGUAL exp .)


state 101

    (87) exp -> NOT . exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 159
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 102

    (48) func -> acceso tipo ID params cuerpo_func .

    LLDER           reduce using rule 48 (func -> acceso tipo ID params cuerpo_func .)
    HIDDEN          reduce using rule 48 (func -> acceso tipo ID params cuerpo_func .)
    VISIBLE         reduce using rule 48 (func -> acceso tipo ID params cuerpo_func .)


state 103

    (26) ciclo_tipo -> ID COIZQ exp . CODER
    (30) ciclo_tipo -> ID COIZQ exp . CODER IGUAL exp

    CODER           shift and go to state 160


state 104

    (35) ciclo_id -> ciclo_id COMA ID .
    (36) ciclo_id -> ciclo_id COMA ID . COIZQ exp CODER
    (39) ciclo_id -> ciclo_id COMA ID . IGUAL NEW ID PIZQ PDER
    (40) ciclo_id -> ciclo_id COMA ID . COIZQ exp CODER IGUAL NEW ID PIZQ PDER

    COMA            reduce using rule 35 (ciclo_id -> ciclo_id COMA ID .)
    PYC             reduce using rule 35 (ciclo_id -> ciclo_id COMA ID .)
    COIZQ           shift and go to state 162
    IGUAL           shift and go to state 161


state 105

    (37) ciclo_id -> ID IGUAL NEW . ID PIZQ PDER

    ID              shift and go to state 163


state 106

    (34) ciclo_id -> ID COIZQ exp . CODER
    (38) ciclo_id -> ID COIZQ exp . CODER IGUAL NEW ID PIZQ PDER

    CODER           shift and go to state 164


state 107

    (53) params_ciclo -> tipo ID .

    PDER            reduce using rule 53 (params_ciclo -> tipo ID .)
    COMA            reduce using rule 53 (params_ciclo -> tipo ID .)


state 108

    (51) params -> PIZQ params_ciclo PDER .

    LLIZQ           reduce using rule 51 (params -> PIZQ params_ciclo PDER .)


state 109

    (54) params_ciclo -> params_ciclo COMA . tipo ID
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING

    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37

    tipo                           shift and go to state 165

state 110

    (113) return -> RETURN . exp PYC
    (114) return -> RETURN . PYC
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PYC             shift and go to state 167
    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 166
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 111

    (59) ciclo_vars_func -> vars .

    LLDER           reduce using rule 59 (ciclo_vars_func -> vars .)
    ID              reduce using rule 59 (ciclo_vars_func -> vars .)
    WHILE           reduce using rule 59 (ciclo_vars_func -> vars .)
    OUTPUT          reduce using rule 59 (ciclo_vars_func -> vars .)
    INPUT           reduce using rule 59 (ciclo_vars_func -> vars .)
    THIS            reduce using rule 59 (ciclo_vars_func -> vars .)
    RETURN          reduce using rule 59 (ciclo_vars_func -> vars .)
    NUMERAL         reduce using rule 59 (ciclo_vars_func -> vars .)
    REAL            reduce using rule 59 (ciclo_vars_func -> vars .)
    BOOL            reduce using rule 59 (ciclo_vars_func -> vars .)
    CHAR            reduce using rule 59 (ciclo_vars_func -> vars .)
    STRING          reduce using rule 59 (ciclo_vars_func -> vars .)
    IF              reduce using rule 59 (ciclo_vars_func -> vars .)


state 112

    (117) asignacion -> atom . IGUAL exp PYC
    (118) asignacion -> atom . IGUAL NEW ID PIZQ PDER PYC

    IGUAL           shift and go to state 168


state 113

    (115) while -> WHILE . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> WHILE . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 169


state 114

    (69) estatuto -> return .

    LLDER           reduce using rule 69 (estatuto -> return .)
    WHILE           reduce using rule 69 (estatuto -> return .)
    OUTPUT          reduce using rule 69 (estatuto -> return .)
    INPUT           reduce using rule 69 (estatuto -> return .)
    ID              reduce using rule 69 (estatuto -> return .)
    THIS            reduce using rule 69 (estatuto -> return .)
    RETURN          reduce using rule 69 (estatuto -> return .)
    IF              reduce using rule 69 (estatuto -> return .)


state 115

    (22) var_op -> tipo . ciclo_tipo
    (25) ciclo_tipo -> . ID
    (26) ciclo_tipo -> . ID COIZQ exp CODER
    (27) ciclo_tipo -> . ciclo_tipo COMA ID
    (28) ciclo_tipo -> . ciclo_tipo COMA ID COIZQ exp CODER
    (29) ciclo_tipo -> . ID IGUAL exp
    (30) ciclo_tipo -> . ID COIZQ exp CODER IGUAL exp
    (31) ciclo_tipo -> . ciclo_tipo COMA ID IGUAL exp
    (32) ciclo_tipo -> . ciclo_tipo COMA ID COIZQ exp CODER IGUAL exp

    ID              shift and go to state 170

    ciclo_tipo                     shift and go to state 53

state 116

    (61) ciclo_estatuto -> estatuto .

    LLDER           reduce using rule 61 (ciclo_estatuto -> estatuto .)
    WHILE           reduce using rule 61 (ciclo_estatuto -> estatuto .)
    OUTPUT          reduce using rule 61 (ciclo_estatuto -> estatuto .)
    INPUT           reduce using rule 61 (ciclo_estatuto -> estatuto .)
    ID              reduce using rule 61 (ciclo_estatuto -> estatuto .)
    THIS            reduce using rule 61 (ciclo_estatuto -> estatuto .)
    RETURN          reduce using rule 61 (ciclo_estatuto -> estatuto .)
    IF              reduce using rule 61 (ciclo_estatuto -> estatuto .)


state 117

    (55) cuerpo_func -> LLIZQ ciclo_vars_func . ciclo_estatuto LLDER
    (56) cuerpo_func -> LLIZQ ciclo_vars_func . LLDER
    (60) ciclo_vars_func -> ciclo_vars_func . vars
    (61) ciclo_estatuto -> . estatuto
    (62) ciclo_estatuto -> . ciclo_estatuto estatuto
    (21) vars -> . var_op PYC
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (22) var_op -> . tipo ciclo_tipo
    (23) var_op -> . ID revisarExistenciaClase ciclo_id
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (41) tipo -> . NUMERAL
    (42) tipo -> . REAL
    (43) tipo -> . BOOL
    (44) tipo -> . CHAR
    (45) tipo -> . STRING
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 172
    ID              shift and go to state 123
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    NUMERAL         shift and go to state 35
    REAL            shift and go to state 29
    BOOL            shift and go to state 34
    CHAR            shift and go to state 32
    STRING          shift and go to state 37
    IF              shift and go to state 124

    atom                           shift and go to state 112
    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    vars                           shift and go to state 171
    ciclo_estatuto                 shift and go to state 173
    estatuto                       shift and go to state 116
    tipo                           shift and go to state 115
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    var_op                         shift and go to state 36
    llamada_func                   shift and go to state 122
    lectura                        shift and go to state 119
    ciclo_cond                     shift and go to state 128
    escritura                      shift and go to state 131

state 118

    (65) estatuto -> condicion .

    LLDER           reduce using rule 65 (estatuto -> condicion .)
    WHILE           reduce using rule 65 (estatuto -> condicion .)
    OUTPUT          reduce using rule 65 (estatuto -> condicion .)
    INPUT           reduce using rule 65 (estatuto -> condicion .)
    ID              reduce using rule 65 (estatuto -> condicion .)
    THIS            reduce using rule 65 (estatuto -> condicion .)
    RETURN          reduce using rule 65 (estatuto -> condicion .)
    IF              reduce using rule 65 (estatuto -> condicion .)


state 119

    (67) estatuto -> lectura .

    LLDER           reduce using rule 67 (estatuto -> lectura .)
    WHILE           reduce using rule 67 (estatuto -> lectura .)
    OUTPUT          reduce using rule 67 (estatuto -> lectura .)
    INPUT           reduce using rule 67 (estatuto -> lectura .)
    ID              reduce using rule 67 (estatuto -> lectura .)
    THIS            reduce using rule 67 (estatuto -> lectura .)
    RETURN          reduce using rule 67 (estatuto -> lectura .)
    IF              reduce using rule 67 (estatuto -> lectura .)


state 120

    (58) cuerpo_func -> LLIZQ LLDER .

    HIDDEN          reduce using rule 58 (cuerpo_func -> LLIZQ LLDER .)
    VISIBLE         reduce using rule 58 (cuerpo_func -> LLIZQ LLDER .)
    LLDER           reduce using rule 58 (cuerpo_func -> LLIZQ LLDER .)


state 121

    (133) lectura -> INPUT . PIZQ atom PDER PYC

    PIZQ            shift and go to state 174


state 122

    (68) estatuto -> llamada_func . PYC

    PYC             shift and go to state 175


state 123

    (23) var_op -> ID . revisarExistenciaClase ciclo_id
    (70) llamada_func -> ID . PIZQ exp_ciclo PDER
    (72) llamada_func -> ID . PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PIZQ PDER
    (76) llamada_func -> ID . PUNTO ID PIZQ PDER
    (77) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ PDER
    (119) atom -> ID . PUNTO ID COIZQ exp CODER
    (120) atom -> ID . PUNTO ID
    (121) atom -> ID . COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID . COIZQ exp CODER PUNTO ID
    (123) atom -> ID .
    (124) atom -> ID . COIZQ exp CODER
    (24) revisarExistenciaClase -> .

    PIZQ            shift and go to state 150
    PUNTO           shift and go to state 177
    COIZQ           shift and go to state 176
    IGUAL           reduce using rule 123 (atom -> ID .)
    ID              reduce using rule 24 (revisarExistenciaClase -> .)

    revisarExistenciaClase         shift and go to state 49

state 124

    (129) ciclo_cond -> IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 178


state 125

    (64) estatuto -> asignacion .

    LLDER           reduce using rule 64 (estatuto -> asignacion .)
    WHILE           reduce using rule 64 (estatuto -> asignacion .)
    OUTPUT          reduce using rule 64 (estatuto -> asignacion .)
    INPUT           reduce using rule 64 (estatuto -> asignacion .)
    ID              reduce using rule 64 (estatuto -> asignacion .)
    THIS            reduce using rule 64 (estatuto -> asignacion .)
    RETURN          reduce using rule 64 (estatuto -> asignacion .)
    IF              reduce using rule 64 (estatuto -> asignacion .)


state 126

    (71) llamada_func -> THIS . PUNTO ID PIZQ exp_ciclo PDER
    (75) llamada_func -> THIS . PUNTO ID PIZQ PDER
    (125) atom -> THIS . PUNTO ID
    (126) atom -> THIS . PUNTO ID COIZQ exp CODER

    PUNTO           shift and go to state 179


state 127

    (57) cuerpo_func -> LLIZQ ciclo_estatuto . LLDER
    (62) ciclo_estatuto -> ciclo_estatuto . estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 181
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    estatuto                       shift and go to state 180
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    lectura                        shift and go to state 119
    escritura                      shift and go to state 131

state 128

    (127) condicion -> ciclo_cond . ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> ciclo_cond . ELSE LLIZQ LLDER
    (131) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ LLDER

    ELSE            shift and go to state 183


state 129

    (63) estatuto -> while .

    LLDER           reduce using rule 63 (estatuto -> while .)
    WHILE           reduce using rule 63 (estatuto -> while .)
    OUTPUT          reduce using rule 63 (estatuto -> while .)
    INPUT           reduce using rule 63 (estatuto -> while .)
    ID              reduce using rule 63 (estatuto -> while .)
    THIS            reduce using rule 63 (estatuto -> while .)
    RETURN          reduce using rule 63 (estatuto -> while .)
    IF              reduce using rule 63 (estatuto -> while .)


state 130

    (134) escritura -> OUTPUT . PIZQ exp PDER PYC

    PIZQ            shift and go to state 184


state 131

    (66) estatuto -> escritura .

    LLDER           reduce using rule 66 (estatuto -> escritura .)
    WHILE           reduce using rule 66 (estatuto -> escritura .)
    OUTPUT          reduce using rule 66 (estatuto -> escritura .)
    INPUT           reduce using rule 66 (estatuto -> escritura .)
    ID              reduce using rule 66 (estatuto -> escritura .)
    THIS            reduce using rule 66 (estatuto -> escritura .)
    RETURN          reduce using rule 66 (estatuto -> escritura .)
    IF              reduce using rule 66 (estatuto -> escritura .)


state 132

    (50) main -> acceso WITHOUT MAIN PIZQ PDER cuerpo_func .

    LLDER           reduce using rule 50 (main -> acceso WITHOUT MAIN PIZQ PDER cuerpo_func .)


state 133

    (31) ciclo_tipo -> ciclo_tipo COMA ID IGUAL . exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 185
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 134

    (28) ciclo_tipo -> ciclo_tipo COMA ID COIZQ . exp CODER
    (32) ciclo_tipo -> ciclo_tipo COMA ID COIZQ . exp CODER IGUAL exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 186
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 135

    (84) exp -> PIZQ exp . PDER
    (85) exp -> PIZQ exp . PDER ope exp

    PDER            shift and go to state 187


state 136

    (111) ope -> AND .

    PIZQ            reduce using rule 111 (ope -> AND .)
    MENOS           reduce using rule 111 (ope -> AND .)
    NOT             reduce using rule 111 (ope -> AND .)
    CTE_STR         reduce using rule 111 (ope -> AND .)
    CTE_CHAR        reduce using rule 111 (ope -> AND .)
    CTE_NUMERAL     reduce using rule 111 (ope -> AND .)
    CTE_REAL        reduce using rule 111 (ope -> AND .)
    TRUE            reduce using rule 111 (ope -> AND .)
    FALSE           reduce using rule 111 (ope -> AND .)
    ID              reduce using rule 111 (ope -> AND .)
    THIS            reduce using rule 111 (ope -> AND .)


state 137

    (100) ope -> MAS .

    PIZQ            reduce using rule 100 (ope -> MAS .)
    MENOS           reduce using rule 100 (ope -> MAS .)
    NOT             reduce using rule 100 (ope -> MAS .)
    CTE_STR         reduce using rule 100 (ope -> MAS .)
    CTE_CHAR        reduce using rule 100 (ope -> MAS .)
    CTE_NUMERAL     reduce using rule 100 (ope -> MAS .)
    CTE_REAL        reduce using rule 100 (ope -> MAS .)
    TRUE            reduce using rule 100 (ope -> MAS .)
    FALSE           reduce using rule 100 (ope -> MAS .)
    ID              reduce using rule 100 (ope -> MAS .)
    THIS            reduce using rule 100 (ope -> MAS .)


state 138

    (110) ope -> NOTIGUAL .

    PIZQ            reduce using rule 110 (ope -> NOTIGUAL .)
    MENOS           reduce using rule 110 (ope -> NOTIGUAL .)
    NOT             reduce using rule 110 (ope -> NOTIGUAL .)
    CTE_STR         reduce using rule 110 (ope -> NOTIGUAL .)
    CTE_CHAR        reduce using rule 110 (ope -> NOTIGUAL .)
    CTE_NUMERAL     reduce using rule 110 (ope -> NOTIGUAL .)
    CTE_REAL        reduce using rule 110 (ope -> NOTIGUAL .)
    TRUE            reduce using rule 110 (ope -> NOTIGUAL .)
    FALSE           reduce using rule 110 (ope -> NOTIGUAL .)
    ID              reduce using rule 110 (ope -> NOTIGUAL .)
    THIS            reduce using rule 110 (ope -> NOTIGUAL .)


state 139

    (103) ope -> ENTRE .

    PIZQ            reduce using rule 103 (ope -> ENTRE .)
    MENOS           reduce using rule 103 (ope -> ENTRE .)
    NOT             reduce using rule 103 (ope -> ENTRE .)
    CTE_STR         reduce using rule 103 (ope -> ENTRE .)
    CTE_CHAR        reduce using rule 103 (ope -> ENTRE .)
    CTE_NUMERAL     reduce using rule 103 (ope -> ENTRE .)
    CTE_REAL        reduce using rule 103 (ope -> ENTRE .)
    TRUE            reduce using rule 103 (ope -> ENTRE .)
    FALSE           reduce using rule 103 (ope -> ENTRE .)
    ID              reduce using rule 103 (ope -> ENTRE .)
    THIS            reduce using rule 103 (ope -> ENTRE .)


state 140

    (104) ope -> POR .

    PIZQ            reduce using rule 104 (ope -> POR .)
    MENOS           reduce using rule 104 (ope -> POR .)
    NOT             reduce using rule 104 (ope -> POR .)
    CTE_STR         reduce using rule 104 (ope -> POR .)
    CTE_CHAR        reduce using rule 104 (ope -> POR .)
    CTE_NUMERAL     reduce using rule 104 (ope -> POR .)
    CTE_REAL        reduce using rule 104 (ope -> POR .)
    TRUE            reduce using rule 104 (ope -> POR .)
    FALSE           reduce using rule 104 (ope -> POR .)
    ID              reduce using rule 104 (ope -> POR .)
    THIS            reduce using rule 104 (ope -> POR .)


state 141

    (112) ope -> OR .

    PIZQ            reduce using rule 112 (ope -> OR .)
    MENOS           reduce using rule 112 (ope -> OR .)
    NOT             reduce using rule 112 (ope -> OR .)
    CTE_STR         reduce using rule 112 (ope -> OR .)
    CTE_CHAR        reduce using rule 112 (ope -> OR .)
    CTE_NUMERAL     reduce using rule 112 (ope -> OR .)
    CTE_REAL        reduce using rule 112 (ope -> OR .)
    TRUE            reduce using rule 112 (ope -> OR .)
    FALSE           reduce using rule 112 (ope -> OR .)
    ID              reduce using rule 112 (ope -> OR .)
    THIS            reduce using rule 112 (ope -> OR .)


state 142

    (82) exp -> opciones ope . exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 188
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 143

    (106) ope -> MENOR .

    PIZQ            reduce using rule 106 (ope -> MENOR .)
    MENOS           reduce using rule 106 (ope -> MENOR .)
    NOT             reduce using rule 106 (ope -> MENOR .)
    CTE_STR         reduce using rule 106 (ope -> MENOR .)
    CTE_CHAR        reduce using rule 106 (ope -> MENOR .)
    CTE_NUMERAL     reduce using rule 106 (ope -> MENOR .)
    CTE_REAL        reduce using rule 106 (ope -> MENOR .)
    TRUE            reduce using rule 106 (ope -> MENOR .)
    FALSE           reduce using rule 106 (ope -> MENOR .)
    ID              reduce using rule 106 (ope -> MENOR .)
    THIS            reduce using rule 106 (ope -> MENOR .)


state 144

    (101) ope -> MENOS .

    PIZQ            reduce using rule 101 (ope -> MENOS .)
    MENOS           reduce using rule 101 (ope -> MENOS .)
    NOT             reduce using rule 101 (ope -> MENOS .)
    CTE_STR         reduce using rule 101 (ope -> MENOS .)
    CTE_CHAR        reduce using rule 101 (ope -> MENOS .)
    CTE_NUMERAL     reduce using rule 101 (ope -> MENOS .)
    CTE_REAL        reduce using rule 101 (ope -> MENOS .)
    TRUE            reduce using rule 101 (ope -> MENOS .)
    FALSE           reduce using rule 101 (ope -> MENOS .)
    ID              reduce using rule 101 (ope -> MENOS .)
    THIS            reduce using rule 101 (ope -> MENOS .)


state 145

    (109) ope -> MAYORIGUAL .

    PIZQ            reduce using rule 109 (ope -> MAYORIGUAL .)
    MENOS           reduce using rule 109 (ope -> MAYORIGUAL .)
    NOT             reduce using rule 109 (ope -> MAYORIGUAL .)
    CTE_STR         reduce using rule 109 (ope -> MAYORIGUAL .)
    CTE_CHAR        reduce using rule 109 (ope -> MAYORIGUAL .)
    CTE_NUMERAL     reduce using rule 109 (ope -> MAYORIGUAL .)
    CTE_REAL        reduce using rule 109 (ope -> MAYORIGUAL .)
    TRUE            reduce using rule 109 (ope -> MAYORIGUAL .)
    FALSE           reduce using rule 109 (ope -> MAYORIGUAL .)
    ID              reduce using rule 109 (ope -> MAYORIGUAL .)
    THIS            reduce using rule 109 (ope -> MAYORIGUAL .)


state 146

    (107) ope -> MENORIGUAL .

    PIZQ            reduce using rule 107 (ope -> MENORIGUAL .)
    MENOS           reduce using rule 107 (ope -> MENORIGUAL .)
    NOT             reduce using rule 107 (ope -> MENORIGUAL .)
    CTE_STR         reduce using rule 107 (ope -> MENORIGUAL .)
    CTE_CHAR        reduce using rule 107 (ope -> MENORIGUAL .)
    CTE_NUMERAL     reduce using rule 107 (ope -> MENORIGUAL .)
    CTE_REAL        reduce using rule 107 (ope -> MENORIGUAL .)
    TRUE            reduce using rule 107 (ope -> MENORIGUAL .)
    FALSE           reduce using rule 107 (ope -> MENORIGUAL .)
    ID              reduce using rule 107 (ope -> MENORIGUAL .)
    THIS            reduce using rule 107 (ope -> MENORIGUAL .)


state 147

    (105) ope -> IGUALC .

    PIZQ            reduce using rule 105 (ope -> IGUALC .)
    MENOS           reduce using rule 105 (ope -> IGUALC .)
    NOT             reduce using rule 105 (ope -> IGUALC .)
    CTE_STR         reduce using rule 105 (ope -> IGUALC .)
    CTE_CHAR        reduce using rule 105 (ope -> IGUALC .)
    CTE_NUMERAL     reduce using rule 105 (ope -> IGUALC .)
    CTE_REAL        reduce using rule 105 (ope -> IGUALC .)
    TRUE            reduce using rule 105 (ope -> IGUALC .)
    FALSE           reduce using rule 105 (ope -> IGUALC .)
    ID              reduce using rule 105 (ope -> IGUALC .)
    THIS            reduce using rule 105 (ope -> IGUALC .)


state 148

    (108) ope -> MAYOR .

    PIZQ            reduce using rule 108 (ope -> MAYOR .)
    MENOS           reduce using rule 108 (ope -> MAYOR .)
    NOT             reduce using rule 108 (ope -> MAYOR .)
    CTE_STR         reduce using rule 108 (ope -> MAYOR .)
    CTE_CHAR        reduce using rule 108 (ope -> MAYOR .)
    CTE_NUMERAL     reduce using rule 108 (ope -> MAYOR .)
    CTE_REAL        reduce using rule 108 (ope -> MAYOR .)
    TRUE            reduce using rule 108 (ope -> MAYOR .)
    FALSE           reduce using rule 108 (ope -> MAYOR .)
    ID              reduce using rule 108 (ope -> MAYOR .)
    THIS            reduce using rule 108 (ope -> MAYOR .)


state 149

    (102) ope -> MOD .

    PIZQ            reduce using rule 102 (ope -> MOD .)
    MENOS           reduce using rule 102 (ope -> MOD .)
    NOT             reduce using rule 102 (ope -> MOD .)
    CTE_STR         reduce using rule 102 (ope -> MOD .)
    CTE_CHAR        reduce using rule 102 (ope -> MOD .)
    CTE_NUMERAL     reduce using rule 102 (ope -> MOD .)
    CTE_REAL        reduce using rule 102 (ope -> MOD .)
    TRUE            reduce using rule 102 (ope -> MOD .)
    FALSE           reduce using rule 102 (ope -> MOD .)
    ID              reduce using rule 102 (ope -> MOD .)
    THIS            reduce using rule 102 (ope -> MOD .)


state 150

    (70) llamada_func -> ID PIZQ . exp_ciclo PDER
    (74) llamada_func -> ID PIZQ . PDER
    (78) exp_ciclo -> . exp
    (79) exp_ciclo -> . exp_ciclo COMA exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PDER            shift and go to state 189
    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    exp_ciclo                      shift and go to state 190
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 191
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 151

    (119) atom -> ID PUNTO . ID COIZQ exp CODER
    (120) atom -> ID PUNTO . ID
    (72) llamada_func -> ID PUNTO . ID PIZQ exp_ciclo PDER
    (76) llamada_func -> ID PUNTO . ID PIZQ PDER

    ID              shift and go to state 192


state 152

    (121) atom -> ID COIZQ . exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID COIZQ . exp CODER PUNTO ID
    (124) atom -> ID COIZQ . exp CODER
    (73) llamada_func -> ID COIZQ . exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ . exp CODER PUNTO ID PIZQ PDER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 193
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 153

    (125) atom -> THIS PUNTO . ID
    (126) atom -> THIS PUNTO . ID COIZQ exp CODER
    (71) llamada_func -> THIS PUNTO . ID PIZQ exp_ciclo PDER
    (75) llamada_func -> THIS PUNTO . ID PIZQ PDER

    ID              shift and go to state 194


state 154

    (86) exp -> MENOS PIZQ . exp PDER ope exp
    (88) exp -> MENOS PIZQ . exp PDER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 195
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 155

    (97) opciones -> MENOS CTE_REAL .

    MAS             reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    MENOS           reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    MOD             reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    ENTRE           reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    POR             reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    IGUALC          reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    MENOR           reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    MENORIGUAL      reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    MAYOR           reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    MAYORIGUAL      reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    NOTIGUAL        reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    AND             reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    OR              reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    PDER            reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    COMA            reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    CODER           reduce using rule 97 (opciones -> MENOS CTE_REAL .)
    PYC             reduce using rule 97 (opciones -> MENOS CTE_REAL .)


state 156

    (98) opciones -> MENOS atom .

    MAS             reduce using rule 98 (opciones -> MENOS atom .)
    MENOS           reduce using rule 98 (opciones -> MENOS atom .)
    MOD             reduce using rule 98 (opciones -> MENOS atom .)
    ENTRE           reduce using rule 98 (opciones -> MENOS atom .)
    POR             reduce using rule 98 (opciones -> MENOS atom .)
    IGUALC          reduce using rule 98 (opciones -> MENOS atom .)
    MENOR           reduce using rule 98 (opciones -> MENOS atom .)
    MENORIGUAL      reduce using rule 98 (opciones -> MENOS atom .)
    MAYOR           reduce using rule 98 (opciones -> MENOS atom .)
    MAYORIGUAL      reduce using rule 98 (opciones -> MENOS atom .)
    NOTIGUAL        reduce using rule 98 (opciones -> MENOS atom .)
    AND             reduce using rule 98 (opciones -> MENOS atom .)
    OR              reduce using rule 98 (opciones -> MENOS atom .)
    PDER            reduce using rule 98 (opciones -> MENOS atom .)
    COMA            reduce using rule 98 (opciones -> MENOS atom .)
    CODER           reduce using rule 98 (opciones -> MENOS atom .)
    PYC             reduce using rule 98 (opciones -> MENOS atom .)


state 157

    (99) opciones -> MENOS llamada_func .

    MAS             reduce using rule 99 (opciones -> MENOS llamada_func .)
    MENOS           reduce using rule 99 (opciones -> MENOS llamada_func .)
    MOD             reduce using rule 99 (opciones -> MENOS llamada_func .)
    ENTRE           reduce using rule 99 (opciones -> MENOS llamada_func .)
    POR             reduce using rule 99 (opciones -> MENOS llamada_func .)
    IGUALC          reduce using rule 99 (opciones -> MENOS llamada_func .)
    MENOR           reduce using rule 99 (opciones -> MENOS llamada_func .)
    MENORIGUAL      reduce using rule 99 (opciones -> MENOS llamada_func .)
    MAYOR           reduce using rule 99 (opciones -> MENOS llamada_func .)
    MAYORIGUAL      reduce using rule 99 (opciones -> MENOS llamada_func .)
    NOTIGUAL        reduce using rule 99 (opciones -> MENOS llamada_func .)
    AND             reduce using rule 99 (opciones -> MENOS llamada_func .)
    OR              reduce using rule 99 (opciones -> MENOS llamada_func .)
    PDER            reduce using rule 99 (opciones -> MENOS llamada_func .)
    COMA            reduce using rule 99 (opciones -> MENOS llamada_func .)
    CODER           reduce using rule 99 (opciones -> MENOS llamada_func .)
    PYC             reduce using rule 99 (opciones -> MENOS llamada_func .)


state 158

    (96) opciones -> MENOS CTE_NUMERAL .

    MAS             reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    MENOS           reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    MOD             reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    ENTRE           reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    POR             reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    IGUALC          reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    MENOR           reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    MAYOR           reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    AND             reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    OR              reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    PDER            reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    COMA            reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    CODER           reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)
    PYC             reduce using rule 96 (opciones -> MENOS CTE_NUMERAL .)


state 159

    (87) exp -> NOT exp .

    CODER           reduce using rule 87 (exp -> NOT exp .)
    PDER            reduce using rule 87 (exp -> NOT exp .)
    COMA            reduce using rule 87 (exp -> NOT exp .)
    PYC             reduce using rule 87 (exp -> NOT exp .)


state 160

    (26) ciclo_tipo -> ID COIZQ exp CODER .
    (30) ciclo_tipo -> ID COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 26 (ciclo_tipo -> ID COIZQ exp CODER .)
    PYC             reduce using rule 26 (ciclo_tipo -> ID COIZQ exp CODER .)
    IGUAL           shift and go to state 196


state 161

    (39) ciclo_id -> ciclo_id COMA ID IGUAL . NEW ID PIZQ PDER

    NEW             shift and go to state 197


state 162

    (36) ciclo_id -> ciclo_id COMA ID COIZQ . exp CODER
    (40) ciclo_id -> ciclo_id COMA ID COIZQ . exp CODER IGUAL NEW ID PIZQ PDER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 198
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 163

    (37) ciclo_id -> ID IGUAL NEW ID . PIZQ PDER

    PIZQ            shift and go to state 199


state 164

    (34) ciclo_id -> ID COIZQ exp CODER .
    (38) ciclo_id -> ID COIZQ exp CODER . IGUAL NEW ID PIZQ PDER

    COMA            reduce using rule 34 (ciclo_id -> ID COIZQ exp CODER .)
    PYC             reduce using rule 34 (ciclo_id -> ID COIZQ exp CODER .)
    IGUAL           shift and go to state 200


state 165

    (54) params_ciclo -> params_ciclo COMA tipo . ID

    ID              shift and go to state 201


state 166

    (113) return -> RETURN exp . PYC

    PYC             shift and go to state 202


state 167

    (114) return -> RETURN PYC .

    LLDER           reduce using rule 114 (return -> RETURN PYC .)
    WHILE           reduce using rule 114 (return -> RETURN PYC .)
    OUTPUT          reduce using rule 114 (return -> RETURN PYC .)
    INPUT           reduce using rule 114 (return -> RETURN PYC .)
    ID              reduce using rule 114 (return -> RETURN PYC .)
    THIS            reduce using rule 114 (return -> RETURN PYC .)
    RETURN          reduce using rule 114 (return -> RETURN PYC .)
    IF              reduce using rule 114 (return -> RETURN PYC .)


state 168

    (117) asignacion -> atom IGUAL . exp PYC
    (118) asignacion -> atom IGUAL . NEW ID PIZQ PDER PYC
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    NEW             shift and go to state 203
    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 204
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 169

    (115) while -> WHILE PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> WHILE PIZQ . exp PDER LLIZQ LLDER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 205
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 170

    (25) ciclo_tipo -> ID .
    (26) ciclo_tipo -> ID . COIZQ exp CODER
    (29) ciclo_tipo -> ID . IGUAL exp
    (30) ciclo_tipo -> ID . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 25 (ciclo_tipo -> ID .)
    PYC             reduce using rule 25 (ciclo_tipo -> ID .)
    COIZQ           shift and go to state 73
    IGUAL           shift and go to state 71


state 171

    (60) ciclo_vars_func -> ciclo_vars_func vars .

    LLDER           reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    ID              reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    WHILE           reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    OUTPUT          reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    INPUT           reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    THIS            reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    RETURN          reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    NUMERAL         reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    REAL            reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    BOOL            reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    CHAR            reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    STRING          reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)
    IF              reduce using rule 60 (ciclo_vars_func -> ciclo_vars_func vars .)


state 172

    (56) cuerpo_func -> LLIZQ ciclo_vars_func LLDER .

    HIDDEN          reduce using rule 56 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    VISIBLE         reduce using rule 56 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    LLDER           reduce using rule 56 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)


state 173

    (55) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto . LLDER
    (62) ciclo_estatuto -> ciclo_estatuto . estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 206
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    estatuto                       shift and go to state 180
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    lectura                        shift and go to state 119
    escritura                      shift and go to state 131

state 174

    (133) lectura -> INPUT PIZQ . atom PDER PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER

    ID              shift and go to state 209
    THIS            shift and go to state 207

    atom                           shift and go to state 208

state 175

    (68) estatuto -> llamada_func PYC .

    LLDER           reduce using rule 68 (estatuto -> llamada_func PYC .)
    WHILE           reduce using rule 68 (estatuto -> llamada_func PYC .)
    OUTPUT          reduce using rule 68 (estatuto -> llamada_func PYC .)
    INPUT           reduce using rule 68 (estatuto -> llamada_func PYC .)
    ID              reduce using rule 68 (estatuto -> llamada_func PYC .)
    THIS            reduce using rule 68 (estatuto -> llamada_func PYC .)
    RETURN          reduce using rule 68 (estatuto -> llamada_func PYC .)
    IF              reduce using rule 68 (estatuto -> llamada_func PYC .)


state 176

    (73) llamada_func -> ID COIZQ . exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ . exp CODER PUNTO ID PIZQ PDER
    (121) atom -> ID COIZQ . exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID COIZQ . exp CODER PUNTO ID
    (124) atom -> ID COIZQ . exp CODER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 210
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 177

    (72) llamada_func -> ID PUNTO . ID PIZQ exp_ciclo PDER
    (76) llamada_func -> ID PUNTO . ID PIZQ PDER
    (119) atom -> ID PUNTO . ID COIZQ exp CODER
    (120) atom -> ID PUNTO . ID

    ID              shift and go to state 211


state 178

    (129) ciclo_cond -> IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> IF PIZQ . exp PDER LLIZQ LLDER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 212
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 179

    (71) llamada_func -> THIS PUNTO . ID PIZQ exp_ciclo PDER
    (75) llamada_func -> THIS PUNTO . ID PIZQ PDER
    (125) atom -> THIS PUNTO . ID
    (126) atom -> THIS PUNTO . ID COIZQ exp CODER

    ID              shift and go to state 213


state 180

    (62) ciclo_estatuto -> ciclo_estatuto estatuto .

    LLDER           reduce using rule 62 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    WHILE           reduce using rule 62 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    OUTPUT          reduce using rule 62 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    INPUT           reduce using rule 62 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    ID              reduce using rule 62 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    THIS            reduce using rule 62 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    RETURN          reduce using rule 62 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    IF              reduce using rule 62 (ciclo_estatuto -> ciclo_estatuto estatuto .)


state 181

    (57) cuerpo_func -> LLIZQ ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 57 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 57 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    LLDER           reduce using rule 57 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)


state 182

    (70) llamada_func -> ID . PIZQ exp_ciclo PDER
    (72) llamada_func -> ID . PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> ID . PIZQ PDER
    (76) llamada_func -> ID . PUNTO ID PIZQ PDER
    (77) llamada_func -> ID . COIZQ exp CODER PUNTO ID PIZQ PDER
    (119) atom -> ID . PUNTO ID COIZQ exp CODER
    (120) atom -> ID . PUNTO ID
    (121) atom -> ID . COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID . COIZQ exp CODER PUNTO ID
    (123) atom -> ID .
    (124) atom -> ID . COIZQ exp CODER

    PIZQ            shift and go to state 150
    PUNTO           shift and go to state 177
    COIZQ           shift and go to state 176
    IGUAL           reduce using rule 123 (atom -> ID .)


state 183

    (127) condicion -> ciclo_cond ELSE . LLIZQ ciclo_estatuto LLDER
    (128) condicion -> ciclo_cond ELSE . LLIZQ LLDER
    (131) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ LLDER

    LLIZQ           shift and go to state 214
    IF              shift and go to state 215


state 184

    (134) escritura -> OUTPUT PIZQ . exp PDER PYC
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 216
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 185

    (31) ciclo_tipo -> ciclo_tipo COMA ID IGUAL exp .

    COMA            reduce using rule 31 (ciclo_tipo -> ciclo_tipo COMA ID IGUAL exp .)
    PYC             reduce using rule 31 (ciclo_tipo -> ciclo_tipo COMA ID IGUAL exp .)


state 186

    (28) ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp . CODER
    (32) ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp . CODER IGUAL exp

    CODER           shift and go to state 217


state 187

    (84) exp -> PIZQ exp PDER .
    (85) exp -> PIZQ exp PDER . ope exp
    (100) ope -> . MAS
    (101) ope -> . MENOS
    (102) ope -> . MOD
    (103) ope -> . ENTRE
    (104) ope -> . POR
    (105) ope -> . IGUALC
    (106) ope -> . MENOR
    (107) ope -> . MENORIGUAL
    (108) ope -> . MAYOR
    (109) ope -> . MAYORIGUAL
    (110) ope -> . NOTIGUAL
    (111) ope -> . AND
    (112) ope -> . OR

    CODER           reduce using rule 84 (exp -> PIZQ exp PDER .)
    PDER            reduce using rule 84 (exp -> PIZQ exp PDER .)
    COMA            reduce using rule 84 (exp -> PIZQ exp PDER .)
    PYC             reduce using rule 84 (exp -> PIZQ exp PDER .)
    MAS             shift and go to state 137
    MENOS           shift and go to state 144
    MOD             shift and go to state 149
    ENTRE           shift and go to state 139
    POR             shift and go to state 140
    IGUALC          shift and go to state 147
    MENOR           shift and go to state 143
    MENORIGUAL      shift and go to state 146
    MAYOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 145
    NOTIGUAL        shift and go to state 138
    AND             shift and go to state 136
    OR              shift and go to state 141

    ope                            shift and go to state 218

state 188

    (82) exp -> opciones ope exp .

    CODER           reduce using rule 82 (exp -> opciones ope exp .)
    PDER            reduce using rule 82 (exp -> opciones ope exp .)
    COMA            reduce using rule 82 (exp -> opciones ope exp .)
    PYC             reduce using rule 82 (exp -> opciones ope exp .)


state 189

    (74) llamada_func -> ID PIZQ PDER .

    MAS             reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    MENOS           reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    MOD             reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    ENTRE           reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    POR             reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    IGUALC          reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    MENOR           reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    MAYOR           reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    NOTIGUAL        reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    AND             reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    OR              reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    CODER           reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    PYC             reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    COMA            reduce using rule 74 (llamada_func -> ID PIZQ PDER .)
    PDER            reduce using rule 74 (llamada_func -> ID PIZQ PDER .)


state 190

    (70) llamada_func -> ID PIZQ exp_ciclo . PDER
    (79) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 219
    COMA            shift and go to state 220


state 191

    (78) exp_ciclo -> exp .

    PDER            reduce using rule 78 (exp_ciclo -> exp .)
    COMA            reduce using rule 78 (exp_ciclo -> exp .)


state 192

    (119) atom -> ID PUNTO ID . COIZQ exp CODER
    (120) atom -> ID PUNTO ID .
    (72) llamada_func -> ID PUNTO ID . PIZQ exp_ciclo PDER
    (76) llamada_func -> ID PUNTO ID . PIZQ PDER

    COIZQ           shift and go to state 222
    MAS             reduce using rule 120 (atom -> ID PUNTO ID .)
    MENOS           reduce using rule 120 (atom -> ID PUNTO ID .)
    MOD             reduce using rule 120 (atom -> ID PUNTO ID .)
    ENTRE           reduce using rule 120 (atom -> ID PUNTO ID .)
    POR             reduce using rule 120 (atom -> ID PUNTO ID .)
    IGUALC          reduce using rule 120 (atom -> ID PUNTO ID .)
    MENOR           reduce using rule 120 (atom -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 120 (atom -> ID PUNTO ID .)
    MAYOR           reduce using rule 120 (atom -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 120 (atom -> ID PUNTO ID .)
    NOTIGUAL        reduce using rule 120 (atom -> ID PUNTO ID .)
    AND             reduce using rule 120 (atom -> ID PUNTO ID .)
    OR              reduce using rule 120 (atom -> ID PUNTO ID .)
    PYC             reduce using rule 120 (atom -> ID PUNTO ID .)
    PDER            reduce using rule 120 (atom -> ID PUNTO ID .)
    COMA            reduce using rule 120 (atom -> ID PUNTO ID .)
    CODER           reduce using rule 120 (atom -> ID PUNTO ID .)
    PIZQ            shift and go to state 221


state 193

    (121) atom -> ID COIZQ exp . CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID COIZQ exp . CODER PUNTO ID
    (124) atom -> ID COIZQ exp . CODER
    (73) llamada_func -> ID COIZQ exp . CODER PUNTO ID PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ exp . CODER PUNTO ID PIZQ PDER

    CODER           shift and go to state 223


state 194

    (125) atom -> THIS PUNTO ID .
    (126) atom -> THIS PUNTO ID . COIZQ exp CODER
    (71) llamada_func -> THIS PUNTO ID . PIZQ exp_ciclo PDER
    (75) llamada_func -> THIS PUNTO ID . PIZQ PDER

    MAS             reduce using rule 125 (atom -> THIS PUNTO ID .)
    MENOS           reduce using rule 125 (atom -> THIS PUNTO ID .)
    MOD             reduce using rule 125 (atom -> THIS PUNTO ID .)
    ENTRE           reduce using rule 125 (atom -> THIS PUNTO ID .)
    POR             reduce using rule 125 (atom -> THIS PUNTO ID .)
    IGUALC          reduce using rule 125 (atom -> THIS PUNTO ID .)
    MENOR           reduce using rule 125 (atom -> THIS PUNTO ID .)
    MENORIGUAL      reduce using rule 125 (atom -> THIS PUNTO ID .)
    MAYOR           reduce using rule 125 (atom -> THIS PUNTO ID .)
    MAYORIGUAL      reduce using rule 125 (atom -> THIS PUNTO ID .)
    NOTIGUAL        reduce using rule 125 (atom -> THIS PUNTO ID .)
    AND             reduce using rule 125 (atom -> THIS PUNTO ID .)
    OR              reduce using rule 125 (atom -> THIS PUNTO ID .)
    PYC             reduce using rule 125 (atom -> THIS PUNTO ID .)
    PDER            reduce using rule 125 (atom -> THIS PUNTO ID .)
    COMA            reduce using rule 125 (atom -> THIS PUNTO ID .)
    CODER           reduce using rule 125 (atom -> THIS PUNTO ID .)
    COIZQ           shift and go to state 225
    PIZQ            shift and go to state 224


state 195

    (86) exp -> MENOS PIZQ exp . PDER ope exp
    (88) exp -> MENOS PIZQ exp . PDER

    PDER            shift and go to state 226


state 196

    (30) ciclo_tipo -> ID COIZQ exp CODER IGUAL . exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 227
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 197

    (39) ciclo_id -> ciclo_id COMA ID IGUAL NEW . ID PIZQ PDER

    ID              shift and go to state 228


state 198

    (36) ciclo_id -> ciclo_id COMA ID COIZQ exp . CODER
    (40) ciclo_id -> ciclo_id COMA ID COIZQ exp . CODER IGUAL NEW ID PIZQ PDER

    CODER           shift and go to state 229


state 199

    (37) ciclo_id -> ID IGUAL NEW ID PIZQ . PDER

    PDER            shift and go to state 230


state 200

    (38) ciclo_id -> ID COIZQ exp CODER IGUAL . NEW ID PIZQ PDER

    NEW             shift and go to state 231


state 201

    (54) params_ciclo -> params_ciclo COMA tipo ID .

    PDER            reduce using rule 54 (params_ciclo -> params_ciclo COMA tipo ID .)
    COMA            reduce using rule 54 (params_ciclo -> params_ciclo COMA tipo ID .)


state 202

    (113) return -> RETURN exp PYC .

    LLDER           reduce using rule 113 (return -> RETURN exp PYC .)
    WHILE           reduce using rule 113 (return -> RETURN exp PYC .)
    OUTPUT          reduce using rule 113 (return -> RETURN exp PYC .)
    INPUT           reduce using rule 113 (return -> RETURN exp PYC .)
    ID              reduce using rule 113 (return -> RETURN exp PYC .)
    THIS            reduce using rule 113 (return -> RETURN exp PYC .)
    RETURN          reduce using rule 113 (return -> RETURN exp PYC .)
    IF              reduce using rule 113 (return -> RETURN exp PYC .)


state 203

    (118) asignacion -> atom IGUAL NEW . ID PIZQ PDER PYC

    ID              shift and go to state 232


state 204

    (117) asignacion -> atom IGUAL exp . PYC

    PYC             shift and go to state 233


state 205

    (115) while -> WHILE PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> WHILE PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 234


state 206

    (55) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 55 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 55 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    LLDER           reduce using rule 55 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)


state 207

    (125) atom -> THIS . PUNTO ID
    (126) atom -> THIS . PUNTO ID COIZQ exp CODER

    PUNTO           shift and go to state 235


state 208

    (133) lectura -> INPUT PIZQ atom . PDER PYC

    PDER            shift and go to state 236


state 209

    (119) atom -> ID . PUNTO ID COIZQ exp CODER
    (120) atom -> ID . PUNTO ID
    (121) atom -> ID . COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID . COIZQ exp CODER PUNTO ID
    (123) atom -> ID .
    (124) atom -> ID . COIZQ exp CODER

    PUNTO           shift and go to state 238
    COIZQ           shift and go to state 237
    PDER            reduce using rule 123 (atom -> ID .)


state 210

    (73) llamada_func -> ID COIZQ exp . CODER PUNTO ID PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ exp . CODER PUNTO ID PIZQ PDER
    (121) atom -> ID COIZQ exp . CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID COIZQ exp . CODER PUNTO ID
    (124) atom -> ID COIZQ exp . CODER

    CODER           shift and go to state 239


state 211

    (72) llamada_func -> ID PUNTO ID . PIZQ exp_ciclo PDER
    (76) llamada_func -> ID PUNTO ID . PIZQ PDER
    (119) atom -> ID PUNTO ID . COIZQ exp CODER
    (120) atom -> ID PUNTO ID .

    PIZQ            shift and go to state 221
    COIZQ           shift and go to state 222
    IGUAL           reduce using rule 120 (atom -> ID PUNTO ID .)


state 212

    (129) ciclo_cond -> IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> IF PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 240


state 213

    (71) llamada_func -> THIS PUNTO ID . PIZQ exp_ciclo PDER
    (75) llamada_func -> THIS PUNTO ID . PIZQ PDER
    (125) atom -> THIS PUNTO ID .
    (126) atom -> THIS PUNTO ID . COIZQ exp CODER

    PIZQ            shift and go to state 224
    IGUAL           reduce using rule 125 (atom -> THIS PUNTO ID .)
    COIZQ           shift and go to state 225


state 214

    (127) condicion -> ciclo_cond ELSE LLIZQ . ciclo_estatuto LLDER
    (128) condicion -> ciclo_cond ELSE LLIZQ . LLDER
    (61) ciclo_estatuto -> . estatuto
    (62) ciclo_estatuto -> . ciclo_estatuto estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 241
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    ciclo_estatuto                 shift and go to state 242
    estatuto                       shift and go to state 116
    lectura                        shift and go to state 119
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    ciclo_cond                     shift and go to state 128
    escritura                      shift and go to state 131

state 215

    (131) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 243


state 216

    (134) escritura -> OUTPUT PIZQ exp . PDER PYC

    PDER            shift and go to state 244


state 217

    (28) ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER .
    (32) ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 28 (ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER .)
    PYC             reduce using rule 28 (ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER .)
    IGUAL           shift and go to state 245


state 218

    (85) exp -> PIZQ exp PDER ope . exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 246
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 219

    (70) llamada_func -> ID PIZQ exp_ciclo PDER .

    MAS             reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    POR             reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    AND             reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    OR              reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 70 (llamada_func -> ID PIZQ exp_ciclo PDER .)


state 220

    (79) exp_ciclo -> exp_ciclo COMA . exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 247
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 221

    (72) llamada_func -> ID PUNTO ID PIZQ . exp_ciclo PDER
    (76) llamada_func -> ID PUNTO ID PIZQ . PDER
    (78) exp_ciclo -> . exp
    (79) exp_ciclo -> . exp_ciclo COMA exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PDER            shift and go to state 248
    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    exp_ciclo                      shift and go to state 249
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 191
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 222

    (119) atom -> ID PUNTO ID COIZQ . exp CODER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 250
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 223

    (121) atom -> ID COIZQ exp CODER . PUNTO ID COIZQ exp CODER
    (122) atom -> ID COIZQ exp CODER . PUNTO ID
    (124) atom -> ID COIZQ exp CODER .
    (73) llamada_func -> ID COIZQ exp CODER . PUNTO ID PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ exp CODER . PUNTO ID PIZQ PDER

    PUNTO           shift and go to state 251
    MAS             reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    MENOS           reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    MOD             reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    ENTRE           reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    POR             reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    IGUALC          reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    MENOR           reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    MAYOR           reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    AND             reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    OR              reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    PYC             reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    PDER            reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    COMA            reduce using rule 124 (atom -> ID COIZQ exp CODER .)
    CODER           reduce using rule 124 (atom -> ID COIZQ exp CODER .)


state 224

    (71) llamada_func -> THIS PUNTO ID PIZQ . exp_ciclo PDER
    (75) llamada_func -> THIS PUNTO ID PIZQ . PDER
    (78) exp_ciclo -> . exp
    (79) exp_ciclo -> . exp_ciclo COMA exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PDER            shift and go to state 252
    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    exp_ciclo                      shift and go to state 253
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 191
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 225

    (126) atom -> THIS PUNTO ID COIZQ . exp CODER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 254
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 226

    (86) exp -> MENOS PIZQ exp PDER . ope exp
    (88) exp -> MENOS PIZQ exp PDER .
    (100) ope -> . MAS
    (101) ope -> . MENOS
    (102) ope -> . MOD
    (103) ope -> . ENTRE
    (104) ope -> . POR
    (105) ope -> . IGUALC
    (106) ope -> . MENOR
    (107) ope -> . MENORIGUAL
    (108) ope -> . MAYOR
    (109) ope -> . MAYORIGUAL
    (110) ope -> . NOTIGUAL
    (111) ope -> . AND
    (112) ope -> . OR

    CODER           reduce using rule 88 (exp -> MENOS PIZQ exp PDER .)
    PDER            reduce using rule 88 (exp -> MENOS PIZQ exp PDER .)
    COMA            reduce using rule 88 (exp -> MENOS PIZQ exp PDER .)
    PYC             reduce using rule 88 (exp -> MENOS PIZQ exp PDER .)
    MAS             shift and go to state 137
    MENOS           shift and go to state 144
    MOD             shift and go to state 149
    ENTRE           shift and go to state 139
    POR             shift and go to state 140
    IGUALC          shift and go to state 147
    MENOR           shift and go to state 143
    MENORIGUAL      shift and go to state 146
    MAYOR           shift and go to state 148
    MAYORIGUAL      shift and go to state 145
    NOTIGUAL        shift and go to state 138
    AND             shift and go to state 136
    OR              shift and go to state 141

    ope                            shift and go to state 255

state 227

    (30) ciclo_tipo -> ID COIZQ exp CODER IGUAL exp .

    COMA            reduce using rule 30 (ciclo_tipo -> ID COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 30 (ciclo_tipo -> ID COIZQ exp CODER IGUAL exp .)


state 228

    (39) ciclo_id -> ciclo_id COMA ID IGUAL NEW ID . PIZQ PDER

    PIZQ            shift and go to state 256


state 229

    (36) ciclo_id -> ciclo_id COMA ID COIZQ exp CODER .
    (40) ciclo_id -> ciclo_id COMA ID COIZQ exp CODER . IGUAL NEW ID PIZQ PDER

    COMA            reduce using rule 36 (ciclo_id -> ciclo_id COMA ID COIZQ exp CODER .)
    PYC             reduce using rule 36 (ciclo_id -> ciclo_id COMA ID COIZQ exp CODER .)
    IGUAL           shift and go to state 257


state 230

    (37) ciclo_id -> ID IGUAL NEW ID PIZQ PDER .

    COMA            reduce using rule 37 (ciclo_id -> ID IGUAL NEW ID PIZQ PDER .)
    PYC             reduce using rule 37 (ciclo_id -> ID IGUAL NEW ID PIZQ PDER .)


state 231

    (38) ciclo_id -> ID COIZQ exp CODER IGUAL NEW . ID PIZQ PDER

    ID              shift and go to state 258


state 232

    (118) asignacion -> atom IGUAL NEW ID . PIZQ PDER PYC

    PIZQ            shift and go to state 259


state 233

    (117) asignacion -> atom IGUAL exp PYC .

    LLDER           reduce using rule 117 (asignacion -> atom IGUAL exp PYC .)
    WHILE           reduce using rule 117 (asignacion -> atom IGUAL exp PYC .)
    OUTPUT          reduce using rule 117 (asignacion -> atom IGUAL exp PYC .)
    INPUT           reduce using rule 117 (asignacion -> atom IGUAL exp PYC .)
    ID              reduce using rule 117 (asignacion -> atom IGUAL exp PYC .)
    THIS            reduce using rule 117 (asignacion -> atom IGUAL exp PYC .)
    RETURN          reduce using rule 117 (asignacion -> atom IGUAL exp PYC .)
    IF              reduce using rule 117 (asignacion -> atom IGUAL exp PYC .)


state 234

    (115) while -> WHILE PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (116) while -> WHILE PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 260


state 235

    (125) atom -> THIS PUNTO . ID
    (126) atom -> THIS PUNTO . ID COIZQ exp CODER

    ID              shift and go to state 261


state 236

    (133) lectura -> INPUT PIZQ atom PDER . PYC

    PYC             shift and go to state 262


state 237

    (121) atom -> ID COIZQ . exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID COIZQ . exp CODER PUNTO ID
    (124) atom -> ID COIZQ . exp CODER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 263
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 238

    (119) atom -> ID PUNTO . ID COIZQ exp CODER
    (120) atom -> ID PUNTO . ID

    ID              shift and go to state 264


state 239

    (73) llamada_func -> ID COIZQ exp CODER . PUNTO ID PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ exp CODER . PUNTO ID PIZQ PDER
    (121) atom -> ID COIZQ exp CODER . PUNTO ID COIZQ exp CODER
    (122) atom -> ID COIZQ exp CODER . PUNTO ID
    (124) atom -> ID COIZQ exp CODER .

    PUNTO           shift and go to state 265
    IGUAL           reduce using rule 124 (atom -> ID COIZQ exp CODER .)


state 240

    (129) ciclo_cond -> IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 266


state 241

    (128) condicion -> ciclo_cond ELSE LLIZQ LLDER .

    LLDER           reduce using rule 128 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    WHILE           reduce using rule 128 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    OUTPUT          reduce using rule 128 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    INPUT           reduce using rule 128 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    ID              reduce using rule 128 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    THIS            reduce using rule 128 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    RETURN          reduce using rule 128 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    IF              reduce using rule 128 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)


state 242

    (127) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto . LLDER
    (62) ciclo_estatuto -> ciclo_estatuto . estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 267
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    estatuto                       shift and go to state 180
    lectura                        shift and go to state 119
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    ciclo_cond                     shift and go to state 128
    escritura                      shift and go to state 131

state 243

    (131) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ LLDER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 268
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 244

    (134) escritura -> OUTPUT PIZQ exp PDER . PYC

    PYC             shift and go to state 269


state 245

    (32) ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER IGUAL . exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 270
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 246

    (85) exp -> PIZQ exp PDER ope exp .

    CODER           reduce using rule 85 (exp -> PIZQ exp PDER ope exp .)
    PDER            reduce using rule 85 (exp -> PIZQ exp PDER ope exp .)
    COMA            reduce using rule 85 (exp -> PIZQ exp PDER ope exp .)
    PYC             reduce using rule 85 (exp -> PIZQ exp PDER ope exp .)


state 247

    (79) exp_ciclo -> exp_ciclo COMA exp .

    PDER            reduce using rule 79 (exp_ciclo -> exp_ciclo COMA exp .)
    COMA            reduce using rule 79 (exp_ciclo -> exp_ciclo COMA exp .)


state 248

    (76) llamada_func -> ID PUNTO ID PIZQ PDER .

    MAS             reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MENOS           reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MOD             reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    ENTRE           reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    POR             reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    IGUALC          reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MENOR           reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MAYOR           reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    NOTIGUAL        reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    AND             reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    OR              reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    CODER           reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    PYC             reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    COMA            reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)
    PDER            reduce using rule 76 (llamada_func -> ID PUNTO ID PIZQ PDER .)


state 249

    (72) llamada_func -> ID PUNTO ID PIZQ exp_ciclo . PDER
    (79) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 271
    COMA            shift and go to state 220


state 250

    (119) atom -> ID PUNTO ID COIZQ exp . CODER

    CODER           shift and go to state 272


state 251

    (121) atom -> ID COIZQ exp CODER PUNTO . ID COIZQ exp CODER
    (122) atom -> ID COIZQ exp CODER PUNTO . ID
    (73) llamada_func -> ID COIZQ exp CODER PUNTO . ID PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ exp CODER PUNTO . ID PIZQ PDER

    ID              shift and go to state 273


state 252

    (75) llamada_func -> THIS PUNTO ID PIZQ PDER .

    MAS             reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MENOS           reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MOD             reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    ENTRE           reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    POR             reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    IGUALC          reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MENOR           reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MAYOR           reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    NOTIGUAL        reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    AND             reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    OR              reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    CODER           reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    PYC             reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    COMA            reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)
    PDER            reduce using rule 75 (llamada_func -> THIS PUNTO ID PIZQ PDER .)


state 253

    (71) llamada_func -> THIS PUNTO ID PIZQ exp_ciclo . PDER
    (79) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 274
    COMA            shift and go to state 220


state 254

    (126) atom -> THIS PUNTO ID COIZQ exp . CODER

    CODER           shift and go to state 275


state 255

    (86) exp -> MENOS PIZQ exp PDER ope . exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 276
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 256

    (39) ciclo_id -> ciclo_id COMA ID IGUAL NEW ID PIZQ . PDER

    PDER            shift and go to state 277


state 257

    (40) ciclo_id -> ciclo_id COMA ID COIZQ exp CODER IGUAL . NEW ID PIZQ PDER

    NEW             shift and go to state 278


state 258

    (38) ciclo_id -> ID COIZQ exp CODER IGUAL NEW ID . PIZQ PDER

    PIZQ            shift and go to state 279


state 259

    (118) asignacion -> atom IGUAL NEW ID PIZQ . PDER PYC

    PDER            shift and go to state 280


state 260

    (115) while -> WHILE PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (116) while -> WHILE PIZQ exp PDER LLIZQ . LLDER
    (61) ciclo_estatuto -> . estatuto
    (62) ciclo_estatuto -> . ciclo_estatuto estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 281
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    ciclo_estatuto                 shift and go to state 282
    estatuto                       shift and go to state 116
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    lectura                        shift and go to state 119
    escritura                      shift and go to state 131

state 261

    (125) atom -> THIS PUNTO ID .
    (126) atom -> THIS PUNTO ID . COIZQ exp CODER

    PDER            reduce using rule 125 (atom -> THIS PUNTO ID .)
    COIZQ           shift and go to state 225


state 262

    (133) lectura -> INPUT PIZQ atom PDER PYC .

    LLDER           reduce using rule 133 (lectura -> INPUT PIZQ atom PDER PYC .)
    WHILE           reduce using rule 133 (lectura -> INPUT PIZQ atom PDER PYC .)
    OUTPUT          reduce using rule 133 (lectura -> INPUT PIZQ atom PDER PYC .)
    INPUT           reduce using rule 133 (lectura -> INPUT PIZQ atom PDER PYC .)
    ID              reduce using rule 133 (lectura -> INPUT PIZQ atom PDER PYC .)
    THIS            reduce using rule 133 (lectura -> INPUT PIZQ atom PDER PYC .)
    RETURN          reduce using rule 133 (lectura -> INPUT PIZQ atom PDER PYC .)
    IF              reduce using rule 133 (lectura -> INPUT PIZQ atom PDER PYC .)


state 263

    (121) atom -> ID COIZQ exp . CODER PUNTO ID COIZQ exp CODER
    (122) atom -> ID COIZQ exp . CODER PUNTO ID
    (124) atom -> ID COIZQ exp . CODER

    CODER           shift and go to state 283


state 264

    (119) atom -> ID PUNTO ID . COIZQ exp CODER
    (120) atom -> ID PUNTO ID .

    COIZQ           shift and go to state 222
    PDER            reduce using rule 120 (atom -> ID PUNTO ID .)


state 265

    (73) llamada_func -> ID COIZQ exp CODER PUNTO . ID PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ exp CODER PUNTO . ID PIZQ PDER
    (121) atom -> ID COIZQ exp CODER PUNTO . ID COIZQ exp CODER
    (122) atom -> ID COIZQ exp CODER PUNTO . ID

    ID              shift and go to state 284


state 266

    (129) ciclo_cond -> IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (130) ciclo_cond -> IF PIZQ exp PDER LLIZQ . LLDER
    (61) ciclo_estatuto -> . estatuto
    (62) ciclo_estatuto -> . ciclo_estatuto estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 285
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    ciclo_estatuto                 shift and go to state 286
    estatuto                       shift and go to state 116
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    lectura                        shift and go to state 119
    escritura                      shift and go to state 131

state 267

    (127) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 127 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 127 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 127 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 127 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 127 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 127 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 127 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 127 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)


state 268

    (131) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 287


state 269

    (134) escritura -> OUTPUT PIZQ exp PDER PYC .

    LLDER           reduce using rule 134 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    WHILE           reduce using rule 134 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    OUTPUT          reduce using rule 134 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    INPUT           reduce using rule 134 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    ID              reduce using rule 134 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    THIS            reduce using rule 134 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    RETURN          reduce using rule 134 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    IF              reduce using rule 134 (escritura -> OUTPUT PIZQ exp PDER PYC .)


state 270

    (32) ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER IGUAL exp .

    COMA            reduce using rule 32 (ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 32 (ciclo_tipo -> ciclo_tipo COMA ID COIZQ exp CODER IGUAL exp .)


state 271

    (72) llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .

    MAS             reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    POR             reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    AND             reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    OR              reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 72 (llamada_func -> ID PUNTO ID PIZQ exp_ciclo PDER .)


state 272

    (119) atom -> ID PUNTO ID COIZQ exp CODER .

    MAS             reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MENOS           reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MOD             reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    ENTRE           reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    POR             reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    IGUALC          reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MENOR           reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MAYOR           reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    AND             reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    OR              reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    PYC             reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    IGUAL           reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    PDER            reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    COMA            reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)
    CODER           reduce using rule 119 (atom -> ID PUNTO ID COIZQ exp CODER .)


state 273

    (121) atom -> ID COIZQ exp CODER PUNTO ID . COIZQ exp CODER
    (122) atom -> ID COIZQ exp CODER PUNTO ID .
    (73) llamada_func -> ID COIZQ exp CODER PUNTO ID . PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ exp CODER PUNTO ID . PIZQ PDER

    COIZQ           shift and go to state 289
    MAS             reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MENOS           reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MOD             reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    ENTRE           reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    POR             reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    IGUALC          reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MENOR           reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MENORIGUAL      reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MAYOR           reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    MAYORIGUAL      reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    NOTIGUAL        reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    AND             reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    OR              reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    PYC             reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    PDER            reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    COMA            reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    CODER           reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)
    PIZQ            shift and go to state 288


state 274

    (71) llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .

    MAS             reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    POR             reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    AND             reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    OR              reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 71 (llamada_func -> THIS PUNTO ID PIZQ exp_ciclo PDER .)


state 275

    (126) atom -> THIS PUNTO ID COIZQ exp CODER .

    MAS             reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MENOS           reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MOD             reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    ENTRE           reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    POR             reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    IGUALC          reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MENOR           reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MAYOR           reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    AND             reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    OR              reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    PYC             reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    IGUAL           reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    PDER            reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    COMA            reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)
    CODER           reduce using rule 126 (atom -> THIS PUNTO ID COIZQ exp CODER .)


state 276

    (86) exp -> MENOS PIZQ exp PDER ope exp .

    CODER           reduce using rule 86 (exp -> MENOS PIZQ exp PDER ope exp .)
    PDER            reduce using rule 86 (exp -> MENOS PIZQ exp PDER ope exp .)
    COMA            reduce using rule 86 (exp -> MENOS PIZQ exp PDER ope exp .)
    PYC             reduce using rule 86 (exp -> MENOS PIZQ exp PDER ope exp .)


state 277

    (39) ciclo_id -> ciclo_id COMA ID IGUAL NEW ID PIZQ PDER .

    COMA            reduce using rule 39 (ciclo_id -> ciclo_id COMA ID IGUAL NEW ID PIZQ PDER .)
    PYC             reduce using rule 39 (ciclo_id -> ciclo_id COMA ID IGUAL NEW ID PIZQ PDER .)


state 278

    (40) ciclo_id -> ciclo_id COMA ID COIZQ exp CODER IGUAL NEW . ID PIZQ PDER

    ID              shift and go to state 290


state 279

    (38) ciclo_id -> ID COIZQ exp CODER IGUAL NEW ID PIZQ . PDER

    PDER            shift and go to state 291


state 280

    (118) asignacion -> atom IGUAL NEW ID PIZQ PDER . PYC

    PYC             shift and go to state 292


state 281

    (116) while -> WHILE PIZQ exp PDER LLIZQ LLDER .

    LLDER           reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    WHILE           reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    OUTPUT          reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    INPUT           reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    ID              reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    THIS            reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    RETURN          reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    IF              reduce using rule 116 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)


state 282

    (115) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (62) ciclo_estatuto -> ciclo_estatuto . estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 293
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    estatuto                       shift and go to state 180
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    lectura                        shift and go to state 119
    escritura                      shift and go to state 131

state 283

    (121) atom -> ID COIZQ exp CODER . PUNTO ID COIZQ exp CODER
    (122) atom -> ID COIZQ exp CODER . PUNTO ID
    (124) atom -> ID COIZQ exp CODER .

    PUNTO           shift and go to state 294
    PDER            reduce using rule 124 (atom -> ID COIZQ exp CODER .)


state 284

    (73) llamada_func -> ID COIZQ exp CODER PUNTO ID . PIZQ exp_ciclo PDER
    (77) llamada_func -> ID COIZQ exp CODER PUNTO ID . PIZQ PDER
    (121) atom -> ID COIZQ exp CODER PUNTO ID . COIZQ exp CODER
    (122) atom -> ID COIZQ exp CODER PUNTO ID .

    PIZQ            shift and go to state 288
    COIZQ           shift and go to state 289
    IGUAL           reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)


state 285

    (130) ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 130 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)


state 286

    (129) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (62) ciclo_estatuto -> ciclo_estatuto . estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 295
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    estatuto                       shift and go to state 180
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    lectura                        shift and go to state 119
    escritura                      shift and go to state 131

state 287

    (131) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 296


state 288

    (73) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ . exp_ciclo PDER
    (77) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ . PDER
    (78) exp_ciclo -> . exp
    (79) exp_ciclo -> . exp_ciclo COMA exp
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PDER            shift and go to state 297
    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    exp_ciclo                      shift and go to state 298
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 191
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 289

    (121) atom -> ID COIZQ exp CODER PUNTO ID COIZQ . exp CODER
    (82) exp -> . opciones ope exp
    (83) exp -> . opciones
    (84) exp -> . PIZQ exp PDER
    (85) exp -> . PIZQ exp PDER ope exp
    (86) exp -> . MENOS PIZQ exp PDER ope exp
    (87) exp -> . NOT exp
    (88) exp -> . MENOS PIZQ exp PDER
    (89) opciones -> . CTE_STR
    (90) opciones -> . CTE_CHAR
    (91) opciones -> . CTE_NUMERAL
    (92) opciones -> . CTE_REAL
    (93) opciones -> . cte_bool
    (94) opciones -> . atom
    (95) opciones -> . llamada_func
    (96) opciones -> . MENOS CTE_NUMERAL
    (97) opciones -> . MENOS CTE_REAL
    (98) opciones -> . MENOS atom
    (99) opciones -> . MENOS llamada_func
    (80) cte_bool -> . TRUE
    (81) cte_bool -> . FALSE
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER

    PIZQ            shift and go to state 86
    MENOS           shift and go to state 99
    NOT             shift and go to state 101
    CTE_STR         shift and go to state 93
    CTE_CHAR        shift and go to state 91
    CTE_NUMERAL     shift and go to state 89
    CTE_REAL        shift and go to state 90
    TRUE            shift and go to state 88
    FALSE           shift and go to state 97
    ID              shift and go to state 96
    THIS            shift and go to state 98

    opciones                       shift and go to state 92
    cte_bool                       shift and go to state 87
    exp                            shift and go to state 299
    atom                           shift and go to state 94
    llamada_func                   shift and go to state 95

state 290

    (40) ciclo_id -> ciclo_id COMA ID COIZQ exp CODER IGUAL NEW ID . PIZQ PDER

    PIZQ            shift and go to state 300


state 291

    (38) ciclo_id -> ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER .

    COMA            reduce using rule 38 (ciclo_id -> ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER .)
    PYC             reduce using rule 38 (ciclo_id -> ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER .)


state 292

    (118) asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .

    LLDER           reduce using rule 118 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    WHILE           reduce using rule 118 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    OUTPUT          reduce using rule 118 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    INPUT           reduce using rule 118 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    ID              reduce using rule 118 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    THIS            reduce using rule 118 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    RETURN          reduce using rule 118 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)
    IF              reduce using rule 118 (asignacion -> atom IGUAL NEW ID PIZQ PDER PYC .)


state 293

    (115) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 115 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 115 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 115 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 115 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 115 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 115 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 115 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 115 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 294

    (121) atom -> ID COIZQ exp CODER PUNTO . ID COIZQ exp CODER
    (122) atom -> ID COIZQ exp CODER PUNTO . ID

    ID              shift and go to state 301


state 295

    (129) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 129 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 296

    (131) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (132) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . LLDER
    (61) ciclo_estatuto -> . estatuto
    (62) ciclo_estatuto -> . ciclo_estatuto estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 302
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    ciclo_estatuto                 shift and go to state 303
    estatuto                       shift and go to state 116
    lectura                        shift and go to state 119
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    ciclo_cond                     shift and go to state 128
    escritura                      shift and go to state 131

state 297

    (77) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .

    MAS             reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MENOS           reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MOD             reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    ENTRE           reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    POR             reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    IGUALC          reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MENOR           reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MAYOR           reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    NOTIGUAL        reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    AND             reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    OR              reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    CODER           reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    PYC             reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    COMA            reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)
    PDER            reduce using rule 77 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ PDER .)


state 298

    (73) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo . PDER
    (79) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 304
    COMA            shift and go to state 220


state 299

    (121) atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp . CODER

    CODER           shift and go to state 305


state 300

    (40) ciclo_id -> ciclo_id COMA ID COIZQ exp CODER IGUAL NEW ID PIZQ . PDER

    PDER            shift and go to state 306


state 301

    (121) atom -> ID COIZQ exp CODER PUNTO ID . COIZQ exp CODER
    (122) atom -> ID COIZQ exp CODER PUNTO ID .

    COIZQ           shift and go to state 289
    PDER            reduce using rule 122 (atom -> ID COIZQ exp CODER PUNTO ID .)


state 302

    (132) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 132 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)


state 303

    (131) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (62) ciclo_estatuto -> ciclo_estatuto . estatuto
    (63) estatuto -> . while
    (64) estatuto -> . asignacion
    (65) estatuto -> . condicion
    (66) estatuto -> . escritura
    (67) estatuto -> . lectura
    (68) estatuto -> . llamada_func PYC
    (69) estatuto -> . return
    (115) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (116) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (117) asignacion -> . atom IGUAL exp PYC
    (118) asignacion -> . atom IGUAL NEW ID PIZQ PDER PYC
    (127) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (128) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (134) escritura -> . OUTPUT PIZQ exp PDER PYC
    (133) lectura -> . INPUT PIZQ atom PDER PYC
    (70) llamada_func -> . ID PIZQ exp_ciclo PDER
    (71) llamada_func -> . THIS PUNTO ID PIZQ exp_ciclo PDER
    (72) llamada_func -> . ID PUNTO ID PIZQ exp_ciclo PDER
    (73) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER
    (74) llamada_func -> . ID PIZQ PDER
    (75) llamada_func -> . THIS PUNTO ID PIZQ PDER
    (76) llamada_func -> . ID PUNTO ID PIZQ PDER
    (77) llamada_func -> . ID COIZQ exp CODER PUNTO ID PIZQ PDER
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (119) atom -> . ID PUNTO ID COIZQ exp CODER
    (120) atom -> . ID PUNTO ID
    (121) atom -> . ID COIZQ exp CODER PUNTO ID COIZQ exp CODER
    (122) atom -> . ID COIZQ exp CODER PUNTO ID
    (123) atom -> . ID
    (124) atom -> . ID COIZQ exp CODER
    (125) atom -> . THIS PUNTO ID
    (126) atom -> . THIS PUNTO ID COIZQ exp CODER
    (129) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (130) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (131) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (132) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 307
    WHILE           shift and go to state 113
    OUTPUT          shift and go to state 130
    INPUT           shift and go to state 121
    ID              shift and go to state 182
    THIS            shift and go to state 126
    RETURN          shift and go to state 110
    IF              shift and go to state 124

    return                         shift and go to state 114
    asignacion                     shift and go to state 125
    estatuto                       shift and go to state 180
    lectura                        shift and go to state 119
    while                          shift and go to state 129
    condicion                      shift and go to state 118
    atom                           shift and go to state 112
    llamada_func                   shift and go to state 122
    ciclo_cond                     shift and go to state 128
    escritura                      shift and go to state 131

state 304

    (73) llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .

    MAS             reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    POR             reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    AND             reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    OR              reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    PYC             reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 73 (llamada_func -> ID COIZQ exp CODER PUNTO ID PIZQ exp_ciclo PDER .)


state 305

    (121) atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .

    MAS             reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MENOS           reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MOD             reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    ENTRE           reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    POR             reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    IGUALC          reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MENOR           reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MAYOR           reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    AND             reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    OR              reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    PYC             reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    IGUAL           reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    PDER            reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    COMA            reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)
    CODER           reduce using rule 121 (atom -> ID COIZQ exp CODER PUNTO ID COIZQ exp CODER .)


state 306

    (40) ciclo_id -> ciclo_id COMA ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER .

    COMA            reduce using rule 40 (ciclo_id -> ciclo_id COMA ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER .)
    PYC             reduce using rule 40 (ciclo_id -> ciclo_id COMA ID COIZQ exp CODER IGUAL NEW ID PIZQ PDER .)


state 307

    (131) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 131 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)

