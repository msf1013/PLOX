Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ciclo_clase clase_main
Rule 2     programa -> clase_main
Rule 3     ciclo_clase -> clase
Rule 4     ciclo_clase -> ciclo_clase clase
Rule 5     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
Rule 6     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
Rule 7     clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
Rule 8     clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual
Rule 9     declararClase -> <empty>
Rule 10    limpiarMetodoActual -> <empty>
Rule 11    limpiarInvocador -> <empty>
Rule 12    herencia -> empty
Rule 13    herencia -> UNDER ID agregaAncestro
Rule 14    agregaAncestro -> <empty>
Rule 15    ciclo_vars -> acceso vars
Rule 16    ciclo_vars -> ciclo_vars acceso vars
Rule 17    ciclo_func -> func
Rule 18    ciclo_func -> ciclo_func func
Rule 19    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
Rule 20    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
Rule 21    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
Rule 22    clase_main -> CLASS MAIN declararClase LLIZQ main LLDER
Rule 23    vars -> var_op PYC
Rule 24    var_op -> tipo ciclo_tipo
Rule 25    var_op -> ID revisarExistenciaClase DOSP ciclo_id
Rule 26    revisarExistenciaClase -> <empty>
Rule 27    ciclo_tipo -> ID declararVariable
Rule 28    ciclo_tipo -> ID COIZQ cte_numeral CODER declararVariableDim
Rule 29    ciclo_tipo -> ciclo_tipo COMA ID declararVariable
Rule 30    ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim
Rule 31    ciclo_id -> ID declararVariable
Rule 32    ciclo_id -> ciclo_id COMA ID declararVariable
Rule 33    declararVariableDim -> <empty>
Rule 34    declararVariable -> <empty>
Rule 35    tipo -> NUMERAL
Rule 36    tipo -> REAL
Rule 37    tipo -> BOOL
Rule 38    tipo -> CHAR
Rule 39    tipo -> STRING
Rule 40    acceso -> HIDDEN
Rule 41    acceso -> VISIBLE
Rule 42    func -> acceso tipo ID declararMetodo params cuerpo_func
Rule 43    func -> acceso WITHOUT ID declararMetodo params cuerpo_func
Rule 44    declararMetodo -> <empty>
Rule 45    main -> acceso WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
Rule 46    rellenaCuadInicial -> <empty>
Rule 47    params -> PIZQ params_ciclo PDER
Rule 48    params -> PIZQ PDER
Rule 49    params_ciclo -> tipo ID meterParametros
Rule 50    params_ciclo -> tipo ID COIZQ cte_numeral CODER meterParametrosDim
Rule 51    params_ciclo -> params_ciclo COMA tipo ID meterParametros
Rule 52    params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim
Rule 53    meterParametrosDim -> <empty>
Rule 54    meterParametros -> <empty>
Rule 55    tamMetodo -> <empty>
Rule 56    cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER tamMetodo
Rule 57    cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER tamMetodo
Rule 58    cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER tamMetodo
Rule 59    cuerpo_func -> inicioFunc LLIZQ LLDER tamMetodo
Rule 60    inicioFunc -> <empty>
Rule 61    ciclo_vars_func -> vars
Rule 62    ciclo_vars_func -> ciclo_vars_func vars
Rule 63    ciclo_estatuto -> estatuto
Rule 64    ciclo_estatuto -> ciclo_estatuto estatuto
Rule 65    estatuto -> while
Rule 66    estatuto -> asignacion
Rule 67    estatuto -> condicion
Rule 68    estatuto -> escritura
Rule 69    estatuto -> lectura
Rule 70    estatuto -> llamada_func limpiarInvocador PYC
Rule 71    estatuto -> return
Rule 72    llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
Rule 73    llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
Rule 74    llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
Rule 75    llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
Rule 76    generarGosub -> <empty>
Rule 77    generaEra -> <empty>
Rule 78    checarFuncion -> <empty>
Rule 79    definirInvocador -> <empty>
Rule 80    exp_ciclo -> exp
Rule 81    exp_ciclo -> exp_ciclo COMA exp
Rule 82    exp -> LEN PIZQ atom PDER
Rule 83    exp -> CHARAT PIZQ atom COMA exp PDER
Rule 84    exp -> exp MAS exp
Rule 85    exp -> exp MENOS exp
Rule 86    exp -> exp POR exp
Rule 87    exp -> exp ENTRE exp
Rule 88    exp -> exp MOD exp
Rule 89    exp -> exp IGUALC exp
Rule 90    exp -> exp NOTIGUAL exp
Rule 91    exp -> exp MAYOR exp
Rule 92    exp -> exp MAYORIGUAL exp
Rule 93    exp -> exp MENOR exp
Rule 94    exp -> exp MENORIGUAL exp
Rule 95    exp -> exp AND exp
Rule 96    exp -> exp OR exp
Rule 97    exp -> NOT exp
Rule 98    exp -> MENOS exp
Rule 99    exp -> PIZQ exp PDER
Rule 100   exp -> cte_str
Rule 101   exp -> cte_char
Rule 102   exp -> cte_numeral
Rule 103   exp -> cte_real
Rule 104   exp -> cte_bool
Rule 105   exp -> atom limpiarInvocador
Rule 106   exp -> llamada_func limpiarInvocador
Rule 107   cte_str -> CTE_STR
Rule 108   cte_char -> CTE_CHAR
Rule 109   cte_numeral -> CTE_NUMERAL
Rule 110   cte_real -> CTE_REAL
Rule 111   cte_bool -> TRUE
Rule 112   cte_bool -> FALSE
Rule 113   return -> RETURN exp PYC
Rule 114   return -> RETURN PYC
Rule 115   while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
Rule 116   while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
Rule 117   while_1 -> <empty>
Rule 118   while_2 -> <empty>
Rule 119   while_3 -> <empty>
Rule 120   asignacion -> atom limpiarInvocador IGUAL exp PYC
Rule 121   atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
Rule 122   atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER
Rule 123   atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
Rule 124   atom -> ID PUNTO definirInvocador ID checarAtributo
Rule 125   atom -> ID checarAtributo
Rule 126   atom -> THIS PUNTO definirInvocador ID checarAtributo
Rule 127   checarAtributoDim -> <empty>
Rule 128   checarAtributo -> <empty>
Rule 129   condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
Rule 130   condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4
Rule 131   condicion -> ciclo_cond if_4
Rule 132   ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
Rule 133   ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
Rule 134   ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
Rule 135   ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER
Rule 136   if_1 -> <empty>
Rule 137   if_2 -> <empty>
Rule 138   if_3 -> <empty>
Rule 139   if_4 -> <empty>
Rule 140   lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC
Rule 141   escritura -> OUTPUT PIZQ exp PDER PYC
Rule 142   empty -> <empty>

Terminals, with rules where they appear

AND                  : 95
BOOL                 : 37
CHAR                 : 38
CHARAT               : 83
CLASS                : 5 6 7 8 19 20 21 22
CODER                : 28 30 50 52 121 122 123
COIZQ                : 28 30 50 52 121 122 123
COMA                 : 29 30 32 51 52 81 83
CTE_CHAR             : 108
CTE_NUMERAL          : 109
CTE_REAL             : 110
CTE_STR              : 107
DOSP                 : 25
ELSE                 : 129 130 134 135
ENTRE                : 87
FALSE                : 112
HIDDEN               : 40
ID                   : 5 6 7 8 13 25 27 28 29 30 31 32 42 43 49 50 51 52 72 72 73 73 74 75 121 121 122 123 124 124 125 126
IF                   : 132 133 134 135
IGUAL                : 120
IGUALC               : 89
INPUT                : 140
LEN                  : 82
LLDER                : 5 6 7 8 19 20 21 22 56 57 58 59 115 116 129 130 132 133 134 135
LLIZQ                : 5 6 7 8 19 20 21 22 56 57 58 59 115 116 129 130 132 133 134 135
MAIN                 : 19 20 21 22 45
MAS                  : 84
MAYOR                : 91
MAYORIGUAL           : 92
MENOR                : 93
MENORIGUAL           : 94
MENOS                : 85 98
MOD                  : 88
NOT                  : 97
NOTIGUAL             : 90
NUMERAL              : 35
OR                   : 96
OUTPUT               : 141
PDER                 : 45 47 48 72 73 74 75 82 83 99 115 116 132 133 134 135 140 141
PIZQ                 : 45 47 48 72 73 74 75 82 83 99 115 116 132 133 134 135 140 141
POR                  : 86
PUNTO                : 72 73 121 123 124 126
PYC                  : 23 70 113 114 120 140 141
REAL                 : 36
RETURN               : 113 114
STRING               : 39
THIS                 : 123 126
TRUE                 : 111
UNDER                : 13
VISIBLE              : 41
WHILE                : 115 116
WITHOUT              : 43 45
error                : 

Nonterminals, with rules where they appear

acceso               : 15 16 42 43 45
agregaAncestro       : 13
asignacion           : 66
atom                 : 82 83 105 120 140
checarAtributo       : 124 125 126
checarAtributoDim    : 121 122 123
checarFuncion        : 72 73 74 75
ciclo_clase          : 1 4
ciclo_cond           : 129 130 131 134 135
ciclo_estatuto       : 56 58 64 115 129 132 134
ciclo_func           : 5 7 18 19 21
ciclo_id             : 25 32
ciclo_tipo           : 24 29 30
ciclo_vars           : 5 6 16 19 20
ciclo_vars_func      : 56 57 62
clase                : 3 4
clase_main           : 1 2
condicion            : 67
cte_bool             : 104
cte_char             : 101
cte_numeral          : 28 30 50 52 102
cte_real             : 103
cte_str              : 100
cuerpo_func          : 42 43 45
declararClase        : 5 6 7 8 19 20 21 22
declararMetodo       : 42 43 45
declararVariable     : 27 29 31 32
declararVariableDim  : 28 30
definirInvocador     : 72 73 121 123 124 126
empty                : 12
escritura            : 68
estatuto             : 63 64
exp                  : 80 81 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 98 99 113 115 116 120 121 122 123 132 133 134 135 141
exp_ciclo            : 72 74 81
func                 : 17 18
generaEra            : 72 73 74 75
generarGosub         : 72 73 74 75
herencia             : 5 6 7 8
if_1                 : 132 133 134 135
if_2                 : 132 133 134 135
if_3                 : 129 130 134 135
if_4                 : 129 130 131
inicioFunc           : 56 57 58 59
lectura              : 69
limpiarInvocador     : 70 72 73 74 75 105 106 120 121 122 123 140
limpiarMetodoActual  : 5 6 7 8
llamada_func         : 70 106
main                 : 19 20 21 22
meterParametros      : 49 51
meterParametrosDim   : 50 52
params               : 42 43
params_ciclo         : 47 51 52
programa             : 0
rellenaCuadInicial   : 45
return               : 71
revisarExistenciaClase : 25
tamMetodo            : 56 57 58 59
tipo                 : 24 42 49 50 51 52
var_op               : 23
vars                 : 15 16 61 62
while                : 65
while_1              : 115 116
while_2              : 115 116
while_3              : 115 116

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ciclo_clase clase_main
    (2) programa -> . clase_main
    (3) ciclo_clase -> . clase
    (4) ciclo_clase -> . ciclo_clase clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    ciclo_clase                    shift and go to state 1
    clase_main                     shift and go to state 2
    clase                          shift and go to state 3
    programa                       shift and go to state 4

state 1

    (1) programa -> ciclo_clase . clase_main
    (4) ciclo_clase -> ciclo_clase . clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    clase_main                     shift and go to state 6
    clase                          shift and go to state 7

state 2

    (2) programa -> clase_main .

    $end            reduce using rule 2 (programa -> clase_main .)


state 3

    (3) ciclo_clase -> clase .

    CLASS           reduce using rule 3 (ciclo_clase -> clase .)


state 4

    (0) S' -> programa .



state 5

    (19) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS . MAIN declararClase LLIZQ main LLDER
    (5) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS . ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    MAIN            shift and go to state 8
    ID              shift and go to state 9


state 6

    (1) programa -> ciclo_clase clase_main .

    $end            reduce using rule 1 (programa -> ciclo_clase clase_main .)


state 7

    (4) ciclo_clase -> ciclo_clase clase .

    CLASS           reduce using rule 4 (ciclo_clase -> ciclo_clase clase .)


state 8

    (19) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN . declararClase LLIZQ main LLDER
    (9) declararClase -> .

    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 10

state 9

    (5) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID . declararClase herencia LLIZQ LLDER limpiarMetodoActual
    (9) declararClase -> .

    UNDER           reduce using rule 9 (declararClase -> .)
    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 11

state 10

    (19) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase . LLIZQ main LLDER

    LLIZQ           shift and go to state 12


state 11

    (5) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase . herencia LLIZQ LLDER limpiarMetodoActual
    (12) herencia -> . empty
    (13) herencia -> . UNDER ID agregaAncestro
    (142) empty -> .

    UNDER           shift and go to state 13
    LLIZQ           reduce using rule 142 (empty -> .)

    herencia                       shift and go to state 14
    empty                          shift and go to state 15

state 12

    (19) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase LLIZQ . main LLDER
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (45) main -> . acceso WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 17
    ciclo_func                     shift and go to state 18
    ciclo_vars                     shift and go to state 16
    func                           shift and go to state 21
    main                           shift and go to state 20

state 13

    (13) herencia -> UNDER . ID agregaAncestro

    ID              shift and go to state 23


state 14

    (5) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia . LLIZQ LLDER limpiarMetodoActual

    LLIZQ           shift and go to state 24


state 15

    (12) herencia -> empty .

    LLIZQ           reduce using rule 12 (herencia -> empty .)


state 16

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . main LLDER
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (45) main -> . acceso WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 25
    ciclo_func                     shift and go to state 26
    func                           shift and go to state 21
    main                           shift and go to state 27

state 17

    (15) ciclo_vars -> acceso . vars
    (45) main -> acceso . WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 35
    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34
    ID              shift and go to state 36

    vars                           shift and go to state 32
    tipo                           shift and go to state 33
    var_op                         shift and go to state 30

state 18

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (45) main -> . acceso WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 38
    func                           shift and go to state 39
    main                           shift and go to state 40

state 19

    (41) acceso -> VISIBLE .

    WITHOUT         reduce using rule 41 (acceso -> VISIBLE .)
    NUMERAL         reduce using rule 41 (acceso -> VISIBLE .)
    REAL            reduce using rule 41 (acceso -> VISIBLE .)
    BOOL            reduce using rule 41 (acceso -> VISIBLE .)
    CHAR            reduce using rule 41 (acceso -> VISIBLE .)
    STRING          reduce using rule 41 (acceso -> VISIBLE .)
    ID              reduce using rule 41 (acceso -> VISIBLE .)


state 20

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main . LLDER

    LLDER           shift and go to state 41


state 21

    (17) ciclo_func -> func .

    LLDER           reduce using rule 17 (ciclo_func -> func .)
    HIDDEN          reduce using rule 17 (ciclo_func -> func .)
    VISIBLE         reduce using rule 17 (ciclo_func -> func .)


state 22

    (40) acceso -> HIDDEN .

    WITHOUT         reduce using rule 40 (acceso -> HIDDEN .)
    NUMERAL         reduce using rule 40 (acceso -> HIDDEN .)
    REAL            reduce using rule 40 (acceso -> HIDDEN .)
    BOOL            reduce using rule 40 (acceso -> HIDDEN .)
    CHAR            reduce using rule 40 (acceso -> HIDDEN .)
    STRING          reduce using rule 40 (acceso -> HIDDEN .)
    ID              reduce using rule 40 (acceso -> HIDDEN .)


state 23

    (13) herencia -> UNDER ID . agregaAncestro
    (14) agregaAncestro -> .

    LLIZQ           reduce using rule 14 (agregaAncestro -> .)

    agregaAncestro                 shift and go to state 42

state 24

    (5) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia LLIZQ . LLDER limpiarMetodoActual
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 43
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 45
    ciclo_func                     shift and go to state 44
    ciclo_vars                     shift and go to state 46
    func                           shift and go to state 21

state 25

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (45) main -> acceso . WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 35
    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34
    ID              shift and go to state 36

    tipo                           shift and go to state 33
    vars                           shift and go to state 47
    var_op                         shift and go to state 30

state 26

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (45) main -> . acceso WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 38
    func                           shift and go to state 39
    main                           shift and go to state 48

state 27

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main . LLDER

    LLDER           shift and go to state 49


state 28

    (36) tipo -> REAL .

    ID              reduce using rule 36 (tipo -> REAL .)


state 29

    (38) tipo -> CHAR .

    ID              reduce using rule 38 (tipo -> CHAR .)


state 30

    (23) vars -> var_op . PYC

    PYC             shift and go to state 50


state 31

    (35) tipo -> NUMERAL .

    ID              reduce using rule 35 (tipo -> NUMERAL .)


state 32

    (15) ciclo_vars -> acceso vars .

    HIDDEN          reduce using rule 15 (ciclo_vars -> acceso vars .)
    VISIBLE         reduce using rule 15 (ciclo_vars -> acceso vars .)
    LLDER           reduce using rule 15 (ciclo_vars -> acceso vars .)


state 33

    (42) func -> acceso tipo . ID declararMetodo params cuerpo_func
    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID COIZQ cte_numeral CODER declararVariableDim
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim

    ID              shift and go to state 52

    ciclo_tipo                     shift and go to state 51

state 34

    (39) tipo -> STRING .

    ID              reduce using rule 39 (tipo -> STRING .)


state 35

    (45) main -> acceso WITHOUT . MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
    (43) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    MAIN            shift and go to state 54
    ID              shift and go to state 53


state 36

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (26) revisarExistenciaClase -> .

    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)

    revisarExistenciaClase         shift and go to state 55

state 37

    (37) tipo -> BOOL .

    ID              reduce using rule 37 (tipo -> BOOL .)


state 38

    (45) main -> acceso . WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING

    WITHOUT         shift and go to state 35
    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34

    tipo                           shift and go to state 56

state 39

    (18) ciclo_func -> ciclo_func func .

    LLDER           reduce using rule 18 (ciclo_func -> ciclo_func func .)
    HIDDEN          reduce using rule 18 (ciclo_func -> ciclo_func func .)
    VISIBLE         reduce using rule 18 (ciclo_func -> ciclo_func func .)


state 40

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main . LLDER

    LLDER           shift and go to state 57


state 41

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .

    $end            reduce using rule 22 (clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .)


state 42

    (13) herencia -> UNDER ID agregaAncestro .

    LLIZQ           reduce using rule 13 (herencia -> UNDER ID agregaAncestro .)


state 43

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 58

state 44

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE

    LLDER           shift and go to state 59
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 60
    func                           shift and go to state 39

state 45

    (15) ciclo_vars -> acceso . vars
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34
    ID              shift and go to state 36

    vars                           shift and go to state 32
    tipo                           shift and go to state 33
    var_op                         shift and go to state 30

state 46

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . LLDER limpiarMetodoActual
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 62
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 64
    ciclo_func                     shift and go to state 63
    func                           shift and go to state 21

state 47

    (16) ciclo_vars -> ciclo_vars acceso vars .

    HIDDEN          reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    VISIBLE         reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    LLDER           reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)


state 48

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main . LLDER

    LLDER           shift and go to state 65


state 49

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .

    $end            reduce using rule 20 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .)


state 50

    (23) vars -> var_op PYC .

    HIDDEN          reduce using rule 23 (vars -> var_op PYC .)
    VISIBLE         reduce using rule 23 (vars -> var_op PYC .)
    LLDER           reduce using rule 23 (vars -> var_op PYC .)
    ID              reduce using rule 23 (vars -> var_op PYC .)
    WHILE           reduce using rule 23 (vars -> var_op PYC .)
    OUTPUT          reduce using rule 23 (vars -> var_op PYC .)
    INPUT           reduce using rule 23 (vars -> var_op PYC .)
    RETURN          reduce using rule 23 (vars -> var_op PYC .)
    NUMERAL         reduce using rule 23 (vars -> var_op PYC .)
    REAL            reduce using rule 23 (vars -> var_op PYC .)
    BOOL            reduce using rule 23 (vars -> var_op PYC .)
    CHAR            reduce using rule 23 (vars -> var_op PYC .)
    STRING          reduce using rule 23 (vars -> var_op PYC .)
    THIS            reduce using rule 23 (vars -> var_op PYC .)
    IF              reduce using rule 23 (vars -> var_op PYC .)


state 51

    (24) var_op -> tipo ciclo_tipo .
    (29) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo . COMA ID COIZQ cte_numeral CODER declararVariableDim

    PYC             reduce using rule 24 (var_op -> tipo ciclo_tipo .)
    COMA            shift and go to state 66


state 52

    (42) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . COIZQ cte_numeral CODER declararVariableDim
    (44) declararMetodo -> .
    (34) declararVariable -> .

    COIZQ           shift and go to state 69
    PIZQ            reduce using rule 44 (declararMetodo -> .)
    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 67
    declararMetodo                 shift and go to state 68

state 53

    (43) func -> acceso WITHOUT ID . declararMetodo params cuerpo_func
    (44) declararMetodo -> .

    PIZQ            reduce using rule 44 (declararMetodo -> .)

    declararMetodo                 shift and go to state 70

state 54

    (45) main -> acceso WITHOUT MAIN . rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func
    (46) rellenaCuadInicial -> .

    PIZQ            reduce using rule 46 (rellenaCuadInicial -> .)

    rellenaCuadInicial             shift and go to state 71

state 55

    (25) var_op -> ID revisarExistenciaClase . DOSP ciclo_id

    DOSP            shift and go to state 72


state 56

    (42) func -> acceso tipo . ID declararMetodo params cuerpo_func

    ID              shift and go to state 73


state 57

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .

    $end            reduce using rule 21 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .)


state 58

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .

    CLASS           reduce using rule 8 (clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .)


state 59

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 74

state 60

    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34

    tipo                           shift and go to state 56

state 61

    (43) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    ID              shift and go to state 53


state 62

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 75

state 63

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (42) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (43) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (40) acceso -> . HIDDEN
    (41) acceso -> . VISIBLE

    LLDER           shift and go to state 76
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 60
    func                           shift and go to state 39

state 64

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (42) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (43) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id

    WITHOUT         shift and go to state 61
    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34
    ID              shift and go to state 36

    vars                           shift and go to state 47
    tipo                           shift and go to state 33
    var_op                         shift and go to state 30

state 65

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .

    $end            reduce using rule 19 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .)


state 66

    (29) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA . ID COIZQ cte_numeral CODER declararVariableDim

    ID              shift and go to state 77


state 67

    (27) ciclo_tipo -> ID declararVariable .

    COMA            reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    PYC             reduce using rule 27 (ciclo_tipo -> ID declararVariable .)


state 68

    (42) func -> acceso tipo ID declararMetodo . params cuerpo_func
    (47) params -> . PIZQ params_ciclo PDER
    (48) params -> . PIZQ PDER

    PIZQ            shift and go to state 78

    params                         shift and go to state 79

state 69

    (28) ciclo_tipo -> ID COIZQ . cte_numeral CODER declararVariableDim
    (109) cte_numeral -> . CTE_NUMERAL

    CTE_NUMERAL     shift and go to state 81

    cte_numeral                    shift and go to state 80

state 70

    (43) func -> acceso WITHOUT ID declararMetodo . params cuerpo_func
    (47) params -> . PIZQ params_ciclo PDER
    (48) params -> . PIZQ PDER

    PIZQ            shift and go to state 78

    params                         shift and go to state 82

state 71

    (45) main -> acceso WITHOUT MAIN rellenaCuadInicial . declararMetodo PIZQ PDER cuerpo_func
    (44) declararMetodo -> .

    PIZQ            reduce using rule 44 (declararMetodo -> .)

    declararMetodo                 shift and go to state 83

state 72

    (25) var_op -> ID revisarExistenciaClase DOSP . ciclo_id
    (31) ciclo_id -> . ID declararVariable
    (32) ciclo_id -> . ciclo_id COMA ID declararVariable

    ID              shift and go to state 85

    ciclo_id                       shift and go to state 84

state 73

    (42) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (44) declararMetodo -> .

    PIZQ            reduce using rule 44 (declararMetodo -> .)

    declararMetodo                 shift and go to state 68

state 74

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 7 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .)


state 75

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .

    CLASS           reduce using rule 6 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .)


state 76

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 86

state 77

    (29) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA ID . COIZQ cte_numeral CODER declararVariableDim
    (34) declararVariable -> .

    COIZQ           shift and go to state 88
    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 87

state 78

    (47) params -> PIZQ . params_ciclo PDER
    (48) params -> PIZQ . PDER
    (49) params_ciclo -> . tipo ID meterParametros
    (50) params_ciclo -> . tipo ID COIZQ cte_numeral CODER meterParametrosDim
    (51) params_ciclo -> . params_ciclo COMA tipo ID meterParametros
    (52) params_ciclo -> . params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING

    PDER            shift and go to state 91
    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34

    tipo                           shift and go to state 89
    params_ciclo                   shift and go to state 90

state 79

    (42) func -> acceso tipo ID declararMetodo params . cuerpo_func
    (56) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER tamMetodo
    (57) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func LLDER tamMetodo
    (58) cuerpo_func -> . inicioFunc LLIZQ ciclo_estatuto LLDER tamMetodo
    (59) cuerpo_func -> . inicioFunc LLIZQ LLDER tamMetodo
    (60) inicioFunc -> .

    LLIZQ           reduce using rule 60 (inicioFunc -> .)

    inicioFunc                     shift and go to state 92
    cuerpo_func                    shift and go to state 93

state 80

    (28) ciclo_tipo -> ID COIZQ cte_numeral . CODER declararVariableDim

    CODER           shift and go to state 94


state 81

    (109) cte_numeral -> CTE_NUMERAL .

    MAS             reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    MENOS           reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    POR             reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    ENTRE           reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    MOD             reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    IGUALC          reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    MAYOR           reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    MENOR           reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    AND             reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    OR              reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    PYC             reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    PDER            reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    CODER           reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)
    COMA            reduce using rule 109 (cte_numeral -> CTE_NUMERAL .)


state 82

    (43) func -> acceso WITHOUT ID declararMetodo params . cuerpo_func
    (56) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER tamMetodo
    (57) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func LLDER tamMetodo
    (58) cuerpo_func -> . inicioFunc LLIZQ ciclo_estatuto LLDER tamMetodo
    (59) cuerpo_func -> . inicioFunc LLIZQ LLDER tamMetodo
    (60) inicioFunc -> .

    LLIZQ           reduce using rule 60 (inicioFunc -> .)

    inicioFunc                     shift and go to state 92
    cuerpo_func                    shift and go to state 95

state 83

    (45) main -> acceso WITHOUT MAIN rellenaCuadInicial declararMetodo . PIZQ PDER cuerpo_func

    PIZQ            shift and go to state 96


state 84

    (25) var_op -> ID revisarExistenciaClase DOSP ciclo_id .
    (32) ciclo_id -> ciclo_id . COMA ID declararVariable

    PYC             reduce using rule 25 (var_op -> ID revisarExistenciaClase DOSP ciclo_id .)
    COMA            shift and go to state 97


state 85

    (31) ciclo_id -> ID . declararVariable
    (34) declararVariable -> .

    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 98

state 86

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 5 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .)


state 87

    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable .

    COMA            reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    PYC             reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)


state 88

    (30) ciclo_tipo -> ciclo_tipo COMA ID COIZQ . cte_numeral CODER declararVariableDim
    (109) cte_numeral -> . CTE_NUMERAL

    CTE_NUMERAL     shift and go to state 81

    cte_numeral                    shift and go to state 99

state 89

    (49) params_ciclo -> tipo . ID meterParametros
    (50) params_ciclo -> tipo . ID COIZQ cte_numeral CODER meterParametrosDim

    ID              shift and go to state 100


state 90

    (47) params -> PIZQ params_ciclo . PDER
    (51) params_ciclo -> params_ciclo . COMA tipo ID meterParametros
    (52) params_ciclo -> params_ciclo . COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim

    PDER            shift and go to state 101
    COMA            shift and go to state 102


state 91

    (48) params -> PIZQ PDER .

    LLIZQ           reduce using rule 48 (params -> PIZQ PDER .)


state 92

    (56) cuerpo_func -> inicioFunc . LLIZQ ciclo_vars_func ciclo_estatuto LLDER tamMetodo
    (57) cuerpo_func -> inicioFunc . LLIZQ ciclo_vars_func LLDER tamMetodo
    (58) cuerpo_func -> inicioFunc . LLIZQ ciclo_estatuto LLDER tamMetodo
    (59) cuerpo_func -> inicioFunc . LLIZQ LLDER tamMetodo

    LLIZQ           shift and go to state 103


state 93

    (42) func -> acceso tipo ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 42 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 42 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 42 (func -> acceso tipo ID declararMetodo params cuerpo_func .)


state 94

    (28) ciclo_tipo -> ID COIZQ cte_numeral CODER . declararVariableDim
    (33) declararVariableDim -> .

    COMA            reduce using rule 33 (declararVariableDim -> .)
    PYC             reduce using rule 33 (declararVariableDim -> .)

    declararVariableDim            shift and go to state 104

state 95

    (43) func -> acceso WITHOUT ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 43 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 43 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 43 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)


state 96

    (45) main -> acceso WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ . PDER cuerpo_func

    PDER            shift and go to state 105


state 97

    (32) ciclo_id -> ciclo_id COMA . ID declararVariable

    ID              shift and go to state 106


state 98

    (31) ciclo_id -> ID declararVariable .

    COMA            reduce using rule 31 (ciclo_id -> ID declararVariable .)
    PYC             reduce using rule 31 (ciclo_id -> ID declararVariable .)


state 99

    (30) ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral . CODER declararVariableDim

    CODER           shift and go to state 107


state 100

    (49) params_ciclo -> tipo ID . meterParametros
    (50) params_ciclo -> tipo ID . COIZQ cte_numeral CODER meterParametrosDim
    (54) meterParametros -> .

    COIZQ           shift and go to state 109
    PDER            reduce using rule 54 (meterParametros -> .)
    COMA            reduce using rule 54 (meterParametros -> .)

    meterParametros                shift and go to state 108

state 101

    (47) params -> PIZQ params_ciclo PDER .

    LLIZQ           reduce using rule 47 (params -> PIZQ params_ciclo PDER .)


state 102

    (51) params_ciclo -> params_ciclo COMA . tipo ID meterParametros
    (52) params_ciclo -> params_ciclo COMA . tipo ID COIZQ cte_numeral CODER meterParametrosDim
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING

    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34

    tipo                           shift and go to state 110

state 103

    (56) cuerpo_func -> inicioFunc LLIZQ . ciclo_vars_func ciclo_estatuto LLDER tamMetodo
    (57) cuerpo_func -> inicioFunc LLIZQ . ciclo_vars_func LLDER tamMetodo
    (58) cuerpo_func -> inicioFunc LLIZQ . ciclo_estatuto LLDER tamMetodo
    (59) cuerpo_func -> inicioFunc LLIZQ . LLDER tamMetodo
    (61) ciclo_vars_func -> . vars
    (62) ciclo_vars_func -> . ciclo_vars_func vars
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 121
    ID              shift and go to state 124
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    RETURN          shift and go to state 111
    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34
    THIS            shift and go to state 129
    IF              shift and go to state 125

    vars                           shift and go to state 112
    atom                           shift and go to state 113
    var_op                         shift and go to state 30
    llamada_func                   shift and go to state 123
    tipo                           shift and go to state 116
    estatuto                       shift and go to state 117
    ciclo_vars_func                shift and go to state 118
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 127
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 104

    (28) ciclo_tipo -> ID COIZQ cte_numeral CODER declararVariableDim .

    COMA            reduce using rule 28 (ciclo_tipo -> ID COIZQ cte_numeral CODER declararVariableDim .)
    PYC             reduce using rule 28 (ciclo_tipo -> ID COIZQ cte_numeral CODER declararVariableDim .)


state 105

    (45) main -> acceso WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER . cuerpo_func
    (56) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER tamMetodo
    (57) cuerpo_func -> . inicioFunc LLIZQ ciclo_vars_func LLDER tamMetodo
    (58) cuerpo_func -> . inicioFunc LLIZQ ciclo_estatuto LLDER tamMetodo
    (59) cuerpo_func -> . inicioFunc LLIZQ LLDER tamMetodo
    (60) inicioFunc -> .

    LLIZQ           reduce using rule 60 (inicioFunc -> .)

    inicioFunc                     shift and go to state 92
    cuerpo_func                    shift and go to state 133

state 106

    (32) ciclo_id -> ciclo_id COMA ID . declararVariable
    (34) declararVariable -> .

    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 134

state 107

    (30) ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER . declararVariableDim
    (33) declararVariableDim -> .

    COMA            reduce using rule 33 (declararVariableDim -> .)
    PYC             reduce using rule 33 (declararVariableDim -> .)

    declararVariableDim            shift and go to state 135

state 108

    (49) params_ciclo -> tipo ID meterParametros .

    PDER            reduce using rule 49 (params_ciclo -> tipo ID meterParametros .)
    COMA            reduce using rule 49 (params_ciclo -> tipo ID meterParametros .)


state 109

    (50) params_ciclo -> tipo ID COIZQ . cte_numeral CODER meterParametrosDim
    (109) cte_numeral -> . CTE_NUMERAL

    CTE_NUMERAL     shift and go to state 81

    cte_numeral                    shift and go to state 136

state 110

    (51) params_ciclo -> params_ciclo COMA tipo . ID meterParametros
    (52) params_ciclo -> params_ciclo COMA tipo . ID COIZQ cte_numeral CODER meterParametrosDim

    ID              shift and go to state 137


state 111

    (113) return -> RETURN . exp PYC
    (114) return -> RETURN . PYC
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    PYC             shift and go to state 157
    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 155
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 112

    (61) ciclo_vars_func -> vars .

    LLDER           reduce using rule 61 (ciclo_vars_func -> vars .)
    ID              reduce using rule 61 (ciclo_vars_func -> vars .)
    WHILE           reduce using rule 61 (ciclo_vars_func -> vars .)
    OUTPUT          reduce using rule 61 (ciclo_vars_func -> vars .)
    INPUT           reduce using rule 61 (ciclo_vars_func -> vars .)
    RETURN          reduce using rule 61 (ciclo_vars_func -> vars .)
    NUMERAL         reduce using rule 61 (ciclo_vars_func -> vars .)
    REAL            reduce using rule 61 (ciclo_vars_func -> vars .)
    BOOL            reduce using rule 61 (ciclo_vars_func -> vars .)
    CHAR            reduce using rule 61 (ciclo_vars_func -> vars .)
    STRING          reduce using rule 61 (ciclo_vars_func -> vars .)
    THIS            reduce using rule 61 (ciclo_vars_func -> vars .)
    IF              reduce using rule 61 (ciclo_vars_func -> vars .)


state 113

    (120) asignacion -> atom . limpiarInvocador IGUAL exp PYC
    (11) limpiarInvocador -> .

    IGUAL           reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 158

state 114

    (115) while -> WHILE . while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> WHILE . while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (117) while_1 -> .

    PIZQ            reduce using rule 117 (while_1 -> .)

    while_1                        shift and go to state 159

state 115

    (71) estatuto -> return .

    WHILE           reduce using rule 71 (estatuto -> return .)
    OUTPUT          reduce using rule 71 (estatuto -> return .)
    INPUT           reduce using rule 71 (estatuto -> return .)
    ID              reduce using rule 71 (estatuto -> return .)
    RETURN          reduce using rule 71 (estatuto -> return .)
    THIS            reduce using rule 71 (estatuto -> return .)
    IF              reduce using rule 71 (estatuto -> return .)
    LLDER           reduce using rule 71 (estatuto -> return .)


state 116

    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID COIZQ cte_numeral CODER declararVariableDim
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim

    ID              shift and go to state 160

    ciclo_tipo                     shift and go to state 51

state 117

    (63) ciclo_estatuto -> estatuto .

    WHILE           reduce using rule 63 (ciclo_estatuto -> estatuto .)
    OUTPUT          reduce using rule 63 (ciclo_estatuto -> estatuto .)
    INPUT           reduce using rule 63 (ciclo_estatuto -> estatuto .)
    ID              reduce using rule 63 (ciclo_estatuto -> estatuto .)
    RETURN          reduce using rule 63 (ciclo_estatuto -> estatuto .)
    THIS            reduce using rule 63 (ciclo_estatuto -> estatuto .)
    IF              reduce using rule 63 (ciclo_estatuto -> estatuto .)
    LLDER           reduce using rule 63 (ciclo_estatuto -> estatuto .)


state 118

    (56) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func . ciclo_estatuto LLDER tamMetodo
    (57) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func . LLDER tamMetodo
    (62) ciclo_vars_func -> ciclo_vars_func . vars
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID revisarExistenciaClase DOSP ciclo_id
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (35) tipo -> . NUMERAL
    (36) tipo -> . REAL
    (37) tipo -> . BOOL
    (38) tipo -> . CHAR
    (39) tipo -> . STRING
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 162
    ID              shift and go to state 124
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    RETURN          shift and go to state 111
    NUMERAL         shift and go to state 31
    REAL            shift and go to state 28
    BOOL            shift and go to state 37
    CHAR            shift and go to state 29
    STRING          shift and go to state 34
    THIS            shift and go to state 129
    IF              shift and go to state 125

    vars                           shift and go to state 161
    atom                           shift and go to state 113
    var_op                         shift and go to state 30
    llamada_func                   shift and go to state 123
    tipo                           shift and go to state 116
    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 163
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 119

    (67) estatuto -> condicion .

    WHILE           reduce using rule 67 (estatuto -> condicion .)
    OUTPUT          reduce using rule 67 (estatuto -> condicion .)
    INPUT           reduce using rule 67 (estatuto -> condicion .)
    ID              reduce using rule 67 (estatuto -> condicion .)
    RETURN          reduce using rule 67 (estatuto -> condicion .)
    THIS            reduce using rule 67 (estatuto -> condicion .)
    IF              reduce using rule 67 (estatuto -> condicion .)
    LLDER           reduce using rule 67 (estatuto -> condicion .)


state 120

    (69) estatuto -> lectura .

    WHILE           reduce using rule 69 (estatuto -> lectura .)
    OUTPUT          reduce using rule 69 (estatuto -> lectura .)
    INPUT           reduce using rule 69 (estatuto -> lectura .)
    ID              reduce using rule 69 (estatuto -> lectura .)
    RETURN          reduce using rule 69 (estatuto -> lectura .)
    THIS            reduce using rule 69 (estatuto -> lectura .)
    IF              reduce using rule 69 (estatuto -> lectura .)
    LLDER           reduce using rule 69 (estatuto -> lectura .)


state 121

    (59) cuerpo_func -> inicioFunc LLIZQ LLDER . tamMetodo
    (55) tamMetodo -> .

    HIDDEN          reduce using rule 55 (tamMetodo -> .)
    VISIBLE         reduce using rule 55 (tamMetodo -> .)
    LLDER           reduce using rule 55 (tamMetodo -> .)

    tamMetodo                      shift and go to state 164

state 122

    (140) lectura -> INPUT . PIZQ atom limpiarInvocador PDER PYC

    PIZQ            shift and go to state 165


state 123

    (70) estatuto -> llamada_func . limpiarInvocador PYC
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 166

state 124

    (25) var_op -> ID . revisarExistenciaClase DOSP ciclo_id
    (72) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (121) atom -> ID . PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> ID . checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (125) atom -> ID . checarAtributo
    (26) revisarExistenciaClase -> .
    (78) checarFuncion -> .
    (127) checarAtributoDim -> .
    (128) checarAtributo -> .

    PUNTO           shift and go to state 168
    DOSP            reduce using rule 26 (revisarExistenciaClase -> .)
    PIZQ            reduce using rule 78 (checarFuncion -> .)
    COIZQ           reduce using rule 127 (checarAtributoDim -> .)
    IGUAL           reduce using rule 128 (checarAtributo -> .)

    checarAtributo                 shift and go to state 167
    checarFuncion                  shift and go to state 169
    checarAtributoDim              shift and go to state 170
    revisarExistenciaClase         shift and go to state 55

state 125

    (132) ciclo_cond -> IF . PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> IF . PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    PIZQ            shift and go to state 171


state 126

    (66) estatuto -> asignacion .

    WHILE           reduce using rule 66 (estatuto -> asignacion .)
    OUTPUT          reduce using rule 66 (estatuto -> asignacion .)
    INPUT           reduce using rule 66 (estatuto -> asignacion .)
    ID              reduce using rule 66 (estatuto -> asignacion .)
    RETURN          reduce using rule 66 (estatuto -> asignacion .)
    THIS            reduce using rule 66 (estatuto -> asignacion .)
    IF              reduce using rule 66 (estatuto -> asignacion .)
    LLDER           reduce using rule 66 (estatuto -> asignacion .)


state 127

    (58) cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto . LLDER tamMetodo
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 173
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 172
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 128

    (129) condicion -> ciclo_cond . ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> ciclo_cond . ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> ciclo_cond . if_4
    (134) ciclo_cond -> ciclo_cond . ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> ciclo_cond . ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (139) if_4 -> .

    ELSE            shift and go to state 176
    LLDER           reduce using rule 139 (if_4 -> .)
    WHILE           reduce using rule 139 (if_4 -> .)
    OUTPUT          reduce using rule 139 (if_4 -> .)
    INPUT           reduce using rule 139 (if_4 -> .)
    ID              reduce using rule 139 (if_4 -> .)
    RETURN          reduce using rule 139 (if_4 -> .)
    THIS            reduce using rule 139 (if_4 -> .)
    IF              reduce using rule 139 (if_4 -> .)

    if_4                           shift and go to state 175

state 129

    (123) atom -> THIS . PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (126) atom -> THIS . PUNTO definirInvocador ID checarAtributo

    PUNTO           shift and go to state 177


state 130

    (65) estatuto -> while .

    WHILE           reduce using rule 65 (estatuto -> while .)
    OUTPUT          reduce using rule 65 (estatuto -> while .)
    INPUT           reduce using rule 65 (estatuto -> while .)
    ID              reduce using rule 65 (estatuto -> while .)
    RETURN          reduce using rule 65 (estatuto -> while .)
    THIS            reduce using rule 65 (estatuto -> while .)
    IF              reduce using rule 65 (estatuto -> while .)
    LLDER           reduce using rule 65 (estatuto -> while .)


state 131

    (141) escritura -> OUTPUT . PIZQ exp PDER PYC

    PIZQ            shift and go to state 178


state 132

    (68) estatuto -> escritura .

    WHILE           reduce using rule 68 (estatuto -> escritura .)
    OUTPUT          reduce using rule 68 (estatuto -> escritura .)
    INPUT           reduce using rule 68 (estatuto -> escritura .)
    ID              reduce using rule 68 (estatuto -> escritura .)
    RETURN          reduce using rule 68 (estatuto -> escritura .)
    THIS            reduce using rule 68 (estatuto -> escritura .)
    IF              reduce using rule 68 (estatuto -> escritura .)
    LLDER           reduce using rule 68 (estatuto -> escritura .)


state 133

    (45) main -> acceso WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func .

    LLDER           reduce using rule 45 (main -> acceso WITHOUT MAIN rellenaCuadInicial declararMetodo PIZQ PDER cuerpo_func .)


state 134

    (32) ciclo_id -> ciclo_id COMA ID declararVariable .

    COMA            reduce using rule 32 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    PYC             reduce using rule 32 (ciclo_id -> ciclo_id COMA ID declararVariable .)


state 135

    (30) ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim .

    COMA            reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim .)
    PYC             reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID COIZQ cte_numeral CODER declararVariableDim .)


state 136

    (50) params_ciclo -> tipo ID COIZQ cte_numeral . CODER meterParametrosDim

    CODER           shift and go to state 179


state 137

    (51) params_ciclo -> params_ciclo COMA tipo ID . meterParametros
    (52) params_ciclo -> params_ciclo COMA tipo ID . COIZQ cte_numeral CODER meterParametrosDim
    (54) meterParametros -> .

    COIZQ           shift and go to state 181
    PDER            reduce using rule 54 (meterParametros -> .)
    COMA            reduce using rule 54 (meterParametros -> .)

    meterParametros                shift and go to state 180

state 138

    (99) exp -> PIZQ . exp PDER
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 182
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 139

    (104) exp -> cte_bool .

    MAS             reduce using rule 104 (exp -> cte_bool .)
    MENOS           reduce using rule 104 (exp -> cte_bool .)
    POR             reduce using rule 104 (exp -> cte_bool .)
    ENTRE           reduce using rule 104 (exp -> cte_bool .)
    MOD             reduce using rule 104 (exp -> cte_bool .)
    IGUALC          reduce using rule 104 (exp -> cte_bool .)
    NOTIGUAL        reduce using rule 104 (exp -> cte_bool .)
    MAYOR           reduce using rule 104 (exp -> cte_bool .)
    MAYORIGUAL      reduce using rule 104 (exp -> cte_bool .)
    MENOR           reduce using rule 104 (exp -> cte_bool .)
    MENORIGUAL      reduce using rule 104 (exp -> cte_bool .)
    AND             reduce using rule 104 (exp -> cte_bool .)
    OR              reduce using rule 104 (exp -> cte_bool .)
    PDER            reduce using rule 104 (exp -> cte_bool .)
    COMA            reduce using rule 104 (exp -> cte_bool .)
    CODER           reduce using rule 104 (exp -> cte_bool .)
    PYC             reduce using rule 104 (exp -> cte_bool .)


state 140

    (111) cte_bool -> TRUE .

    PDER            reduce using rule 111 (cte_bool -> TRUE .)
    MAS             reduce using rule 111 (cte_bool -> TRUE .)
    MENOS           reduce using rule 111 (cte_bool -> TRUE .)
    POR             reduce using rule 111 (cte_bool -> TRUE .)
    ENTRE           reduce using rule 111 (cte_bool -> TRUE .)
    MOD             reduce using rule 111 (cte_bool -> TRUE .)
    IGUALC          reduce using rule 111 (cte_bool -> TRUE .)
    NOTIGUAL        reduce using rule 111 (cte_bool -> TRUE .)
    MAYOR           reduce using rule 111 (cte_bool -> TRUE .)
    MAYORIGUAL      reduce using rule 111 (cte_bool -> TRUE .)
    MENOR           reduce using rule 111 (cte_bool -> TRUE .)
    MENORIGUAL      reduce using rule 111 (cte_bool -> TRUE .)
    AND             reduce using rule 111 (cte_bool -> TRUE .)
    OR              reduce using rule 111 (cte_bool -> TRUE .)
    COMA            reduce using rule 111 (cte_bool -> TRUE .)
    CODER           reduce using rule 111 (cte_bool -> TRUE .)
    PYC             reduce using rule 111 (cte_bool -> TRUE .)


state 141

    (102) exp -> cte_numeral .

    MAS             reduce using rule 102 (exp -> cte_numeral .)
    MENOS           reduce using rule 102 (exp -> cte_numeral .)
    POR             reduce using rule 102 (exp -> cte_numeral .)
    ENTRE           reduce using rule 102 (exp -> cte_numeral .)
    MOD             reduce using rule 102 (exp -> cte_numeral .)
    IGUALC          reduce using rule 102 (exp -> cte_numeral .)
    NOTIGUAL        reduce using rule 102 (exp -> cte_numeral .)
    MAYOR           reduce using rule 102 (exp -> cte_numeral .)
    MAYORIGUAL      reduce using rule 102 (exp -> cte_numeral .)
    MENOR           reduce using rule 102 (exp -> cte_numeral .)
    MENORIGUAL      reduce using rule 102 (exp -> cte_numeral .)
    AND             reduce using rule 102 (exp -> cte_numeral .)
    OR              reduce using rule 102 (exp -> cte_numeral .)
    PDER            reduce using rule 102 (exp -> cte_numeral .)
    COMA            reduce using rule 102 (exp -> cte_numeral .)
    CODER           reduce using rule 102 (exp -> cte_numeral .)
    PYC             reduce using rule 102 (exp -> cte_numeral .)


state 142

    (108) cte_char -> CTE_CHAR .

    PDER            reduce using rule 108 (cte_char -> CTE_CHAR .)
    MAS             reduce using rule 108 (cte_char -> CTE_CHAR .)
    MENOS           reduce using rule 108 (cte_char -> CTE_CHAR .)
    POR             reduce using rule 108 (cte_char -> CTE_CHAR .)
    ENTRE           reduce using rule 108 (cte_char -> CTE_CHAR .)
    MOD             reduce using rule 108 (cte_char -> CTE_CHAR .)
    IGUALC          reduce using rule 108 (cte_char -> CTE_CHAR .)
    NOTIGUAL        reduce using rule 108 (cte_char -> CTE_CHAR .)
    MAYOR           reduce using rule 108 (cte_char -> CTE_CHAR .)
    MAYORIGUAL      reduce using rule 108 (cte_char -> CTE_CHAR .)
    MENOR           reduce using rule 108 (cte_char -> CTE_CHAR .)
    MENORIGUAL      reduce using rule 108 (cte_char -> CTE_CHAR .)
    AND             reduce using rule 108 (cte_char -> CTE_CHAR .)
    OR              reduce using rule 108 (cte_char -> CTE_CHAR .)
    PYC             reduce using rule 108 (cte_char -> CTE_CHAR .)
    CODER           reduce using rule 108 (cte_char -> CTE_CHAR .)
    COMA            reduce using rule 108 (cte_char -> CTE_CHAR .)


state 143

    (106) exp -> llamada_func . limpiarInvocador
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)
    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 183

state 144

    (110) cte_real -> CTE_REAL .

    MAS             reduce using rule 110 (cte_real -> CTE_REAL .)
    MENOS           reduce using rule 110 (cte_real -> CTE_REAL .)
    POR             reduce using rule 110 (cte_real -> CTE_REAL .)
    ENTRE           reduce using rule 110 (cte_real -> CTE_REAL .)
    MOD             reduce using rule 110 (cte_real -> CTE_REAL .)
    IGUALC          reduce using rule 110 (cte_real -> CTE_REAL .)
    NOTIGUAL        reduce using rule 110 (cte_real -> CTE_REAL .)
    MAYOR           reduce using rule 110 (cte_real -> CTE_REAL .)
    MAYORIGUAL      reduce using rule 110 (cte_real -> CTE_REAL .)
    MENOR           reduce using rule 110 (cte_real -> CTE_REAL .)
    MENORIGUAL      reduce using rule 110 (cte_real -> CTE_REAL .)
    AND             reduce using rule 110 (cte_real -> CTE_REAL .)
    OR              reduce using rule 110 (cte_real -> CTE_REAL .)
    PYC             reduce using rule 110 (cte_real -> CTE_REAL .)
    PDER            reduce using rule 110 (cte_real -> CTE_REAL .)
    CODER           reduce using rule 110 (cte_real -> CTE_REAL .)
    COMA            reduce using rule 110 (cte_real -> CTE_REAL .)


state 145

    (100) exp -> cte_str .

    MAS             reduce using rule 100 (exp -> cte_str .)
    MENOS           reduce using rule 100 (exp -> cte_str .)
    POR             reduce using rule 100 (exp -> cte_str .)
    ENTRE           reduce using rule 100 (exp -> cte_str .)
    MOD             reduce using rule 100 (exp -> cte_str .)
    IGUALC          reduce using rule 100 (exp -> cte_str .)
    NOTIGUAL        reduce using rule 100 (exp -> cte_str .)
    MAYOR           reduce using rule 100 (exp -> cte_str .)
    MAYORIGUAL      reduce using rule 100 (exp -> cte_str .)
    MENOR           reduce using rule 100 (exp -> cte_str .)
    MENORIGUAL      reduce using rule 100 (exp -> cte_str .)
    AND             reduce using rule 100 (exp -> cte_str .)
    OR              reduce using rule 100 (exp -> cte_str .)
    PDER            reduce using rule 100 (exp -> cte_str .)
    COMA            reduce using rule 100 (exp -> cte_str .)
    CODER           reduce using rule 100 (exp -> cte_str .)
    PYC             reduce using rule 100 (exp -> cte_str .)


state 146

    (103) exp -> cte_real .

    MAS             reduce using rule 103 (exp -> cte_real .)
    MENOS           reduce using rule 103 (exp -> cte_real .)
    POR             reduce using rule 103 (exp -> cte_real .)
    ENTRE           reduce using rule 103 (exp -> cte_real .)
    MOD             reduce using rule 103 (exp -> cte_real .)
    IGUALC          reduce using rule 103 (exp -> cte_real .)
    NOTIGUAL        reduce using rule 103 (exp -> cte_real .)
    MAYOR           reduce using rule 103 (exp -> cte_real .)
    MAYORIGUAL      reduce using rule 103 (exp -> cte_real .)
    MENOR           reduce using rule 103 (exp -> cte_real .)
    MENORIGUAL      reduce using rule 103 (exp -> cte_real .)
    AND             reduce using rule 103 (exp -> cte_real .)
    OR              reduce using rule 103 (exp -> cte_real .)
    PDER            reduce using rule 103 (exp -> cte_real .)
    COMA            reduce using rule 103 (exp -> cte_real .)
    CODER           reduce using rule 103 (exp -> cte_real .)
    PYC             reduce using rule 103 (exp -> cte_real .)


state 147

    (105) exp -> atom . limpiarInvocador
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)
    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 184

state 148

    (101) exp -> cte_char .

    MAS             reduce using rule 101 (exp -> cte_char .)
    MENOS           reduce using rule 101 (exp -> cte_char .)
    POR             reduce using rule 101 (exp -> cte_char .)
    ENTRE           reduce using rule 101 (exp -> cte_char .)
    MOD             reduce using rule 101 (exp -> cte_char .)
    IGUALC          reduce using rule 101 (exp -> cte_char .)
    NOTIGUAL        reduce using rule 101 (exp -> cte_char .)
    MAYOR           reduce using rule 101 (exp -> cte_char .)
    MAYORIGUAL      reduce using rule 101 (exp -> cte_char .)
    MENOR           reduce using rule 101 (exp -> cte_char .)
    MENORIGUAL      reduce using rule 101 (exp -> cte_char .)
    AND             reduce using rule 101 (exp -> cte_char .)
    OR              reduce using rule 101 (exp -> cte_char .)
    PDER            reduce using rule 101 (exp -> cte_char .)
    COMA            reduce using rule 101 (exp -> cte_char .)
    CODER           reduce using rule 101 (exp -> cte_char .)
    PYC             reduce using rule 101 (exp -> cte_char .)


state 149

    (121) atom -> ID . PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> ID . checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (125) atom -> ID . checarAtributo
    (72) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (127) checarAtributoDim -> .
    (128) checarAtributo -> .
    (78) checarFuncion -> .

    PUNTO           shift and go to state 185
    COIZQ           reduce using rule 127 (checarAtributoDim -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    MAS             reduce using rule 128 (checarAtributo -> .)
    MENOS           reduce using rule 128 (checarAtributo -> .)
    POR             reduce using rule 128 (checarAtributo -> .)
    ENTRE           reduce using rule 128 (checarAtributo -> .)
    MOD             reduce using rule 128 (checarAtributo -> .)
    IGUALC          reduce using rule 128 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 128 (checarAtributo -> .)
    MAYOR           reduce using rule 128 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 128 (checarAtributo -> .)
    MENOR           reduce using rule 128 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 128 (checarAtributo -> .)
    AND             reduce using rule 128 (checarAtributo -> .)
    OR              reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    CODER           reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)
    PIZQ            reduce using rule 78 (checarFuncion -> .)

    checarAtributo                 shift and go to state 167
    checarFuncion                  shift and go to state 169
    checarAtributoDim              shift and go to state 170

state 150

    (112) cte_bool -> FALSE .

    PDER            reduce using rule 112 (cte_bool -> FALSE .)
    MAS             reduce using rule 112 (cte_bool -> FALSE .)
    MENOS           reduce using rule 112 (cte_bool -> FALSE .)
    POR             reduce using rule 112 (cte_bool -> FALSE .)
    ENTRE           reduce using rule 112 (cte_bool -> FALSE .)
    MOD             reduce using rule 112 (cte_bool -> FALSE .)
    IGUALC          reduce using rule 112 (cte_bool -> FALSE .)
    NOTIGUAL        reduce using rule 112 (cte_bool -> FALSE .)
    MAYOR           reduce using rule 112 (cte_bool -> FALSE .)
    MAYORIGUAL      reduce using rule 112 (cte_bool -> FALSE .)
    MENOR           reduce using rule 112 (cte_bool -> FALSE .)
    MENORIGUAL      reduce using rule 112 (cte_bool -> FALSE .)
    AND             reduce using rule 112 (cte_bool -> FALSE .)
    OR              reduce using rule 112 (cte_bool -> FALSE .)
    COMA            reduce using rule 112 (cte_bool -> FALSE .)
    CODER           reduce using rule 112 (cte_bool -> FALSE .)
    PYC             reduce using rule 112 (cte_bool -> FALSE .)


state 151

    (83) exp -> CHARAT . PIZQ atom COMA exp PDER

    PIZQ            shift and go to state 186


state 152

    (107) cte_str -> CTE_STR .

    PYC             reduce using rule 107 (cte_str -> CTE_STR .)
    MAS             reduce using rule 107 (cte_str -> CTE_STR .)
    MENOS           reduce using rule 107 (cte_str -> CTE_STR .)
    POR             reduce using rule 107 (cte_str -> CTE_STR .)
    ENTRE           reduce using rule 107 (cte_str -> CTE_STR .)
    MOD             reduce using rule 107 (cte_str -> CTE_STR .)
    IGUALC          reduce using rule 107 (cte_str -> CTE_STR .)
    NOTIGUAL        reduce using rule 107 (cte_str -> CTE_STR .)
    MAYOR           reduce using rule 107 (cte_str -> CTE_STR .)
    MAYORIGUAL      reduce using rule 107 (cte_str -> CTE_STR .)
    MENOR           reduce using rule 107 (cte_str -> CTE_STR .)
    MENORIGUAL      reduce using rule 107 (cte_str -> CTE_STR .)
    AND             reduce using rule 107 (cte_str -> CTE_STR .)
    OR              reduce using rule 107 (cte_str -> CTE_STR .)
    PDER            reduce using rule 107 (cte_str -> CTE_STR .)
    CODER           reduce using rule 107 (cte_str -> CTE_STR .)
    COMA            reduce using rule 107 (cte_str -> CTE_STR .)


state 153

    (82) exp -> LEN . PIZQ atom PDER

    PIZQ            shift and go to state 187


state 154

    (98) exp -> MENOS . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 188
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 155

    (113) return -> RETURN exp . PYC
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PYC             shift and go to state 200
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 156

    (97) exp -> NOT . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 203
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 157

    (114) return -> RETURN PYC .

    LLDER           reduce using rule 114 (return -> RETURN PYC .)
    WHILE           reduce using rule 114 (return -> RETURN PYC .)
    OUTPUT          reduce using rule 114 (return -> RETURN PYC .)
    INPUT           reduce using rule 114 (return -> RETURN PYC .)
    ID              reduce using rule 114 (return -> RETURN PYC .)
    RETURN          reduce using rule 114 (return -> RETURN PYC .)
    THIS            reduce using rule 114 (return -> RETURN PYC .)
    IF              reduce using rule 114 (return -> RETURN PYC .)


state 158

    (120) asignacion -> atom limpiarInvocador . IGUAL exp PYC

    IGUAL           shift and go to state 204


state 159

    (115) while -> WHILE while_1 . PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> WHILE while_1 . PIZQ exp PDER while_2 LLIZQ while_3 LLDER

    PIZQ            shift and go to state 205


state 160

    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . COIZQ cte_numeral CODER declararVariableDim
    (34) declararVariable -> .

    COIZQ           shift and go to state 69
    COMA            reduce using rule 34 (declararVariable -> .)
    PYC             reduce using rule 34 (declararVariable -> .)

    declararVariable               shift and go to state 67

state 161

    (62) ciclo_vars_func -> ciclo_vars_func vars .

    LLDER           reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    ID              reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    WHILE           reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    OUTPUT          reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    INPUT           reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    RETURN          reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    NUMERAL         reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    REAL            reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    BOOL            reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    CHAR            reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    STRING          reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    THIS            reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)
    IF              reduce using rule 62 (ciclo_vars_func -> ciclo_vars_func vars .)


state 162

    (57) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER . tamMetodo
    (55) tamMetodo -> .

    HIDDEN          reduce using rule 55 (tamMetodo -> .)
    VISIBLE         reduce using rule 55 (tamMetodo -> .)
    LLDER           reduce using rule 55 (tamMetodo -> .)

    tamMetodo                      shift and go to state 206

state 163

    (56) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto . LLDER tamMetodo
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 207
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 172
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 164

    (59) cuerpo_func -> inicioFunc LLIZQ LLDER tamMetodo .

    HIDDEN          reduce using rule 59 (cuerpo_func -> inicioFunc LLIZQ LLDER tamMetodo .)
    VISIBLE         reduce using rule 59 (cuerpo_func -> inicioFunc LLIZQ LLDER tamMetodo .)
    LLDER           reduce using rule 59 (cuerpo_func -> inicioFunc LLIZQ LLDER tamMetodo .)


state 165

    (140) lectura -> INPUT PIZQ . atom limpiarInvocador PDER PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo

    ID              shift and go to state 208
    THIS            shift and go to state 129

    atom                           shift and go to state 209

state 166

    (70) estatuto -> llamada_func limpiarInvocador . PYC

    PYC             shift and go to state 210


state 167

    (125) atom -> ID checarAtributo .

    CODER           reduce using rule 125 (atom -> ID checarAtributo .)
    MAS             reduce using rule 125 (atom -> ID checarAtributo .)
    MENOS           reduce using rule 125 (atom -> ID checarAtributo .)
    POR             reduce using rule 125 (atom -> ID checarAtributo .)
    ENTRE           reduce using rule 125 (atom -> ID checarAtributo .)
    MOD             reduce using rule 125 (atom -> ID checarAtributo .)
    IGUALC          reduce using rule 125 (atom -> ID checarAtributo .)
    NOTIGUAL        reduce using rule 125 (atom -> ID checarAtributo .)
    MAYOR           reduce using rule 125 (atom -> ID checarAtributo .)
    MAYORIGUAL      reduce using rule 125 (atom -> ID checarAtributo .)
    MENOR           reduce using rule 125 (atom -> ID checarAtributo .)
    MENORIGUAL      reduce using rule 125 (atom -> ID checarAtributo .)
    AND             reduce using rule 125 (atom -> ID checarAtributo .)
    OR              reduce using rule 125 (atom -> ID checarAtributo .)
    IGUAL           reduce using rule 125 (atom -> ID checarAtributo .)
    PYC             reduce using rule 125 (atom -> ID checarAtributo .)
    PDER            reduce using rule 125 (atom -> ID checarAtributo .)
    COMA            reduce using rule 125 (atom -> ID checarAtributo .)


state 168

    (72) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (121) atom -> ID PUNTO . definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (79) definirInvocador -> .

    ID              reduce using rule 79 (definirInvocador -> .)

    definirInvocador               shift and go to state 211

state 169

    (74) llamada_func -> ID checarFuncion . generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> ID checarFuncion . generaEra PIZQ limpiarInvocador PDER generarGosub
    (77) generaEra -> .

    PIZQ            reduce using rule 77 (generaEra -> .)

    generaEra                      shift and go to state 212

state 170

    (122) atom -> ID checarAtributoDim . COIZQ limpiarInvocador exp CODER

    COIZQ           shift and go to state 213


state 171

    (132) ciclo_cond -> IF PIZQ . exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> IF PIZQ . exp PDER if_1 LLIZQ if_2 LLDER
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 214
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 172

    (64) ciclo_estatuto -> ciclo_estatuto estatuto .

    WHILE           reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    OUTPUT          reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    INPUT           reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    ID              reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    RETURN          reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    THIS            reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    IF              reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    LLDER           reduce using rule 64 (ciclo_estatuto -> ciclo_estatuto estatuto .)


state 173

    (58) cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER . tamMetodo
    (55) tamMetodo -> .

    HIDDEN          reduce using rule 55 (tamMetodo -> .)
    VISIBLE         reduce using rule 55 (tamMetodo -> .)
    LLDER           reduce using rule 55 (tamMetodo -> .)

    tamMetodo                      shift and go to state 215

state 174

    (72) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (121) atom -> ID . PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> ID . checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (125) atom -> ID . checarAtributo
    (78) checarFuncion -> .
    (127) checarAtributoDim -> .
    (128) checarAtributo -> .

    PUNTO           shift and go to state 168
    PIZQ            reduce using rule 78 (checarFuncion -> .)
    COIZQ           reduce using rule 127 (checarAtributoDim -> .)
    IGUAL           reduce using rule 128 (checarAtributo -> .)

    checarAtributo                 shift and go to state 167
    checarFuncion                  shift and go to state 169
    checarAtributoDim              shift and go to state 170

state 175

    (131) condicion -> ciclo_cond if_4 .

    WHILE           reduce using rule 131 (condicion -> ciclo_cond if_4 .)
    OUTPUT          reduce using rule 131 (condicion -> ciclo_cond if_4 .)
    INPUT           reduce using rule 131 (condicion -> ciclo_cond if_4 .)
    ID              reduce using rule 131 (condicion -> ciclo_cond if_4 .)
    RETURN          reduce using rule 131 (condicion -> ciclo_cond if_4 .)
    THIS            reduce using rule 131 (condicion -> ciclo_cond if_4 .)
    IF              reduce using rule 131 (condicion -> ciclo_cond if_4 .)
    LLDER           reduce using rule 131 (condicion -> ciclo_cond if_4 .)


state 176

    (129) condicion -> ciclo_cond ELSE . if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> ciclo_cond ELSE . if_3 LLIZQ LLDER if_4
    (134) ciclo_cond -> ciclo_cond ELSE . IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> ciclo_cond ELSE . IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (138) if_3 -> .

    IF              shift and go to state 217
    LLIZQ           reduce using rule 138 (if_3 -> .)

    if_3                           shift and go to state 216

state 177

    (123) atom -> THIS PUNTO . definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (126) atom -> THIS PUNTO . definirInvocador ID checarAtributo
    (79) definirInvocador -> .

    ID              reduce using rule 79 (definirInvocador -> .)

    definirInvocador               shift and go to state 218

state 178

    (141) escritura -> OUTPUT PIZQ . exp PDER PYC
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 219
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 179

    (50) params_ciclo -> tipo ID COIZQ cte_numeral CODER . meterParametrosDim
    (53) meterParametrosDim -> .

    PDER            reduce using rule 53 (meterParametrosDim -> .)
    COMA            reduce using rule 53 (meterParametrosDim -> .)

    meterParametrosDim             shift and go to state 220

state 180

    (51) params_ciclo -> params_ciclo COMA tipo ID meterParametros .

    PDER            reduce using rule 51 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)
    COMA            reduce using rule 51 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)


state 181

    (52) params_ciclo -> params_ciclo COMA tipo ID COIZQ . cte_numeral CODER meterParametrosDim
    (109) cte_numeral -> . CTE_NUMERAL

    CTE_NUMERAL     shift and go to state 81

    cte_numeral                    shift and go to state 221

state 182

    (99) exp -> PIZQ exp . PDER
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PDER            shift and go to state 222
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 183

    (106) exp -> llamada_func limpiarInvocador .

    MAS             reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    MENOS           reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    POR             reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    ENTRE           reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    MOD             reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    IGUALC          reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    NOTIGUAL        reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    MAYOR           reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    MAYORIGUAL      reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    MENOR           reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    MENORIGUAL      reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    AND             reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    OR              reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    PDER            reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    COMA            reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    CODER           reduce using rule 106 (exp -> llamada_func limpiarInvocador .)
    PYC             reduce using rule 106 (exp -> llamada_func limpiarInvocador .)


state 184

    (105) exp -> atom limpiarInvocador .

    MAS             reduce using rule 105 (exp -> atom limpiarInvocador .)
    MENOS           reduce using rule 105 (exp -> atom limpiarInvocador .)
    POR             reduce using rule 105 (exp -> atom limpiarInvocador .)
    ENTRE           reduce using rule 105 (exp -> atom limpiarInvocador .)
    MOD             reduce using rule 105 (exp -> atom limpiarInvocador .)
    IGUALC          reduce using rule 105 (exp -> atom limpiarInvocador .)
    NOTIGUAL        reduce using rule 105 (exp -> atom limpiarInvocador .)
    MAYOR           reduce using rule 105 (exp -> atom limpiarInvocador .)
    MAYORIGUAL      reduce using rule 105 (exp -> atom limpiarInvocador .)
    MENOR           reduce using rule 105 (exp -> atom limpiarInvocador .)
    MENORIGUAL      reduce using rule 105 (exp -> atom limpiarInvocador .)
    AND             reduce using rule 105 (exp -> atom limpiarInvocador .)
    OR              reduce using rule 105 (exp -> atom limpiarInvocador .)
    PDER            reduce using rule 105 (exp -> atom limpiarInvocador .)
    COMA            reduce using rule 105 (exp -> atom limpiarInvocador .)
    CODER           reduce using rule 105 (exp -> atom limpiarInvocador .)
    PYC             reduce using rule 105 (exp -> atom limpiarInvocador .)


state 185

    (121) atom -> ID PUNTO . definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (72) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (79) definirInvocador -> .

    ID              reduce using rule 79 (definirInvocador -> .)

    definirInvocador               shift and go to state 223

state 186

    (83) exp -> CHARAT PIZQ . atom COMA exp PDER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo

    ID              shift and go to state 208
    THIS            shift and go to state 129

    atom                           shift and go to state 224

state 187

    (82) exp -> LEN PIZQ . atom PDER
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo

    ID              shift and go to state 208
    THIS            shift and go to state 129

    atom                           shift and go to state 225

state 188

    (98) exp -> MENOS exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    MAS             reduce using rule 98 (exp -> MENOS exp .)
    MENOS           reduce using rule 98 (exp -> MENOS exp .)
    POR             reduce using rule 98 (exp -> MENOS exp .)
    ENTRE           reduce using rule 98 (exp -> MENOS exp .)
    MOD             reduce using rule 98 (exp -> MENOS exp .)
    IGUALC          reduce using rule 98 (exp -> MENOS exp .)
    NOTIGUAL        reduce using rule 98 (exp -> MENOS exp .)
    MAYOR           reduce using rule 98 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 98 (exp -> MENOS exp .)
    MENOR           reduce using rule 98 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 98 (exp -> MENOS exp .)
    AND             reduce using rule 98 (exp -> MENOS exp .)
    OR              reduce using rule 98 (exp -> MENOS exp .)
    PDER            reduce using rule 98 (exp -> MENOS exp .)
    COMA            reduce using rule 98 (exp -> MENOS exp .)
    CODER           reduce using rule 98 (exp -> MENOS exp .)
    PYC             reduce using rule 98 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 190 ]
  ! MENOS           [ shift and go to state 196 ]
  ! POR             [ shift and go to state 193 ]
  ! ENTRE           [ shift and go to state 192 ]
  ! MOD             [ shift and go to state 202 ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 189

    (95) exp -> exp AND . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 226
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 190

    (84) exp -> exp MAS . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 227
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 191

    (89) exp -> exp IGUALC . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 228
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 192

    (87) exp -> exp ENTRE . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 229
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 193

    (86) exp -> exp POR . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 230
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 194

    (96) exp -> exp OR . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 231
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 195

    (93) exp -> exp MENOR . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 232
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 196

    (85) exp -> exp MENOS . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 233
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 197

    (90) exp -> exp NOTIGUAL . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 234
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 198

    (92) exp -> exp MAYORIGUAL . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 235
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 199

    (94) exp -> exp MENORIGUAL . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 236
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 200

    (113) return -> RETURN exp PYC .

    LLDER           reduce using rule 113 (return -> RETURN exp PYC .)
    WHILE           reduce using rule 113 (return -> RETURN exp PYC .)
    OUTPUT          reduce using rule 113 (return -> RETURN exp PYC .)
    INPUT           reduce using rule 113 (return -> RETURN exp PYC .)
    ID              reduce using rule 113 (return -> RETURN exp PYC .)
    RETURN          reduce using rule 113 (return -> RETURN exp PYC .)
    THIS            reduce using rule 113 (return -> RETURN exp PYC .)
    IF              reduce using rule 113 (return -> RETURN exp PYC .)


state 201

    (91) exp -> exp MAYOR . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 237
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 202

    (88) exp -> exp MOD . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 238
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 203

    (97) exp -> NOT exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    AND             reduce using rule 97 (exp -> NOT exp .)
    OR              reduce using rule 97 (exp -> NOT exp .)
    PDER            reduce using rule 97 (exp -> NOT exp .)
    COMA            reduce using rule 97 (exp -> NOT exp .)
    CODER           reduce using rule 97 (exp -> NOT exp .)
    PYC             reduce using rule 97 (exp -> NOT exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199

  ! MAS             [ reduce using rule 97 (exp -> NOT exp .) ]
  ! MENOS           [ reduce using rule 97 (exp -> NOT exp .) ]
  ! POR             [ reduce using rule 97 (exp -> NOT exp .) ]
  ! ENTRE           [ reduce using rule 97 (exp -> NOT exp .) ]
  ! MOD             [ reduce using rule 97 (exp -> NOT exp .) ]
  ! IGUALC          [ reduce using rule 97 (exp -> NOT exp .) ]
  ! NOTIGUAL        [ reduce using rule 97 (exp -> NOT exp .) ]
  ! MAYOR           [ reduce using rule 97 (exp -> NOT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 97 (exp -> NOT exp .) ]
  ! MENOR           [ reduce using rule 97 (exp -> NOT exp .) ]
  ! MENORIGUAL      [ reduce using rule 97 (exp -> NOT exp .) ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 204

    (120) asignacion -> atom limpiarInvocador IGUAL . exp PYC
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    exp                            shift and go to state 239
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141
    cte_real                       shift and go to state 146

state 205

    (115) while -> WHILE while_1 PIZQ . exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> WHILE while_1 PIZQ . exp PDER while_2 LLIZQ while_3 LLDER
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    llamada_func                   shift and go to state 143
    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 240
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    cte_numeral                    shift and go to state 141

state 206

    (57) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER tamMetodo .

    HIDDEN          reduce using rule 57 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER tamMetodo .)
    VISIBLE         reduce using rule 57 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER tamMetodo .)
    LLDER           reduce using rule 57 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func LLDER tamMetodo .)


state 207

    (56) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER . tamMetodo
    (55) tamMetodo -> .

    HIDDEN          reduce using rule 55 (tamMetodo -> .)
    VISIBLE         reduce using rule 55 (tamMetodo -> .)
    LLDER           reduce using rule 55 (tamMetodo -> .)

    tamMetodo                      shift and go to state 241

state 208

    (121) atom -> ID . PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> ID . checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (125) atom -> ID . checarAtributo
    (127) checarAtributoDim -> .
    (128) checarAtributo -> .

    PUNTO           shift and go to state 242
    COIZQ           reduce using rule 127 (checarAtributoDim -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)

    checarAtributo                 shift and go to state 167
    checarAtributoDim              shift and go to state 170

state 209

    (140) lectura -> INPUT PIZQ atom . limpiarInvocador PDER PYC
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 243

state 210

    (70) estatuto -> llamada_func limpiarInvocador PYC .

    WHILE           reduce using rule 70 (estatuto -> llamada_func limpiarInvocador PYC .)
    OUTPUT          reduce using rule 70 (estatuto -> llamada_func limpiarInvocador PYC .)
    INPUT           reduce using rule 70 (estatuto -> llamada_func limpiarInvocador PYC .)
    ID              reduce using rule 70 (estatuto -> llamada_func limpiarInvocador PYC .)
    RETURN          reduce using rule 70 (estatuto -> llamada_func limpiarInvocador PYC .)
    THIS            reduce using rule 70 (estatuto -> llamada_func limpiarInvocador PYC .)
    IF              reduce using rule 70 (estatuto -> llamada_func limpiarInvocador PYC .)
    LLDER           reduce using rule 70 (estatuto -> llamada_func limpiarInvocador PYC .)


state 211

    (72) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (121) atom -> ID PUNTO definirInvocador . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 244


state 212

    (74) llamada_func -> ID checarFuncion generaEra . PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> ID checarFuncion generaEra . PIZQ limpiarInvocador PDER generarGosub

    PIZQ            shift and go to state 245


state 213

    (122) atom -> ID checarAtributoDim COIZQ . limpiarInvocador exp CODER
    (11) limpiarInvocador -> .

    LEN             reduce using rule 11 (limpiarInvocador -> .)
    CHARAT          reduce using rule 11 (limpiarInvocador -> .)
    NOT             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    PIZQ            reduce using rule 11 (limpiarInvocador -> .)
    CTE_STR         reduce using rule 11 (limpiarInvocador -> .)
    CTE_CHAR        reduce using rule 11 (limpiarInvocador -> .)
    CTE_NUMERAL     reduce using rule 11 (limpiarInvocador -> .)
    CTE_REAL        reduce using rule 11 (limpiarInvocador -> .)
    TRUE            reduce using rule 11 (limpiarInvocador -> .)
    FALSE           reduce using rule 11 (limpiarInvocador -> .)
    ID              reduce using rule 11 (limpiarInvocador -> .)
    THIS            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 246

state 214

    (132) ciclo_cond -> IF PIZQ exp . PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> IF PIZQ exp . PDER if_1 LLIZQ if_2 LLDER
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PDER            shift and go to state 247
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 215

    (58) cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER tamMetodo .

    HIDDEN          reduce using rule 58 (cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER tamMetodo .)
    VISIBLE         reduce using rule 58 (cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER tamMetodo .)
    LLDER           reduce using rule 58 (cuerpo_func -> inicioFunc LLIZQ ciclo_estatuto LLDER tamMetodo .)


state 216

    (129) condicion -> ciclo_cond ELSE if_3 . LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> ciclo_cond ELSE if_3 . LLIZQ LLDER if_4

    LLIZQ           shift and go to state 248


state 217

    (134) ciclo_cond -> ciclo_cond ELSE IF . if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF . if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (138) if_3 -> .

    PIZQ            reduce using rule 138 (if_3 -> .)

    if_3                           shift and go to state 249

state 218

    (123) atom -> THIS PUNTO definirInvocador . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (126) atom -> THIS PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 250


state 219

    (141) escritura -> OUTPUT PIZQ exp . PDER PYC
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PDER            shift and go to state 251
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 220

    (50) params_ciclo -> tipo ID COIZQ cte_numeral CODER meterParametrosDim .

    PDER            reduce using rule 50 (params_ciclo -> tipo ID COIZQ cte_numeral CODER meterParametrosDim .)
    COMA            reduce using rule 50 (params_ciclo -> tipo ID COIZQ cte_numeral CODER meterParametrosDim .)


state 221

    (52) params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral . CODER meterParametrosDim

    CODER           shift and go to state 252


state 222

    (99) exp -> PIZQ exp PDER .

    MAS             reduce using rule 99 (exp -> PIZQ exp PDER .)
    MENOS           reduce using rule 99 (exp -> PIZQ exp PDER .)
    POR             reduce using rule 99 (exp -> PIZQ exp PDER .)
    ENTRE           reduce using rule 99 (exp -> PIZQ exp PDER .)
    MOD             reduce using rule 99 (exp -> PIZQ exp PDER .)
    IGUALC          reduce using rule 99 (exp -> PIZQ exp PDER .)
    NOTIGUAL        reduce using rule 99 (exp -> PIZQ exp PDER .)
    MAYOR           reduce using rule 99 (exp -> PIZQ exp PDER .)
    MAYORIGUAL      reduce using rule 99 (exp -> PIZQ exp PDER .)
    MENOR           reduce using rule 99 (exp -> PIZQ exp PDER .)
    MENORIGUAL      reduce using rule 99 (exp -> PIZQ exp PDER .)
    AND             reduce using rule 99 (exp -> PIZQ exp PDER .)
    OR              reduce using rule 99 (exp -> PIZQ exp PDER .)
    PDER            reduce using rule 99 (exp -> PIZQ exp PDER .)
    COMA            reduce using rule 99 (exp -> PIZQ exp PDER .)
    CODER           reduce using rule 99 (exp -> PIZQ exp PDER .)
    PYC             reduce using rule 99 (exp -> PIZQ exp PDER .)


state 223

    (121) atom -> ID PUNTO definirInvocador . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID PUNTO definirInvocador . ID checarAtributo
    (72) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    ID              shift and go to state 253


state 224

    (83) exp -> CHARAT PIZQ atom . COMA exp PDER

    COMA            shift and go to state 254


state 225

    (82) exp -> LEN PIZQ atom . PDER

    PDER            shift and go to state 255


state 226

    (95) exp -> exp AND exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    AND             reduce using rule 95 (exp -> exp AND exp .)
    OR              reduce using rule 95 (exp -> exp AND exp .)
    PDER            reduce using rule 95 (exp -> exp AND exp .)
    COMA            reduce using rule 95 (exp -> exp AND exp .)
    CODER           reduce using rule 95 (exp -> exp AND exp .)
    PYC             reduce using rule 95 (exp -> exp AND exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199

  ! MAS             [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! MENOS           [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! POR             [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! ENTRE           [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! MOD             [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! IGUALC          [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! NOTIGUAL        [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! MAYOR           [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! MAYORIGUAL      [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! MENOR           [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! MENORIGUAL      [ reduce using rule 95 (exp -> exp AND exp .) ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 227

    (84) exp -> exp MAS exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    MAS             reduce using rule 84 (exp -> exp MAS exp .)
    MENOS           reduce using rule 84 (exp -> exp MAS exp .)
    IGUALC          reduce using rule 84 (exp -> exp MAS exp .)
    NOTIGUAL        reduce using rule 84 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 84 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 84 (exp -> exp MAS exp .)
    MENOR           reduce using rule 84 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 84 (exp -> exp MAS exp .)
    AND             reduce using rule 84 (exp -> exp MAS exp .)
    OR              reduce using rule 84 (exp -> exp MAS exp .)
    PDER            reduce using rule 84 (exp -> exp MAS exp .)
    COMA            reduce using rule 84 (exp -> exp MAS exp .)
    CODER           reduce using rule 84 (exp -> exp MAS exp .)
    PYC             reduce using rule 84 (exp -> exp MAS exp .)
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202

  ! POR             [ reduce using rule 84 (exp -> exp MAS exp .) ]
  ! ENTRE           [ reduce using rule 84 (exp -> exp MAS exp .) ]
  ! MOD             [ reduce using rule 84 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 190 ]
  ! MENOS           [ shift and go to state 196 ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 228

    (89) exp -> exp IGUALC exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    IGUALC          reduce using rule 89 (exp -> exp IGUALC exp .)
    NOTIGUAL        reduce using rule 89 (exp -> exp IGUALC exp .)
    MAYOR           reduce using rule 89 (exp -> exp IGUALC exp .)
    MAYORIGUAL      reduce using rule 89 (exp -> exp IGUALC exp .)
    MENOR           reduce using rule 89 (exp -> exp IGUALC exp .)
    MENORIGUAL      reduce using rule 89 (exp -> exp IGUALC exp .)
    AND             reduce using rule 89 (exp -> exp IGUALC exp .)
    OR              reduce using rule 89 (exp -> exp IGUALC exp .)
    PDER            reduce using rule 89 (exp -> exp IGUALC exp .)
    COMA            reduce using rule 89 (exp -> exp IGUALC exp .)
    CODER           reduce using rule 89 (exp -> exp IGUALC exp .)
    PYC             reduce using rule 89 (exp -> exp IGUALC exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202

  ! MAS             [ reduce using rule 89 (exp -> exp IGUALC exp .) ]
  ! MENOS           [ reduce using rule 89 (exp -> exp IGUALC exp .) ]
  ! POR             [ reduce using rule 89 (exp -> exp IGUALC exp .) ]
  ! ENTRE           [ reduce using rule 89 (exp -> exp IGUALC exp .) ]
  ! MOD             [ reduce using rule 89 (exp -> exp IGUALC exp .) ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 229

    (87) exp -> exp ENTRE exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    MAS             reduce using rule 87 (exp -> exp ENTRE exp .)
    MENOS           reduce using rule 87 (exp -> exp ENTRE exp .)
    POR             reduce using rule 87 (exp -> exp ENTRE exp .)
    ENTRE           reduce using rule 87 (exp -> exp ENTRE exp .)
    MOD             reduce using rule 87 (exp -> exp ENTRE exp .)
    IGUALC          reduce using rule 87 (exp -> exp ENTRE exp .)
    NOTIGUAL        reduce using rule 87 (exp -> exp ENTRE exp .)
    MAYOR           reduce using rule 87 (exp -> exp ENTRE exp .)
    MAYORIGUAL      reduce using rule 87 (exp -> exp ENTRE exp .)
    MENOR           reduce using rule 87 (exp -> exp ENTRE exp .)
    MENORIGUAL      reduce using rule 87 (exp -> exp ENTRE exp .)
    AND             reduce using rule 87 (exp -> exp ENTRE exp .)
    OR              reduce using rule 87 (exp -> exp ENTRE exp .)
    PDER            reduce using rule 87 (exp -> exp ENTRE exp .)
    COMA            reduce using rule 87 (exp -> exp ENTRE exp .)
    CODER           reduce using rule 87 (exp -> exp ENTRE exp .)
    PYC             reduce using rule 87 (exp -> exp ENTRE exp .)

  ! MAS             [ shift and go to state 190 ]
  ! MENOS           [ shift and go to state 196 ]
  ! POR             [ shift and go to state 193 ]
  ! ENTRE           [ shift and go to state 192 ]
  ! MOD             [ shift and go to state 202 ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 230

    (86) exp -> exp POR exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    MAS             reduce using rule 86 (exp -> exp POR exp .)
    MENOS           reduce using rule 86 (exp -> exp POR exp .)
    POR             reduce using rule 86 (exp -> exp POR exp .)
    ENTRE           reduce using rule 86 (exp -> exp POR exp .)
    MOD             reduce using rule 86 (exp -> exp POR exp .)
    IGUALC          reduce using rule 86 (exp -> exp POR exp .)
    NOTIGUAL        reduce using rule 86 (exp -> exp POR exp .)
    MAYOR           reduce using rule 86 (exp -> exp POR exp .)
    MAYORIGUAL      reduce using rule 86 (exp -> exp POR exp .)
    MENOR           reduce using rule 86 (exp -> exp POR exp .)
    MENORIGUAL      reduce using rule 86 (exp -> exp POR exp .)
    AND             reduce using rule 86 (exp -> exp POR exp .)
    OR              reduce using rule 86 (exp -> exp POR exp .)
    PDER            reduce using rule 86 (exp -> exp POR exp .)
    COMA            reduce using rule 86 (exp -> exp POR exp .)
    CODER           reduce using rule 86 (exp -> exp POR exp .)
    PYC             reduce using rule 86 (exp -> exp POR exp .)

  ! MAS             [ shift and go to state 190 ]
  ! MENOS           [ shift and go to state 196 ]
  ! POR             [ shift and go to state 193 ]
  ! ENTRE           [ shift and go to state 192 ]
  ! MOD             [ shift and go to state 202 ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 231

    (96) exp -> exp OR exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    OR              reduce using rule 96 (exp -> exp OR exp .)
    PDER            reduce using rule 96 (exp -> exp OR exp .)
    COMA            reduce using rule 96 (exp -> exp OR exp .)
    CODER           reduce using rule 96 (exp -> exp OR exp .)
    PYC             reduce using rule 96 (exp -> exp OR exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189

  ! MAS             [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! MENOS           [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! POR             [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! ENTRE           [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! MOD             [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! IGUALC          [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! NOTIGUAL        [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! MAYOR           [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! MENOR           [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! MENORIGUAL      [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 96 (exp -> exp OR exp .) ]
  ! OR              [ shift and go to state 194 ]


state 232

    (93) exp -> exp MENOR exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    IGUALC          reduce using rule 93 (exp -> exp MENOR exp .)
    NOTIGUAL        reduce using rule 93 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 93 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 93 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 93 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 93 (exp -> exp MENOR exp .)
    AND             reduce using rule 93 (exp -> exp MENOR exp .)
    OR              reduce using rule 93 (exp -> exp MENOR exp .)
    PDER            reduce using rule 93 (exp -> exp MENOR exp .)
    COMA            reduce using rule 93 (exp -> exp MENOR exp .)
    CODER           reduce using rule 93 (exp -> exp MENOR exp .)
    PYC             reduce using rule 93 (exp -> exp MENOR exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202

  ! MAS             [ reduce using rule 93 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 93 (exp -> exp MENOR exp .) ]
  ! POR             [ reduce using rule 93 (exp -> exp MENOR exp .) ]
  ! ENTRE           [ reduce using rule 93 (exp -> exp MENOR exp .) ]
  ! MOD             [ reduce using rule 93 (exp -> exp MENOR exp .) ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 233

    (85) exp -> exp MENOS exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    MAS             reduce using rule 85 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 85 (exp -> exp MENOS exp .)
    IGUALC          reduce using rule 85 (exp -> exp MENOS exp .)
    NOTIGUAL        reduce using rule 85 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 85 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 85 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 85 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 85 (exp -> exp MENOS exp .)
    AND             reduce using rule 85 (exp -> exp MENOS exp .)
    OR              reduce using rule 85 (exp -> exp MENOS exp .)
    PDER            reduce using rule 85 (exp -> exp MENOS exp .)
    COMA            reduce using rule 85 (exp -> exp MENOS exp .)
    CODER           reduce using rule 85 (exp -> exp MENOS exp .)
    PYC             reduce using rule 85 (exp -> exp MENOS exp .)
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202

  ! POR             [ reduce using rule 85 (exp -> exp MENOS exp .) ]
  ! ENTRE           [ reduce using rule 85 (exp -> exp MENOS exp .) ]
  ! MOD             [ reduce using rule 85 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 190 ]
  ! MENOS           [ shift and go to state 196 ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 234

    (90) exp -> exp NOTIGUAL exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    IGUALC          reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    NOTIGUAL        reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    MAYOR           reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    MAYORIGUAL      reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    MENOR           reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    MENORIGUAL      reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    AND             reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    OR              reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    PDER            reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    COMA            reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    CODER           reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    PYC             reduce using rule 90 (exp -> exp NOTIGUAL exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202

  ! MAS             [ reduce using rule 90 (exp -> exp NOTIGUAL exp .) ]
  ! MENOS           [ reduce using rule 90 (exp -> exp NOTIGUAL exp .) ]
  ! POR             [ reduce using rule 90 (exp -> exp NOTIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 90 (exp -> exp NOTIGUAL exp .) ]
  ! MOD             [ reduce using rule 90 (exp -> exp NOTIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 235

    (92) exp -> exp MAYORIGUAL exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    IGUALC          reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    NOTIGUAL        reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    AND             reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    OR              reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    PDER            reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    CODER           reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    PYC             reduce using rule 92 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202

  ! MAS             [ reduce using rule 92 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 92 (exp -> exp MAYORIGUAL exp .) ]
  ! POR             [ reduce using rule 92 (exp -> exp MAYORIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 92 (exp -> exp MAYORIGUAL exp .) ]
  ! MOD             [ reduce using rule 92 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 236

    (94) exp -> exp MENORIGUAL exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    IGUALC          reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    NOTIGUAL        reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    AND             reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    OR              reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    PDER            reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    CODER           reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    PYC             reduce using rule 94 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202

  ! MAS             [ reduce using rule 94 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 94 (exp -> exp MENORIGUAL exp .) ]
  ! POR             [ reduce using rule 94 (exp -> exp MENORIGUAL exp .) ]
  ! ENTRE           [ reduce using rule 94 (exp -> exp MENORIGUAL exp .) ]
  ! MOD             [ reduce using rule 94 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 237

    (91) exp -> exp MAYOR exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    IGUALC          reduce using rule 91 (exp -> exp MAYOR exp .)
    NOTIGUAL        reduce using rule 91 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 91 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 91 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 91 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 91 (exp -> exp MAYOR exp .)
    AND             reduce using rule 91 (exp -> exp MAYOR exp .)
    OR              reduce using rule 91 (exp -> exp MAYOR exp .)
    PDER            reduce using rule 91 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 91 (exp -> exp MAYOR exp .)
    CODER           reduce using rule 91 (exp -> exp MAYOR exp .)
    PYC             reduce using rule 91 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202

  ! MAS             [ reduce using rule 91 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 91 (exp -> exp MAYOR exp .) ]
  ! POR             [ reduce using rule 91 (exp -> exp MAYOR exp .) ]
  ! ENTRE           [ reduce using rule 91 (exp -> exp MAYOR exp .) ]
  ! MOD             [ reduce using rule 91 (exp -> exp MAYOR exp .) ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 238

    (88) exp -> exp MOD exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    MAS             reduce using rule 88 (exp -> exp MOD exp .)
    MENOS           reduce using rule 88 (exp -> exp MOD exp .)
    POR             reduce using rule 88 (exp -> exp MOD exp .)
    ENTRE           reduce using rule 88 (exp -> exp MOD exp .)
    MOD             reduce using rule 88 (exp -> exp MOD exp .)
    IGUALC          reduce using rule 88 (exp -> exp MOD exp .)
    NOTIGUAL        reduce using rule 88 (exp -> exp MOD exp .)
    MAYOR           reduce using rule 88 (exp -> exp MOD exp .)
    MAYORIGUAL      reduce using rule 88 (exp -> exp MOD exp .)
    MENOR           reduce using rule 88 (exp -> exp MOD exp .)
    MENORIGUAL      reduce using rule 88 (exp -> exp MOD exp .)
    AND             reduce using rule 88 (exp -> exp MOD exp .)
    OR              reduce using rule 88 (exp -> exp MOD exp .)
    PDER            reduce using rule 88 (exp -> exp MOD exp .)
    COMA            reduce using rule 88 (exp -> exp MOD exp .)
    CODER           reduce using rule 88 (exp -> exp MOD exp .)
    PYC             reduce using rule 88 (exp -> exp MOD exp .)

  ! MAS             [ shift and go to state 190 ]
  ! MENOS           [ shift and go to state 196 ]
  ! POR             [ shift and go to state 193 ]
  ! ENTRE           [ shift and go to state 192 ]
  ! MOD             [ shift and go to state 202 ]
  ! IGUALC          [ shift and go to state 191 ]
  ! NOTIGUAL        [ shift and go to state 197 ]
  ! MAYOR           [ shift and go to state 201 ]
  ! MAYORIGUAL      [ shift and go to state 198 ]
  ! MENOR           [ shift and go to state 195 ]
  ! MENORIGUAL      [ shift and go to state 199 ]
  ! AND             [ shift and go to state 189 ]
  ! OR              [ shift and go to state 194 ]


state 239

    (120) asignacion -> atom limpiarInvocador IGUAL exp . PYC
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PYC             shift and go to state 256
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 240

    (115) while -> WHILE while_1 PIZQ exp . PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> WHILE while_1 PIZQ exp . PDER while_2 LLIZQ while_3 LLDER
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PDER            shift and go to state 257
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 241

    (56) cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER tamMetodo .

    HIDDEN          reduce using rule 56 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER tamMetodo .)
    VISIBLE         reduce using rule 56 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER tamMetodo .)
    LLDER           reduce using rule 56 (cuerpo_func -> inicioFunc LLIZQ ciclo_vars_func ciclo_estatuto LLDER tamMetodo .)


state 242

    (121) atom -> ID PUNTO . definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (79) definirInvocador -> .

    ID              reduce using rule 79 (definirInvocador -> .)

    definirInvocador               shift and go to state 258

state 243

    (140) lectura -> INPUT PIZQ atom limpiarInvocador . PDER PYC

    PDER            shift and go to state 259


state 244

    (72) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (121) atom -> ID PUNTO definirInvocador ID . checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (78) checarFuncion -> .
    (127) checarAtributoDim -> .
    (128) checarAtributo -> .

    PIZQ            reduce using rule 78 (checarFuncion -> .)
    COIZQ           reduce using rule 127 (checarAtributoDim -> .)
    IGUAL           reduce using rule 128 (checarAtributo -> .)

    checarAtributo                 shift and go to state 260
    checarFuncion                  shift and go to state 261
    checarAtributoDim              shift and go to state 262

state 245

    (74) llamada_func -> ID checarFuncion generaEra PIZQ . limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> ID checarFuncion generaEra PIZQ . limpiarInvocador PDER generarGosub
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)
    LEN             reduce using rule 11 (limpiarInvocador -> .)
    CHARAT          reduce using rule 11 (limpiarInvocador -> .)
    NOT             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    PIZQ            reduce using rule 11 (limpiarInvocador -> .)
    CTE_STR         reduce using rule 11 (limpiarInvocador -> .)
    CTE_CHAR        reduce using rule 11 (limpiarInvocador -> .)
    CTE_NUMERAL     reduce using rule 11 (limpiarInvocador -> .)
    CTE_REAL        reduce using rule 11 (limpiarInvocador -> .)
    TRUE            reduce using rule 11 (limpiarInvocador -> .)
    FALSE           reduce using rule 11 (limpiarInvocador -> .)
    ID              reduce using rule 11 (limpiarInvocador -> .)
    THIS            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 263

state 246

    (122) atom -> ID checarAtributoDim COIZQ limpiarInvocador . exp CODER
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    exp                            shift and go to state 264
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141
    cte_real                       shift and go to state 146

state 247

    (132) ciclo_cond -> IF PIZQ exp PDER . if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> IF PIZQ exp PDER . if_1 LLIZQ if_2 LLDER
    (136) if_1 -> .

    LLIZQ           reduce using rule 136 (if_1 -> .)

    if_1                           shift and go to state 265

state 248

    (129) condicion -> ciclo_cond ELSE if_3 LLIZQ . ciclo_estatuto LLDER if_4
    (130) condicion -> ciclo_cond ELSE if_3 LLIZQ . LLDER if_4
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 266
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    llamada_func                   shift and go to state 123
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 267
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 249

    (134) ciclo_cond -> ciclo_cond ELSE IF if_3 . PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF if_3 . PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    PIZQ            shift and go to state 268


state 250

    (123) atom -> THIS PUNTO definirInvocador ID . checarAtributoDim COIZQ limpiarInvocador exp CODER
    (126) atom -> THIS PUNTO definirInvocador ID . checarAtributo
    (127) checarAtributoDim -> .
    (128) checarAtributo -> .

    COIZQ           reduce using rule 127 (checarAtributoDim -> .)
    IGUAL           reduce using rule 128 (checarAtributo -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    MAS             reduce using rule 128 (checarAtributo -> .)
    MENOS           reduce using rule 128 (checarAtributo -> .)
    POR             reduce using rule 128 (checarAtributo -> .)
    ENTRE           reduce using rule 128 (checarAtributo -> .)
    MOD             reduce using rule 128 (checarAtributo -> .)
    IGUALC          reduce using rule 128 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 128 (checarAtributo -> .)
    MAYOR           reduce using rule 128 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 128 (checarAtributo -> .)
    MENOR           reduce using rule 128 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 128 (checarAtributo -> .)
    AND             reduce using rule 128 (checarAtributo -> .)
    OR              reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    CODER           reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)

    checarAtributo                 shift and go to state 269
    checarAtributoDim              shift and go to state 270

state 251

    (141) escritura -> OUTPUT PIZQ exp PDER . PYC

    PYC             shift and go to state 271


state 252

    (52) params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER . meterParametrosDim
    (53) meterParametrosDim -> .

    PDER            reduce using rule 53 (meterParametrosDim -> .)
    COMA            reduce using rule 53 (meterParametrosDim -> .)

    meterParametrosDim             shift and go to state 272

state 253

    (121) atom -> ID PUNTO definirInvocador ID . checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (72) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (127) checarAtributoDim -> .
    (128) checarAtributo -> .
    (78) checarFuncion -> .

    COIZQ           reduce using rule 127 (checarAtributoDim -> .)
    PYC             reduce using rule 128 (checarAtributo -> .)
    MAS             reduce using rule 128 (checarAtributo -> .)
    MENOS           reduce using rule 128 (checarAtributo -> .)
    POR             reduce using rule 128 (checarAtributo -> .)
    ENTRE           reduce using rule 128 (checarAtributo -> .)
    MOD             reduce using rule 128 (checarAtributo -> .)
    IGUALC          reduce using rule 128 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 128 (checarAtributo -> .)
    MAYOR           reduce using rule 128 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 128 (checarAtributo -> .)
    MENOR           reduce using rule 128 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 128 (checarAtributo -> .)
    AND             reduce using rule 128 (checarAtributo -> .)
    OR              reduce using rule 128 (checarAtributo -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    CODER           reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)
    PIZQ            reduce using rule 78 (checarFuncion -> .)

    checarAtributo                 shift and go to state 260
    checarFuncion                  shift and go to state 261
    checarAtributoDim              shift and go to state 262

state 254

    (83) exp -> CHARAT PIZQ atom COMA . exp PDER
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 273
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 255

    (82) exp -> LEN PIZQ atom PDER .

    MAS             reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    MENOS           reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    POR             reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    ENTRE           reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    MOD             reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    IGUALC          reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    NOTIGUAL        reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    MAYOR           reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    MAYORIGUAL      reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    MENOR           reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    MENORIGUAL      reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    AND             reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    OR              reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    PDER            reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    COMA            reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    CODER           reduce using rule 82 (exp -> LEN PIZQ atom PDER .)
    PYC             reduce using rule 82 (exp -> LEN PIZQ atom PDER .)


state 256

    (120) asignacion -> atom limpiarInvocador IGUAL exp PYC .

    LLDER           reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    WHILE           reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    OUTPUT          reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    INPUT           reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    ID              reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    RETURN          reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    THIS            reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    IF              reduce using rule 120 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)


state 257

    (115) while -> WHILE while_1 PIZQ exp PDER . while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> WHILE while_1 PIZQ exp PDER . while_2 LLIZQ while_3 LLDER
    (118) while_2 -> .

    LLIZQ           reduce using rule 118 (while_2 -> .)

    while_2                        shift and go to state 274

state 258

    (121) atom -> ID PUNTO definirInvocador . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 275


state 259

    (140) lectura -> INPUT PIZQ atom limpiarInvocador PDER . PYC

    PYC             shift and go to state 276


state 260

    (124) atom -> ID PUNTO definirInvocador ID checarAtributo .

    CODER           reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAS             reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUAL           reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 124 (atom -> ID PUNTO definirInvocador ID checarAtributo .)


state 261

    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . generaEra PIZQ limpiarInvocador PDER generarGosub
    (77) generaEra -> .

    PIZQ            reduce using rule 77 (generaEra -> .)

    generaEra                      shift and go to state 277

state 262

    (121) atom -> ID PUNTO definirInvocador ID checarAtributoDim . COIZQ limpiarInvocador exp CODER

    COIZQ           shift and go to state 278


state 263

    (74) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador . exp_ciclo PDER generarGosub
    (75) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador . PDER generarGosub
    (80) exp_ciclo -> . exp
    (81) exp_ciclo -> . exp_ciclo COMA exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    PDER            shift and go to state 279
    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    llamada_func                   shift and go to state 143
    cte_str                        shift and go to state 145
    exp_ciclo                      shift and go to state 280
    cte_bool                       shift and go to state 139
    exp                            shift and go to state 281
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    cte_numeral                    shift and go to state 141
    cte_real                       shift and go to state 146

state 264

    (122) atom -> ID checarAtributoDim COIZQ limpiarInvocador exp . CODER
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    CODER           shift and go to state 282
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 265

    (132) ciclo_cond -> IF PIZQ exp PDER if_1 . LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> IF PIZQ exp PDER if_1 . LLIZQ if_2 LLDER

    LLIZQ           shift and go to state 283


state 266

    (130) condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER . if_4
    (139) if_4 -> .

    LLDER           reduce using rule 139 (if_4 -> .)
    WHILE           reduce using rule 139 (if_4 -> .)
    OUTPUT          reduce using rule 139 (if_4 -> .)
    INPUT           reduce using rule 139 (if_4 -> .)
    ID              reduce using rule 139 (if_4 -> .)
    RETURN          reduce using rule 139 (if_4 -> .)
    THIS            reduce using rule 139 (if_4 -> .)
    IF              reduce using rule 139 (if_4 -> .)

    if_4                           shift and go to state 284

state 267

    (129) condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto . LLDER if_4
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           shift and go to state 285
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    estatuto                       shift and go to state 172
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    llamada_func                   shift and go to state 123
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    ciclo_cond                     shift and go to state 128
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 268

    (134) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ . exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ . exp PDER if_1 LLIZQ if_2 LLDER
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 286
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_bool                       shift and go to state 139
    cte_numeral                    shift and go to state 141

state 269

    (126) atom -> THIS PUNTO definirInvocador ID checarAtributo .

    CODER           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAS             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUAL           reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 126 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)


state 270

    (123) atom -> THIS PUNTO definirInvocador ID checarAtributoDim . COIZQ limpiarInvocador exp CODER

    COIZQ           shift and go to state 287


state 271

    (141) escritura -> OUTPUT PIZQ exp PDER PYC .

    LLDER           reduce using rule 141 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    WHILE           reduce using rule 141 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    OUTPUT          reduce using rule 141 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    INPUT           reduce using rule 141 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    ID              reduce using rule 141 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    RETURN          reduce using rule 141 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    THIS            reduce using rule 141 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    IF              reduce using rule 141 (escritura -> OUTPUT PIZQ exp PDER PYC .)


state 272

    (52) params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim .

    PDER            reduce using rule 52 (params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim .)
    COMA            reduce using rule 52 (params_ciclo -> params_ciclo COMA tipo ID COIZQ cte_numeral CODER meterParametrosDim .)


state 273

    (83) exp -> CHARAT PIZQ atom COMA exp . PDER
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PDER            shift and go to state 288
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 274

    (115) while -> WHILE while_1 PIZQ exp PDER while_2 . LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> WHILE while_1 PIZQ exp PDER while_2 . LLIZQ while_3 LLDER

    LLIZQ           shift and go to state 289


state 275

    (121) atom -> ID PUNTO definirInvocador ID . checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (127) checarAtributoDim -> .
    (128) checarAtributo -> .

    COIZQ           reduce using rule 127 (checarAtributoDim -> .)
    PDER            reduce using rule 128 (checarAtributo -> .)
    COMA            reduce using rule 128 (checarAtributo -> .)

    checarAtributo                 shift and go to state 260
    checarAtributoDim              shift and go to state 262

state 276

    (140) lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .

    LLDER           reduce using rule 140 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    WHILE           reduce using rule 140 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    OUTPUT          reduce using rule 140 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    INPUT           reduce using rule 140 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    ID              reduce using rule 140 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    RETURN          reduce using rule 140 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    THIS            reduce using rule 140 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    IF              reduce using rule 140 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)


state 277

    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra . PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra . PIZQ limpiarInvocador PDER generarGosub

    PIZQ            shift and go to state 290


state 278

    (121) atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ . limpiarInvocador exp CODER
    (11) limpiarInvocador -> .

    LEN             reduce using rule 11 (limpiarInvocador -> .)
    CHARAT          reduce using rule 11 (limpiarInvocador -> .)
    NOT             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    PIZQ            reduce using rule 11 (limpiarInvocador -> .)
    CTE_STR         reduce using rule 11 (limpiarInvocador -> .)
    CTE_CHAR        reduce using rule 11 (limpiarInvocador -> .)
    CTE_NUMERAL     reduce using rule 11 (limpiarInvocador -> .)
    CTE_REAL        reduce using rule 11 (limpiarInvocador -> .)
    TRUE            reduce using rule 11 (limpiarInvocador -> .)
    FALSE           reduce using rule 11 (limpiarInvocador -> .)
    ID              reduce using rule 11 (limpiarInvocador -> .)
    THIS            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 291

state 279

    (75) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER . generarGosub
    (76) generarGosub -> .

    PYC             reduce using rule 76 (generarGosub -> .)
    MAS             reduce using rule 76 (generarGosub -> .)
    MENOS           reduce using rule 76 (generarGosub -> .)
    POR             reduce using rule 76 (generarGosub -> .)
    ENTRE           reduce using rule 76 (generarGosub -> .)
    MOD             reduce using rule 76 (generarGosub -> .)
    IGUALC          reduce using rule 76 (generarGosub -> .)
    NOTIGUAL        reduce using rule 76 (generarGosub -> .)
    MAYOR           reduce using rule 76 (generarGosub -> .)
    MAYORIGUAL      reduce using rule 76 (generarGosub -> .)
    MENOR           reduce using rule 76 (generarGosub -> .)
    MENORIGUAL      reduce using rule 76 (generarGosub -> .)
    AND             reduce using rule 76 (generarGosub -> .)
    OR              reduce using rule 76 (generarGosub -> .)
    PDER            reduce using rule 76 (generarGosub -> .)
    CODER           reduce using rule 76 (generarGosub -> .)
    COMA            reduce using rule 76 (generarGosub -> .)

    generarGosub                   shift and go to state 292

state 280

    (74) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo . PDER generarGosub
    (81) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 293
    COMA            shift and go to state 294


state 281

    (80) exp_ciclo -> exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PDER            reduce using rule 80 (exp_ciclo -> exp .)
    COMA            reduce using rule 80 (exp_ciclo -> exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 282

    (122) atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .

    CODER           reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MAS             reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MENOS           reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    POR             reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    ENTRE           reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MOD             reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    IGUALC          reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    NOTIGUAL        reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MAYOR           reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MAYORIGUAL      reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MENOR           reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MENORIGUAL      reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    AND             reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    OR              reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    IGUAL           reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    PYC             reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    PDER            reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    COMA            reduce using rule 122 (atom -> ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)


state 283

    (132) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ . ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ . if_2 LLDER
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (137) if_2 -> .
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 137 (if_2 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 295
    if_2                           shift and go to state 296
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 284

    (130) condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .

    WHILE           reduce using rule 130 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    OUTPUT          reduce using rule 130 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    INPUT           reduce using rule 130 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    ID              reduce using rule 130 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    RETURN          reduce using rule 130 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    THIS            reduce using rule 130 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    IF              reduce using rule 130 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)
    LLDER           reduce using rule 130 (condicion -> ciclo_cond ELSE if_3 LLIZQ LLDER if_4 .)


state 285

    (129) condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER . if_4
    (139) if_4 -> .

    LLDER           reduce using rule 139 (if_4 -> .)
    WHILE           reduce using rule 139 (if_4 -> .)
    OUTPUT          reduce using rule 139 (if_4 -> .)
    INPUT           reduce using rule 139 (if_4 -> .)
    ID              reduce using rule 139 (if_4 -> .)
    RETURN          reduce using rule 139 (if_4 -> .)
    THIS            reduce using rule 139 (if_4 -> .)
    IF              reduce using rule 139 (if_4 -> .)

    if_4                           shift and go to state 297

state 286

    (134) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp . PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp . PDER if_1 LLIZQ if_2 LLDER
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PDER            shift and go to state 298
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 287

    (123) atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ . limpiarInvocador exp CODER
    (11) limpiarInvocador -> .

    LEN             reduce using rule 11 (limpiarInvocador -> .)
    CHARAT          reduce using rule 11 (limpiarInvocador -> .)
    NOT             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    PIZQ            reduce using rule 11 (limpiarInvocador -> .)
    CTE_STR         reduce using rule 11 (limpiarInvocador -> .)
    CTE_CHAR        reduce using rule 11 (limpiarInvocador -> .)
    CTE_NUMERAL     reduce using rule 11 (limpiarInvocador -> .)
    CTE_REAL        reduce using rule 11 (limpiarInvocador -> .)
    TRUE            reduce using rule 11 (limpiarInvocador -> .)
    FALSE           reduce using rule 11 (limpiarInvocador -> .)
    ID              reduce using rule 11 (limpiarInvocador -> .)
    THIS            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 299

state 288

    (83) exp -> CHARAT PIZQ atom COMA exp PDER .

    MAS             reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    MENOS           reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    POR             reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    ENTRE           reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    MOD             reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    IGUALC          reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    NOTIGUAL        reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    MAYOR           reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    MAYORIGUAL      reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    MENOR           reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    MENORIGUAL      reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    AND             reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    OR              reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    PDER            reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    COMA            reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    CODER           reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)
    PYC             reduce using rule 83 (exp -> CHARAT PIZQ atom COMA exp PDER .)


state 289

    (115) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ . ciclo_estatuto while_3 LLDER
    (116) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ . while_3 LLDER
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (119) while_3 -> .
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 119 (while_3 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    while_3                        shift and go to state 300
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 301
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 290

    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ . limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ . limpiarInvocador PDER generarGosub
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)
    LEN             reduce using rule 11 (limpiarInvocador -> .)
    CHARAT          reduce using rule 11 (limpiarInvocador -> .)
    NOT             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    PIZQ            reduce using rule 11 (limpiarInvocador -> .)
    CTE_STR         reduce using rule 11 (limpiarInvocador -> .)
    CTE_CHAR        reduce using rule 11 (limpiarInvocador -> .)
    CTE_NUMERAL     reduce using rule 11 (limpiarInvocador -> .)
    CTE_REAL        reduce using rule 11 (limpiarInvocador -> .)
    TRUE            reduce using rule 11 (limpiarInvocador -> .)
    FALSE           reduce using rule 11 (limpiarInvocador -> .)
    ID              reduce using rule 11 (limpiarInvocador -> .)
    THIS            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 302

state 291

    (121) atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador . exp CODER
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    exp                            shift and go to state 303
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141
    cte_real                       shift and go to state 146

state 292

    (75) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .

    CODER           reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAS             reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENOS           reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    POR             reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    ENTRE           reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MOD             reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    IGUALC          reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    NOTIGUAL        reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAYOR           reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAYORIGUAL      reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENOR           reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENORIGUAL      reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    AND             reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    OR              reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    PYC             reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    PDER            reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    COMA            reduce using rule 75 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)


state 293

    (74) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER . generarGosub
    (76) generarGosub -> .

    PYC             reduce using rule 76 (generarGosub -> .)
    MAS             reduce using rule 76 (generarGosub -> .)
    MENOS           reduce using rule 76 (generarGosub -> .)
    POR             reduce using rule 76 (generarGosub -> .)
    ENTRE           reduce using rule 76 (generarGosub -> .)
    MOD             reduce using rule 76 (generarGosub -> .)
    IGUALC          reduce using rule 76 (generarGosub -> .)
    NOTIGUAL        reduce using rule 76 (generarGosub -> .)
    MAYOR           reduce using rule 76 (generarGosub -> .)
    MAYORIGUAL      reduce using rule 76 (generarGosub -> .)
    MENOR           reduce using rule 76 (generarGosub -> .)
    MENORIGUAL      reduce using rule 76 (generarGosub -> .)
    AND             reduce using rule 76 (generarGosub -> .)
    OR              reduce using rule 76 (generarGosub -> .)
    PDER            reduce using rule 76 (generarGosub -> .)
    CODER           reduce using rule 76 (generarGosub -> .)
    COMA            reduce using rule 76 (generarGosub -> .)

    generarGosub                   shift and go to state 304

state 294

    (81) exp_ciclo -> exp_ciclo COMA . exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    cte_real                       shift and go to state 146
    exp                            shift and go to state 305
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141

state 295

    (132) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto . if_2 LLDER
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (137) if_2 -> .
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 137 (if_2 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 172
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    asignacion                     shift and go to state 126
    if_2                           shift and go to state 306
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 296

    (133) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 . LLDER

    LLDER           shift and go to state 307


state 297

    (129) condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .

    WHILE           reduce using rule 129 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    OUTPUT          reduce using rule 129 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    INPUT           reduce using rule 129 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    ID              reduce using rule 129 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    RETURN          reduce using rule 129 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    THIS            reduce using rule 129 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    IF              reduce using rule 129 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)
    LLDER           reduce using rule 129 (condicion -> ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4 .)


state 298

    (134) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER . if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER . if_1 LLIZQ if_2 LLDER
    (136) if_1 -> .

    LLIZQ           reduce using rule 136 (if_1 -> .)

    if_1                           shift and go to state 308

state 299

    (123) atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador . exp CODER
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    cte_bool                       shift and go to state 139
    cte_str                        shift and go to state 145
    exp                            shift and go to state 309
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    llamada_func                   shift and go to state 143
    cte_numeral                    shift and go to state 141
    cte_real                       shift and go to state 146

state 300

    (116) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 . LLDER

    LLDER           shift and go to state 310


state 301

    (115) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto . while_3 LLDER
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (119) while_3 -> .
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 119 (while_3 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    lectura                        shift and go to state 120
    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 172
    condicion                      shift and go to state 119
    ciclo_cond                     shift and go to state 128
    return                         shift and go to state 115
    atom                           shift and go to state 113
    while_3                        shift and go to state 311
    asignacion                     shift and go to state 126
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 302

    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador . exp_ciclo PDER generarGosub
    (73) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador . PDER generarGosub
    (80) exp_ciclo -> . exp
    (81) exp_ciclo -> . exp_ciclo COMA exp
    (82) exp -> . LEN PIZQ atom PDER
    (83) exp -> . CHARAT PIZQ atom COMA exp PDER
    (84) exp -> . exp MAS exp
    (85) exp -> . exp MENOS exp
    (86) exp -> . exp POR exp
    (87) exp -> . exp ENTRE exp
    (88) exp -> . exp MOD exp
    (89) exp -> . exp IGUALC exp
    (90) exp -> . exp NOTIGUAL exp
    (91) exp -> . exp MAYOR exp
    (92) exp -> . exp MAYORIGUAL exp
    (93) exp -> . exp MENOR exp
    (94) exp -> . exp MENORIGUAL exp
    (95) exp -> . exp AND exp
    (96) exp -> . exp OR exp
    (97) exp -> . NOT exp
    (98) exp -> . MENOS exp
    (99) exp -> . PIZQ exp PDER
    (100) exp -> . cte_str
    (101) exp -> . cte_char
    (102) exp -> . cte_numeral
    (103) exp -> . cte_real
    (104) exp -> . cte_bool
    (105) exp -> . atom limpiarInvocador
    (106) exp -> . llamada_func limpiarInvocador
    (107) cte_str -> . CTE_STR
    (108) cte_char -> . CTE_CHAR
    (109) cte_numeral -> . CTE_NUMERAL
    (110) cte_real -> . CTE_REAL
    (111) cte_bool -> . TRUE
    (112) cte_bool -> . FALSE
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub

    PDER            shift and go to state 312
    LEN             shift and go to state 153
    CHARAT          shift and go to state 151
    NOT             shift and go to state 156
    MENOS           shift and go to state 154
    PIZQ            shift and go to state 138
    CTE_STR         shift and go to state 152
    CTE_CHAR        shift and go to state 142
    CTE_NUMERAL     shift and go to state 81
    CTE_REAL        shift and go to state 144
    TRUE            shift and go to state 140
    FALSE           shift and go to state 150
    ID              shift and go to state 149
    THIS            shift and go to state 129

    llamada_func                   shift and go to state 143
    cte_str                        shift and go to state 145
    exp_ciclo                      shift and go to state 313
    cte_bool                       shift and go to state 139
    exp                            shift and go to state 281
    atom                           shift and go to state 147
    cte_char                       shift and go to state 148
    cte_numeral                    shift and go to state 141
    cte_real                       shift and go to state 146

state 303

    (121) atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp . CODER
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    CODER           shift and go to state 314
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 304

    (74) llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .

    CODER           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAS             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENOS           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    POR             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    ENTRE           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MOD             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    IGUALC          reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    NOTIGUAL        reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAYOR           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAYORIGUAL      reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENOR           reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENORIGUAL      reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    AND             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    OR              reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    PYC             reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    PDER            reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    COMA            reduce using rule 74 (llamada_func -> ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)


state 305

    (81) exp_ciclo -> exp_ciclo COMA exp .
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    PDER            reduce using rule 81 (exp_ciclo -> exp_ciclo COMA exp .)
    COMA            reduce using rule 81 (exp_ciclo -> exp_ciclo COMA exp .)
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 306

    (132) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 . LLDER

    LLDER           shift and go to state 315


state 307

    (133) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .

    ELSE            reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    LLDER           reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    WHILE           reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    OUTPUT          reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    INPUT           reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    ID              reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    RETURN          reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    THIS            reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    IF              reduce using rule 133 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)


state 308

    (134) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 . LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 . LLIZQ if_2 LLDER

    LLIZQ           shift and go to state 316


state 309

    (123) atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp . CODER
    (84) exp -> exp . MAS exp
    (85) exp -> exp . MENOS exp
    (86) exp -> exp . POR exp
    (87) exp -> exp . ENTRE exp
    (88) exp -> exp . MOD exp
    (89) exp -> exp . IGUALC exp
    (90) exp -> exp . NOTIGUAL exp
    (91) exp -> exp . MAYOR exp
    (92) exp -> exp . MAYORIGUAL exp
    (93) exp -> exp . MENOR exp
    (94) exp -> exp . MENORIGUAL exp
    (95) exp -> exp . AND exp
    (96) exp -> exp . OR exp

    CODER           shift and go to state 317
    MAS             shift and go to state 190
    MENOS           shift and go to state 196
    POR             shift and go to state 193
    ENTRE           shift and go to state 192
    MOD             shift and go to state 202
    IGUALC          shift and go to state 191
    NOTIGUAL        shift and go to state 197
    MAYOR           shift and go to state 201
    MAYORIGUAL      shift and go to state 198
    MENOR           shift and go to state 195
    MENORIGUAL      shift and go to state 199
    AND             shift and go to state 189
    OR              shift and go to state 194


state 310

    (116) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .

    WHILE           reduce using rule 116 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    OUTPUT          reduce using rule 116 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    INPUT           reduce using rule 116 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    ID              reduce using rule 116 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    RETURN          reduce using rule 116 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    THIS            reduce using rule 116 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    IF              reduce using rule 116 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)
    LLDER           reduce using rule 116 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER .)


state 311

    (115) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 . LLDER

    LLDER           shift and go to state 318


state 312

    (73) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER . generarGosub
    (76) generarGosub -> .

    PYC             reduce using rule 76 (generarGosub -> .)
    MAS             reduce using rule 76 (generarGosub -> .)
    MENOS           reduce using rule 76 (generarGosub -> .)
    POR             reduce using rule 76 (generarGosub -> .)
    ENTRE           reduce using rule 76 (generarGosub -> .)
    MOD             reduce using rule 76 (generarGosub -> .)
    IGUALC          reduce using rule 76 (generarGosub -> .)
    NOTIGUAL        reduce using rule 76 (generarGosub -> .)
    MAYOR           reduce using rule 76 (generarGosub -> .)
    MAYORIGUAL      reduce using rule 76 (generarGosub -> .)
    MENOR           reduce using rule 76 (generarGosub -> .)
    MENORIGUAL      reduce using rule 76 (generarGosub -> .)
    AND             reduce using rule 76 (generarGosub -> .)
    OR              reduce using rule 76 (generarGosub -> .)
    PDER            reduce using rule 76 (generarGosub -> .)
    CODER           reduce using rule 76 (generarGosub -> .)
    COMA            reduce using rule 76 (generarGosub -> .)

    generarGosub                   shift and go to state 319

state 313

    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo . PDER generarGosub
    (81) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 320
    COMA            shift and go to state 294


state 314

    (121) atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .

    CODER           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MAS             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MENOS           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    POR             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    ENTRE           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MOD             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    IGUALC          reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    NOTIGUAL        reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MAYOR           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MAYORIGUAL      reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MENOR           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MENORIGUAL      reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    AND             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    OR              reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    IGUAL           reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    PYC             reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    PDER            reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    COMA            reduce using rule 121 (atom -> ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)


state 315

    (132) ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .

    ELSE            reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    LLDER           reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    WHILE           reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    OUTPUT          reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    INPUT           reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    ID              reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    RETURN          reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    THIS            reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    IF              reduce using rule 132 (ciclo_cond -> IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)


state 316

    (134) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ . ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ . if_2 LLDER
    (63) ciclo_estatuto -> . estatuto
    (64) ciclo_estatuto -> . ciclo_estatuto estatuto
    (137) if_2 -> .
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 137 (if_2 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 117
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    atom                           shift and go to state 113
    ciclo_cond                     shift and go to state 128
    asignacion                     shift and go to state 126
    ciclo_estatuto                 shift and go to state 321
    if_2                           shift and go to state 322
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 317

    (123) atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .

    CODER           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MAS             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MENOS           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    POR             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    ENTRE           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MOD             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    IGUALC          reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    NOTIGUAL        reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MAYOR           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MAYORIGUAL      reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MENOR           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    MENORIGUAL      reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    AND             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    OR              reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    IGUAL           reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    PYC             reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    PDER            reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)
    COMA            reduce using rule 123 (atom -> THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER .)


state 318

    (115) while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .

    WHILE           reduce using rule 115 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    OUTPUT          reduce using rule 115 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    INPUT           reduce using rule 115 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    ID              reduce using rule 115 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    RETURN          reduce using rule 115 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    THIS            reduce using rule 115 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    IF              reduce using rule 115 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)
    LLDER           reduce using rule 115 (while -> WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER .)


state 319

    (73) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .

    CODER           reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAS             reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENOS           reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    POR             reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    ENTRE           reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MOD             reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    IGUALC          reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    NOTIGUAL        reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAYOR           reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MAYORIGUAL      reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENOR           reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    MENORIGUAL      reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    AND             reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    OR              reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    PYC             reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    PDER            reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)
    COMA            reduce using rule 73 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub .)


state 320

    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER . generarGosub
    (76) generarGosub -> .

    PYC             reduce using rule 76 (generarGosub -> .)
    MAS             reduce using rule 76 (generarGosub -> .)
    MENOS           reduce using rule 76 (generarGosub -> .)
    POR             reduce using rule 76 (generarGosub -> .)
    ENTRE           reduce using rule 76 (generarGosub -> .)
    MOD             reduce using rule 76 (generarGosub -> .)
    IGUALC          reduce using rule 76 (generarGosub -> .)
    NOTIGUAL        reduce using rule 76 (generarGosub -> .)
    MAYOR           reduce using rule 76 (generarGosub -> .)
    MAYORIGUAL      reduce using rule 76 (generarGosub -> .)
    MENOR           reduce using rule 76 (generarGosub -> .)
    MENORIGUAL      reduce using rule 76 (generarGosub -> .)
    AND             reduce using rule 76 (generarGosub -> .)
    OR              reduce using rule 76 (generarGosub -> .)
    PDER            reduce using rule 76 (generarGosub -> .)
    CODER           reduce using rule 76 (generarGosub -> .)
    COMA            reduce using rule 76 (generarGosub -> .)

    generarGosub                   shift and go to state 323

state 321

    (134) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto . if_2 LLDER
    (64) ciclo_estatuto -> ciclo_estatuto . estatuto
    (137) if_2 -> .
    (65) estatuto -> . while
    (66) estatuto -> . asignacion
    (67) estatuto -> . condicion
    (68) estatuto -> . escritura
    (69) estatuto -> . lectura
    (70) estatuto -> . llamada_func limpiarInvocador PYC
    (71) estatuto -> . return
    (115) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ ciclo_estatuto while_3 LLDER
    (116) while -> . WHILE while_1 PIZQ exp PDER while_2 LLIZQ while_3 LLDER
    (120) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (129) condicion -> . ciclo_cond ELSE if_3 LLIZQ ciclo_estatuto LLDER if_4
    (130) condicion -> . ciclo_cond ELSE if_3 LLIZQ LLDER if_4
    (131) condicion -> . ciclo_cond if_4
    (141) escritura -> . OUTPUT PIZQ exp PDER PYC
    (140) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (72) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (73) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (74) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub
    (75) llamada_func -> . ID checarFuncion generaEra PIZQ limpiarInvocador PDER generarGosub
    (113) return -> . RETURN exp PYC
    (114) return -> . RETURN PYC
    (121) atom -> . ID PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (122) atom -> . ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (123) atom -> . THIS PUNTO definirInvocador ID checarAtributoDim COIZQ limpiarInvocador exp CODER
    (124) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (125) atom -> . ID checarAtributo
    (126) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (132) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (133) ciclo_cond -> . IF PIZQ exp PDER if_1 LLIZQ if_2 LLDER
    (134) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER
    (135) ciclo_cond -> . ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER

    LLDER           reduce using rule 137 (if_2 -> .)
    WHILE           shift and go to state 114
    OUTPUT          shift and go to state 131
    INPUT           shift and go to state 122
    ID              shift and go to state 174
    RETURN          shift and go to state 111
    THIS            shift and go to state 129
    IF              shift and go to state 125

    llamada_func                   shift and go to state 123
    estatuto                       shift and go to state 172
    condicion                      shift and go to state 119
    lectura                        shift and go to state 120
    return                         shift and go to state 115
    atom                           shift and go to state 113
    ciclo_cond                     shift and go to state 128
    asignacion                     shift and go to state 126
    if_2                           shift and go to state 324
    while                          shift and go to state 130
    escritura                      shift and go to state 132

state 322

    (135) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 . LLDER

    LLDER           shift and go to state 325


state 323

    (72) llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .

    CODER           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAS             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENOS           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    POR             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    ENTRE           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MOD             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    IGUALC          reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    NOTIGUAL        reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAYOR           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MAYORIGUAL      reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENOR           reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    MENORIGUAL      reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    AND             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    OR              reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    PYC             reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    PDER            reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)
    COMA            reduce using rule 72 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion generaEra PIZQ limpiarInvocador exp_ciclo PDER generarGosub .)


state 324

    (134) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 . LLDER

    LLDER           shift and go to state 326


state 325

    (135) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .

    ELSE            reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    LLDER           reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    WHILE           reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    OUTPUT          reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    INPUT           reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    ID              reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    RETURN          reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    THIS            reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)
    IF              reduce using rule 135 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ if_2 LLDER .)


state 326

    (134) ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .

    ELSE            reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    LLDER           reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    WHILE           reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    OUTPUT          reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    INPUT           reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    ID              reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    RETURN          reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    THIS            reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)
    IF              reduce using rule 134 (ciclo_cond -> ciclo_cond ELSE IF if_3 PIZQ exp PDER if_1 LLIZQ ciclo_estatuto if_2 LLDER .)

