Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    NEW

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ciclo_clase clase_main
Rule 2     programa -> clase_main
Rule 3     ciclo_clase -> clase
Rule 4     ciclo_clase -> ciclo_clase clase
Rule 5     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
Rule 6     clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
Rule 7     clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
Rule 8     clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual
Rule 9     declararClase -> <empty>
Rule 10    limpiarMetodoActual -> <empty>
Rule 11    limpiarInvocador -> <empty>
Rule 12    herencia -> empty
Rule 13    herencia -> UNDER ID agregaAncestro
Rule 14    agregaAncestro -> <empty>
Rule 15    ciclo_vars -> acceso vars
Rule 16    ciclo_vars -> ciclo_vars acceso vars
Rule 17    ciclo_func -> func
Rule 18    ciclo_func -> ciclo_func func
Rule 19    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
Rule 20    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
Rule 21    clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
Rule 22    clase_main -> CLASS MAIN declararClase LLIZQ main LLDER
Rule 23    vars -> var_op PYC
Rule 24    var_op -> tipo ciclo_tipo
Rule 25    var_op -> ID ciclo_id
Rule 26    revisarExistenciaClase -> <empty>
Rule 27    ciclo_tipo -> ID declararVariable
Rule 28    ciclo_tipo -> ID declararVariable COIZQ exp CODER
Rule 29    ciclo_tipo -> ciclo_tipo COMA ID declararVariable
Rule 30    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER
Rule 31    ciclo_tipo -> ID declararVariable IGUAL exp
Rule 32    ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp
Rule 33    ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp
Rule 34    ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp
Rule 35    ciclo_id -> ID declararVariable
Rule 36    ciclo_id -> ID declararVariable COIZQ exp CODER
Rule 37    ciclo_id -> ciclo_id COMA ID declararVariable
Rule 38    ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER
Rule 39    ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador
Rule 40    ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador
Rule 41    declararVariable -> <empty>
Rule 42    tipo -> NUMERAL
Rule 43    tipo -> REAL
Rule 44    tipo -> BOOL
Rule 45    tipo -> CHAR
Rule 46    tipo -> STRING
Rule 47    acceso -> HIDDEN
Rule 48    acceso -> VISIBLE
Rule 49    func -> acceso tipo ID declararMetodo params cuerpo_func
Rule 50    func -> acceso WITHOUT ID declararMetodo params cuerpo_func
Rule 51    declararMetodo -> <empty>
Rule 52    main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func
Rule 53    prueba -> <empty>
Rule 54    params -> PIZQ params_ciclo PDER
Rule 55    params -> PIZQ PDER
Rule 56    params_ciclo -> tipo ID meterParametros
Rule 57    params_ciclo -> params_ciclo COMA tipo ID meterParametros
Rule 58    meterParametros -> <empty>
Rule 59    cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER
Rule 60    cuerpo_func -> LLIZQ ciclo_vars_func LLDER
Rule 61    cuerpo_func -> LLIZQ ciclo_estatuto LLDER
Rule 62    cuerpo_func -> LLIZQ LLDER
Rule 63    ciclo_vars_func -> vars
Rule 64    ciclo_vars_func -> ciclo_vars_func vars
Rule 65    ciclo_estatuto -> estatuto
Rule 66    ciclo_estatuto -> ciclo_estatuto estatuto
Rule 67    estatuto -> while
Rule 68    estatuto -> asignacion
Rule 69    estatuto -> condicion
Rule 70    estatuto -> escritura
Rule 71    estatuto -> lectura
Rule 72    estatuto -> llamada_func limpiarInvocador PYC
Rule 73    estatuto -> return
Rule 74    llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER
Rule 75    llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
Rule 76    llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
Rule 77    llamada_func -> ID checarFuncion PIZQ PDER
Rule 78    llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
Rule 79    llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
Rule 80    checarFuncion -> <empty>
Rule 81    definirInvocador -> <empty>
Rule 82    exp_ciclo -> exp
Rule 83    exp_ciclo -> exp_ciclo COMA exp
Rule 84    cte_bool -> TRUE
Rule 85    cte_bool -> FALSE
Rule 86    exp -> opciones ope exp
Rule 87    exp -> opciones
Rule 88    exp -> PIZQ exp PDER
Rule 89    exp -> PIZQ exp PDER ope exp
Rule 90    exp -> MENOS PIZQ exp PDER ope exp
Rule 91    exp -> NOT exp
Rule 92    exp -> MENOS PIZQ exp PDER
Rule 93    opciones -> CTE_STR
Rule 94    opciones -> CTE_CHAR
Rule 95    opciones -> CTE_NUMERAL
Rule 96    opciones -> CTE_REAL
Rule 97    opciones -> cte_bool
Rule 98    opciones -> atom limpiarInvocador
Rule 99    opciones -> llamada_func limpiarInvocador
Rule 100   opciones -> MENOS CTE_NUMERAL
Rule 101   opciones -> MENOS CTE_REAL
Rule 102   opciones -> MENOS atom limpiarInvocador
Rule 103   opciones -> MENOS llamada_func limpiarInvocador
Rule 104   ope -> MAS
Rule 105   ope -> MENOS
Rule 106   ope -> MOD
Rule 107   ope -> ENTRE
Rule 108   ope -> POR
Rule 109   ope -> IGUALC
Rule 110   ope -> MENOR
Rule 111   ope -> MENORIGUAL
Rule 112   ope -> MAYOR
Rule 113   ope -> MAYORIGUAL
Rule 114   ope -> NOTIGUAL
Rule 115   ope -> AND
Rule 116   ope -> OR
Rule 117   return -> RETURN exp PYC
Rule 118   return -> RETURN PYC
Rule 119   while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 120   while -> WHILE PIZQ exp PDER LLIZQ LLDER
Rule 121   asignacion -> atom limpiarInvocador IGUAL exp PYC
Rule 122   atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
Rule 123   atom -> ID PUNTO definirInvocador ID checarAtributo
Rule 124   atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
Rule 125   atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
Rule 126   atom -> ID checarAtributo
Rule 127   atom -> ID definirInvocador COIZQ exp CODER checarAtributo2
Rule 128   atom -> THIS PUNTO definirInvocador ID checarAtributo
Rule 129   atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
Rule 130   checarAtributo2 -> <empty>
Rule 131   checarAtributo -> <empty>
Rule 132   condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
Rule 133   condicion -> ciclo_cond ELSE LLIZQ LLDER
Rule 134   ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 135   ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER
Rule 136   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
Rule 137   ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER
Rule 138   lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC
Rule 139   escritura -> OUTPUT PIZQ exp PDER PYC
Rule 140   empty -> <empty>

Terminals, with rules where they appear

AND                  : 115
BOOL                 : 44
CHAR                 : 45
CLASS                : 5 6 7 8 19 20 21 22
CODER                : 28 30 32 34 36 38 76 79 122 124 124 125 127 129
COIZQ                : 28 30 32 34 36 38 76 79 122 124 124 125 127 129
COMA                 : 29 30 33 34 37 38 40 57 83
CTE_CHAR             : 94
CTE_NUMERAL          : 95 100
CTE_REAL             : 96 101
CTE_STR              : 93
ELSE                 : 132 133 136 137
ENTRE                : 107
FALSE                : 85
HIDDEN               : 47
ID                   : 5 6 7 8 13 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 49 50 56 57 74 75 75 76 76 77 78 78 79 79 122 122 123 123 124 124 125 125 126 127 128 129
IF                   : 134 135 136 137
IGUAL                : 31 32 33 34 39 40 121
IGUALC               : 109
INPUT                : 138
LLDER                : 5 6 7 8 19 20 21 22 59 60 61 62 119 120 132 133 134 135 136 137
LLIZQ                : 5 6 7 8 19 20 21 22 59 60 61 62 119 120 132 133 134 135 136 137
MAIN                 : 19 20 21 22 52
MAS                  : 104
MAYOR                : 112
MAYORIGUAL           : 113
MENOR                : 110
MENORIGUAL           : 111
MENOS                : 90 92 100 101 102 103 105
MOD                  : 106
NEW                  : 
NOT                  : 91
NOTIGUAL             : 114
NUMERAL              : 42
OR                   : 116
OUTPUT               : 139
PDER                 : 52 54 55 74 75 76 77 78 79 88 89 90 92 119 120 134 135 136 137 138 139
PIZQ                 : 52 54 55 74 75 76 77 78 79 88 89 90 92 119 120 134 135 136 137 138 139
POR                  : 108
PUNTO                : 75 76 78 79 122 123 124 125 128 129
PYC                  : 23 72 117 118 121 138 139
REAL                 : 43
RETURN               : 117 118
STRING               : 46
THIS                 : 128 129
TRUE                 : 84
UNDER                : 13
VISIBLE              : 48
WHILE                : 119 120
WITHOUT              : 50 52
error                : 

Nonterminals, with rules where they appear

acceso               : 15 16 49 50 52
agregaAncestro       : 13
asignacion           : 68
atom                 : 39 40 98 102 121 138
checarAtributo       : 122 123 124 125 126 128 129
checarAtributo2      : 127
checarFuncion        : 74 75 76 77 78 79
ciclo_clase          : 1 4
ciclo_cond           : 132 133 136 137
ciclo_estatuto       : 59 61 66 119 132 134 136
ciclo_func           : 5 7 18 19 21
ciclo_id             : 25 37 38 40
ciclo_tipo           : 24 29 30 33 34
ciclo_vars           : 5 6 16 19 20
ciclo_vars_func      : 59 60 64
clase                : 3 4
clase_main           : 1 2
condicion            : 69
cte_bool             : 97
cuerpo_func          : 49 50 52
declararClase        : 5 6 7 8 19 20 21 22
declararMetodo       : 49 50 52
declararVariable     : 27 28 29 30 31 32 33 34 35 36 37 38 39 40
definirInvocador     : 75 76 78 79 122 123 124 125 127 128 129
empty                : 12
escritura            : 70
estatuto             : 65 66
exp                  : 28 30 31 32 32 33 34 34 36 38 76 79 82 83 86 88 89 89 90 90 91 92 117 119 120 121 122 124 124 125 127 129 134 135 136 137 139
exp_ciclo            : 74 75 76 83
func                 : 17 18
herencia             : 5 6 7 8
lectura              : 71
limpiarInvocador     : 39 40 72 98 99 102 103 121 138
limpiarMetodoActual  : 5 6 7 8
llamada_func         : 72 99 103
main                 : 19 20 21 22
meterParametros      : 56 57
opciones             : 86 87
ope                  : 86 89 90
params               : 49 50
params_ciclo         : 54 57
programa             : 0
prueba               : 52
return               : 73
revisarExistenciaClase : 
tipo                 : 24 49 56 57
var_op               : 23
vars                 : 15 16 63 64
while                : 67

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ciclo_clase clase_main
    (2) programa -> . clase_main
    (3) ciclo_clase -> . clase
    (4) ciclo_clase -> . ciclo_clase clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    ciclo_clase                    shift and go to state 1
    clase_main                     shift and go to state 2
    clase                          shift and go to state 3
    programa                       shift and go to state 4

state 1

    (1) programa -> ciclo_clase . clase_main
    (4) ciclo_clase -> ciclo_clase . clase
    (19) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> . CLASS MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> . CLASS MAIN declararClase LLIZQ main LLDER
    (5) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> . CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> . CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    CLASS           shift and go to state 5

    clase_main                     shift and go to state 6
    clase                          shift and go to state 7

state 2

    (2) programa -> clase_main .

    $end            reduce using rule 2 (programa -> clase_main .)


state 3

    (3) ciclo_clase -> clase .

    CLASS           reduce using rule 3 (ciclo_clase -> clase .)


state 4

    (0) S' -> programa .



state 5

    (19) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS . MAIN declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS . MAIN declararClase LLIZQ main LLDER
    (5) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS . ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS . ID declararClase herencia LLIZQ LLDER limpiarMetodoActual

    MAIN            shift and go to state 8
    ID              shift and go to state 9


state 6

    (1) programa -> ciclo_clase clase_main .

    $end            reduce using rule 1 (programa -> ciclo_clase clase_main .)


state 7

    (4) ciclo_clase -> ciclo_clase clase .

    CLASS           reduce using rule 4 (ciclo_clase -> ciclo_clase clase .)


state 8

    (19) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN . declararClase LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN . declararClase LLIZQ main LLDER
    (9) declararClase -> .

    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 10

state 9

    (5) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID . declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID . declararClase herencia LLIZQ LLDER limpiarMetodoActual
    (9) declararClase -> .

    UNDER           reduce using rule 9 (declararClase -> .)
    LLIZQ           reduce using rule 9 (declararClase -> .)

    declararClase                  shift and go to state 11

state 10

    (19) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase . LLIZQ ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase . LLIZQ main LLDER

    LLIZQ           shift and go to state 12


state 11

    (5) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase . herencia LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase . herencia LLIZQ LLDER limpiarMetodoActual
    (12) herencia -> . empty
    (13) herencia -> . UNDER ID agregaAncestro
    (140) empty -> .

    UNDER           shift and go to state 13
    LLIZQ           reduce using rule 140 (empty -> .)

    herencia                       shift and go to state 14
    empty                          shift and go to state 15

state 12

    (19) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_vars main LLDER
    (21) clase_main -> CLASS MAIN declararClase LLIZQ . ciclo_func main LLDER
    (22) clase_main -> CLASS MAIN declararClase LLIZQ . main LLDER
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 17
    ciclo_func                     shift and go to state 18
    ciclo_vars                     shift and go to state 16
    func                           shift and go to state 21
    main                           shift and go to state 20

state 13

    (13) herencia -> UNDER . ID agregaAncestro

    ID              shift and go to state 23


state 14

    (5) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia . LLIZQ ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia . LLIZQ LLDER limpiarMetodoActual

    LLIZQ           shift and go to state 24


state 15

    (12) herencia -> empty .

    LLIZQ           reduce using rule 12 (herencia -> empty .)


state 16

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . ciclo_func main LLDER
    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars . main LLDER
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 25
    ciclo_func                     shift and go to state 26
    func                           shift and go to state 21
    main                           shift and go to state 27

state 17

    (15) ciclo_vars -> acceso . vars
    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID ciclo_id

    WITHOUT         shift and go to state 34
    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    ID              shift and go to state 32

    tipo                           shift and go to state 31
    vars                           shift and go to state 30
    var_op                         shift and go to state 36

state 18

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 38
    func                           shift and go to state 39
    main                           shift and go to state 40

state 19

    (48) acceso -> VISIBLE .

    WITHOUT         reduce using rule 48 (acceso -> VISIBLE .)
    NUMERAL         reduce using rule 48 (acceso -> VISIBLE .)
    REAL            reduce using rule 48 (acceso -> VISIBLE .)
    BOOL            reduce using rule 48 (acceso -> VISIBLE .)
    CHAR            reduce using rule 48 (acceso -> VISIBLE .)
    STRING          reduce using rule 48 (acceso -> VISIBLE .)
    ID              reduce using rule 48 (acceso -> VISIBLE .)


state 20

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main . LLDER

    LLDER           shift and go to state 41


state 21

    (17) ciclo_func -> func .

    LLDER           reduce using rule 17 (ciclo_func -> func .)
    HIDDEN          reduce using rule 17 (ciclo_func -> func .)
    VISIBLE         reduce using rule 17 (ciclo_func -> func .)


state 22

    (47) acceso -> HIDDEN .

    WITHOUT         reduce using rule 47 (acceso -> HIDDEN .)
    NUMERAL         reduce using rule 47 (acceso -> HIDDEN .)
    REAL            reduce using rule 47 (acceso -> HIDDEN .)
    BOOL            reduce using rule 47 (acceso -> HIDDEN .)
    CHAR            reduce using rule 47 (acceso -> HIDDEN .)
    STRING          reduce using rule 47 (acceso -> HIDDEN .)
    ID              reduce using rule 47 (acceso -> HIDDEN .)


state 23

    (13) herencia -> UNDER ID . agregaAncestro
    (14) agregaAncestro -> .

    LLIZQ           reduce using rule 14 (agregaAncestro -> .)

    agregaAncestro                 shift and go to state 42

state 24

    (5) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_vars LLDER limpiarMetodoActual
    (7) clase -> CLASS ID declararClase herencia LLIZQ . ciclo_func LLDER limpiarMetodoActual
    (8) clase -> CLASS ID declararClase herencia LLIZQ . LLDER limpiarMetodoActual
    (15) ciclo_vars -> . acceso vars
    (16) ciclo_vars -> . ciclo_vars acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 43
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 45
    ciclo_func                     shift and go to state 44
    ciclo_vars                     shift and go to state 46
    func                           shift and go to state 21

state 25

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID ciclo_id

    WITHOUT         shift and go to state 34
    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    ID              shift and go to state 32

    vars                           shift and go to state 47
    var_op                         shift and go to state 36
    tipo                           shift and go to state 31

state 26

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func . main LLDER
    (18) ciclo_func -> ciclo_func . func
    (52) main -> . acceso WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 38
    func                           shift and go to state 39
    main                           shift and go to state 48

state 27

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main . LLDER

    LLDER           shift and go to state 49


state 28

    (43) tipo -> REAL .

    ID              reduce using rule 43 (tipo -> REAL .)


state 29

    (42) tipo -> NUMERAL .

    ID              reduce using rule 42 (tipo -> NUMERAL .)


state 30

    (15) ciclo_vars -> acceso vars .

    LLDER           reduce using rule 15 (ciclo_vars -> acceso vars .)
    HIDDEN          reduce using rule 15 (ciclo_vars -> acceso vars .)
    VISIBLE         reduce using rule 15 (ciclo_vars -> acceso vars .)


state 31

    (49) func -> acceso tipo . ID declararMetodo params cuerpo_func
    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> . ID declararVariable IGUAL exp
    (32) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 51

    ciclo_tipo                     shift and go to state 50

state 32

    (25) var_op -> ID . ciclo_id
    (35) ciclo_id -> . ID declararVariable
    (36) ciclo_id -> . ID declararVariable COIZQ exp CODER
    (37) ciclo_id -> . ciclo_id COMA ID declararVariable
    (38) ciclo_id -> . ciclo_id COMA ID declararVariable COIZQ exp CODER
    (39) ciclo_id -> . ID declararVariable IGUAL atom limpiarInvocador
    (40) ciclo_id -> . ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador

    ID              shift and go to state 53

    ciclo_id                       shift and go to state 52

state 33

    (45) tipo -> CHAR .

    ID              reduce using rule 45 (tipo -> CHAR .)


state 34

    (52) main -> acceso WITHOUT . MAIN declararMetodo PIZQ PDER prueba cuerpo_func
    (50) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    MAIN            shift and go to state 55
    ID              shift and go to state 54


state 35

    (44) tipo -> BOOL .

    ID              reduce using rule 44 (tipo -> BOOL .)


state 36

    (23) vars -> var_op . PYC

    PYC             shift and go to state 56


state 37

    (46) tipo -> STRING .

    ID              reduce using rule 46 (tipo -> STRING .)


state 38

    (52) main -> acceso . WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    WITHOUT         shift and go to state 34
    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37

    tipo                           shift and go to state 57

state 39

    (18) ciclo_func -> ciclo_func func .

    LLDER           reduce using rule 18 (ciclo_func -> ciclo_func func .)
    HIDDEN          reduce using rule 18 (ciclo_func -> ciclo_func func .)
    VISIBLE         reduce using rule 18 (ciclo_func -> ciclo_func func .)


state 40

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main . LLDER

    LLDER           shift and go to state 58


state 41

    (22) clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .

    $end            reduce using rule 22 (clase_main -> CLASS MAIN declararClase LLIZQ main LLDER .)


state 42

    (13) herencia -> UNDER ID agregaAncestro .

    LLIZQ           reduce using rule 13 (herencia -> UNDER ID agregaAncestro .)


state 43

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 59

state 44

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    LLDER           shift and go to state 60
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 61
    func                           shift and go to state 39

state 45

    (15) ciclo_vars -> acceso . vars
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID ciclo_id

    WITHOUT         shift and go to state 62
    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    ID              shift and go to state 32

    vars                           shift and go to state 30
    tipo                           shift and go to state 31
    var_op                         shift and go to state 36

state 46

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . ciclo_func LLDER limpiarMetodoActual
    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars . LLDER limpiarMetodoActual
    (16) ciclo_vars -> ciclo_vars . acceso vars
    (17) ciclo_func -> . func
    (18) ciclo_func -> . ciclo_func func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func

    LLDER           shift and go to state 63
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 65
    ciclo_func                     shift and go to state 64
    func                           shift and go to state 21

state 47

    (16) ciclo_vars -> ciclo_vars acceso vars .

    LLDER           reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    HIDDEN          reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)
    VISIBLE         reduce using rule 16 (ciclo_vars -> ciclo_vars acceso vars .)


state 48

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main . LLDER

    LLDER           shift and go to state 66


state 49

    (20) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .

    $end            reduce using rule 20 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars main LLDER .)


state 50

    (24) var_op -> tipo ciclo_tipo .
    (29) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo . COMA ID declararVariable COIZQ exp CODER IGUAL exp

    PYC             reduce using rule 24 (var_op -> tipo ciclo_tipo .)
    COMA            shift and go to state 67


state 51

    (49) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> ID . declararVariable IGUAL exp
    (32) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (51) declararMetodo -> .
    (41) declararVariable -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)
    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 68
    declararMetodo                 shift and go to state 69

state 52

    (25) var_op -> ID ciclo_id .
    (37) ciclo_id -> ciclo_id . COMA ID declararVariable
    (38) ciclo_id -> ciclo_id . COMA ID declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id . COMA ID declararVariable IGUAL atom limpiarInvocador

    PYC             reduce using rule 25 (var_op -> ID ciclo_id .)
    COMA            shift and go to state 70


state 53

    (35) ciclo_id -> ID . declararVariable
    (36) ciclo_id -> ID . declararVariable COIZQ exp CODER
    (39) ciclo_id -> ID . declararVariable IGUAL atom limpiarInvocador
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 71

state 54

    (50) func -> acceso WITHOUT ID . declararMetodo params cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 72

state 55

    (52) main -> acceso WITHOUT MAIN . declararMetodo PIZQ PDER prueba cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 73

state 56

    (23) vars -> var_op PYC .

    LLDER           reduce using rule 23 (vars -> var_op PYC .)
    ID              reduce using rule 23 (vars -> var_op PYC .)
    WHILE           reduce using rule 23 (vars -> var_op PYC .)
    OUTPUT          reduce using rule 23 (vars -> var_op PYC .)
    INPUT           reduce using rule 23 (vars -> var_op PYC .)
    RETURN          reduce using rule 23 (vars -> var_op PYC .)
    NUMERAL         reduce using rule 23 (vars -> var_op PYC .)
    REAL            reduce using rule 23 (vars -> var_op PYC .)
    BOOL            reduce using rule 23 (vars -> var_op PYC .)
    CHAR            reduce using rule 23 (vars -> var_op PYC .)
    STRING          reduce using rule 23 (vars -> var_op PYC .)
    THIS            reduce using rule 23 (vars -> var_op PYC .)
    IF              reduce using rule 23 (vars -> var_op PYC .)
    HIDDEN          reduce using rule 23 (vars -> var_op PYC .)
    VISIBLE         reduce using rule 23 (vars -> var_op PYC .)


state 57

    (49) func -> acceso tipo . ID declararMetodo params cuerpo_func

    ID              shift and go to state 74


state 58

    (21) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .

    $end            reduce using rule 21 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_func main LLDER .)


state 59

    (8) clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .

    CLASS           reduce using rule 8 (clase -> CLASS ID declararClase herencia LLIZQ LLDER limpiarMetodoActual .)


state 60

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 75

state 61

    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    WITHOUT         shift and go to state 62
    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37

    tipo                           shift and go to state 57

state 62

    (50) func -> acceso WITHOUT . ID declararMetodo params cuerpo_func

    ID              shift and go to state 54


state 63

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 76

state 64

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func . LLDER limpiarMetodoActual
    (18) ciclo_func -> ciclo_func . func
    (49) func -> . acceso tipo ID declararMetodo params cuerpo_func
    (50) func -> . acceso WITHOUT ID declararMetodo params cuerpo_func
    (47) acceso -> . HIDDEN
    (48) acceso -> . VISIBLE

    LLDER           shift and go to state 77
    HIDDEN          shift and go to state 22
    VISIBLE         shift and go to state 19

    acceso                         shift and go to state 61
    func                           shift and go to state 39

state 65

    (16) ciclo_vars -> ciclo_vars acceso . vars
    (49) func -> acceso . tipo ID declararMetodo params cuerpo_func
    (50) func -> acceso . WITHOUT ID declararMetodo params cuerpo_func
    (23) vars -> . var_op PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID ciclo_id

    WITHOUT         shift and go to state 62
    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    ID              shift and go to state 32

    vars                           shift and go to state 47
    tipo                           shift and go to state 31
    var_op                         shift and go to state 36

state 66

    (19) clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .

    $end            reduce using rule 19 (clase_main -> CLASS MAIN declararClase LLIZQ ciclo_vars ciclo_func main LLDER .)


state 67

    (29) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA . ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 78


state 68

    (27) ciclo_tipo -> ID declararVariable .
    (28) ciclo_tipo -> ID declararVariable . COIZQ exp CODER
    (31) ciclo_tipo -> ID declararVariable . IGUAL exp
    (32) ciclo_tipo -> ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    PYC             reduce using rule 27 (ciclo_tipo -> ID declararVariable .)
    COIZQ           shift and go to state 80
    IGUAL           shift and go to state 79


state 69

    (49) func -> acceso tipo ID declararMetodo . params cuerpo_func
    (54) params -> . PIZQ params_ciclo PDER
    (55) params -> . PIZQ PDER

    PIZQ            shift and go to state 81

    params                         shift and go to state 82

state 70

    (37) ciclo_id -> ciclo_id COMA . ID declararVariable
    (38) ciclo_id -> ciclo_id COMA . ID declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA . ID declararVariable IGUAL atom limpiarInvocador

    ID              shift and go to state 83


state 71

    (35) ciclo_id -> ID declararVariable .
    (36) ciclo_id -> ID declararVariable . COIZQ exp CODER
    (39) ciclo_id -> ID declararVariable . IGUAL atom limpiarInvocador

    COMA            reduce using rule 35 (ciclo_id -> ID declararVariable .)
    PYC             reduce using rule 35 (ciclo_id -> ID declararVariable .)
    COIZQ           shift and go to state 85
    IGUAL           shift and go to state 84


state 72

    (50) func -> acceso WITHOUT ID declararMetodo . params cuerpo_func
    (54) params -> . PIZQ params_ciclo PDER
    (55) params -> . PIZQ PDER

    PIZQ            shift and go to state 81

    params                         shift and go to state 86

state 73

    (52) main -> acceso WITHOUT MAIN declararMetodo . PIZQ PDER prueba cuerpo_func

    PIZQ            shift and go to state 87


state 74

    (49) func -> acceso tipo ID . declararMetodo params cuerpo_func
    (51) declararMetodo -> .

    PIZQ            reduce using rule 51 (declararMetodo -> .)

    declararMetodo                 shift and go to state 69

state 75

    (7) clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 7 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_func LLDER limpiarMetodoActual .)


state 76

    (6) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .

    CLASS           reduce using rule 6 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars LLDER limpiarMetodoActual .)


state 77

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER . limpiarMetodoActual
    (10) limpiarMetodoActual -> .

    CLASS           reduce using rule 10 (limpiarMetodoActual -> .)

    limpiarMetodoActual            shift and go to state 88

state 78

    (29) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable
    (30) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA ID . declararVariable COIZQ exp CODER IGUAL exp
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 89

state 79

    (31) ciclo_tipo -> ID declararVariable IGUAL . exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 104
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 80

    (28) ciclo_tipo -> ID declararVariable COIZQ . exp CODER
    (32) ciclo_tipo -> ID declararVariable COIZQ . exp CODER IGUAL exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 106
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 81

    (54) params -> PIZQ . params_ciclo PDER
    (55) params -> PIZQ . PDER
    (56) params_ciclo -> . tipo ID meterParametros
    (57) params_ciclo -> . params_ciclo COMA tipo ID meterParametros
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    PDER            shift and go to state 109
    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37

    tipo                           shift and go to state 107
    params_ciclo                   shift and go to state 108

state 82

    (49) func -> acceso tipo ID declararMetodo params . cuerpo_func
    (59) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (60) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (61) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (62) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 110

    cuerpo_func                    shift and go to state 111

state 83

    (37) ciclo_id -> ciclo_id COMA ID . declararVariable
    (38) ciclo_id -> ciclo_id COMA ID . declararVariable COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA ID . declararVariable IGUAL atom limpiarInvocador
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 112

state 84

    (39) ciclo_id -> ID declararVariable IGUAL . atom limpiarInvocador
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 114
    THIS            shift and go to state 102

    atom                           shift and go to state 113

state 85

    (36) ciclo_id -> ID declararVariable COIZQ . exp CODER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 115
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 86

    (50) func -> acceso WITHOUT ID declararMetodo params . cuerpo_func
    (59) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (60) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (61) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (62) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 110

    cuerpo_func                    shift and go to state 116

state 87

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ . PDER prueba cuerpo_func

    PDER            shift and go to state 117


state 88

    (5) clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .

    CLASS           reduce using rule 5 (clase -> CLASS ID declararClase herencia LLIZQ ciclo_vars ciclo_func LLDER limpiarMetodoActual .)


state 89

    (29) ciclo_tipo -> ciclo_tipo COMA ID declararVariable .
    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER
    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . IGUAL exp
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable . COIZQ exp CODER IGUAL exp

    COMA            reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    PYC             reduce using rule 29 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable .)
    COIZQ           shift and go to state 119
    IGUAL           shift and go to state 118


state 90

    (88) exp -> PIZQ . exp PDER
    (89) exp -> PIZQ . exp PDER ope exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 120
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 91

    (97) opciones -> cte_bool .

    MAS             reduce using rule 97 (opciones -> cte_bool .)
    MENOS           reduce using rule 97 (opciones -> cte_bool .)
    MOD             reduce using rule 97 (opciones -> cte_bool .)
    ENTRE           reduce using rule 97 (opciones -> cte_bool .)
    POR             reduce using rule 97 (opciones -> cte_bool .)
    IGUALC          reduce using rule 97 (opciones -> cte_bool .)
    MENOR           reduce using rule 97 (opciones -> cte_bool .)
    MENORIGUAL      reduce using rule 97 (opciones -> cte_bool .)
    MAYOR           reduce using rule 97 (opciones -> cte_bool .)
    MAYORIGUAL      reduce using rule 97 (opciones -> cte_bool .)
    NOTIGUAL        reduce using rule 97 (opciones -> cte_bool .)
    AND             reduce using rule 97 (opciones -> cte_bool .)
    OR              reduce using rule 97 (opciones -> cte_bool .)
    CODER           reduce using rule 97 (opciones -> cte_bool .)
    PDER            reduce using rule 97 (opciones -> cte_bool .)
    COMA            reduce using rule 97 (opciones -> cte_bool .)
    PYC             reduce using rule 97 (opciones -> cte_bool .)


state 92

    (84) cte_bool -> TRUE .

    MAS             reduce using rule 84 (cte_bool -> TRUE .)
    MENOS           reduce using rule 84 (cte_bool -> TRUE .)
    MOD             reduce using rule 84 (cte_bool -> TRUE .)
    ENTRE           reduce using rule 84 (cte_bool -> TRUE .)
    POR             reduce using rule 84 (cte_bool -> TRUE .)
    IGUALC          reduce using rule 84 (cte_bool -> TRUE .)
    MENOR           reduce using rule 84 (cte_bool -> TRUE .)
    MENORIGUAL      reduce using rule 84 (cte_bool -> TRUE .)
    MAYOR           reduce using rule 84 (cte_bool -> TRUE .)
    MAYORIGUAL      reduce using rule 84 (cte_bool -> TRUE .)
    NOTIGUAL        reduce using rule 84 (cte_bool -> TRUE .)
    AND             reduce using rule 84 (cte_bool -> TRUE .)
    OR              reduce using rule 84 (cte_bool -> TRUE .)
    COMA            reduce using rule 84 (cte_bool -> TRUE .)
    PYC             reduce using rule 84 (cte_bool -> TRUE .)
    CODER           reduce using rule 84 (cte_bool -> TRUE .)
    PDER            reduce using rule 84 (cte_bool -> TRUE .)


state 93

    (95) opciones -> CTE_NUMERAL .

    MAS             reduce using rule 95 (opciones -> CTE_NUMERAL .)
    MENOS           reduce using rule 95 (opciones -> CTE_NUMERAL .)
    MOD             reduce using rule 95 (opciones -> CTE_NUMERAL .)
    ENTRE           reduce using rule 95 (opciones -> CTE_NUMERAL .)
    POR             reduce using rule 95 (opciones -> CTE_NUMERAL .)
    IGUALC          reduce using rule 95 (opciones -> CTE_NUMERAL .)
    MENOR           reduce using rule 95 (opciones -> CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 95 (opciones -> CTE_NUMERAL .)
    MAYOR           reduce using rule 95 (opciones -> CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 95 (opciones -> CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 95 (opciones -> CTE_NUMERAL .)
    AND             reduce using rule 95 (opciones -> CTE_NUMERAL .)
    OR              reduce using rule 95 (opciones -> CTE_NUMERAL .)
    CODER           reduce using rule 95 (opciones -> CTE_NUMERAL .)
    PDER            reduce using rule 95 (opciones -> CTE_NUMERAL .)
    COMA            reduce using rule 95 (opciones -> CTE_NUMERAL .)
    PYC             reduce using rule 95 (opciones -> CTE_NUMERAL .)


state 94

    (96) opciones -> CTE_REAL .

    MAS             reduce using rule 96 (opciones -> CTE_REAL .)
    MENOS           reduce using rule 96 (opciones -> CTE_REAL .)
    MOD             reduce using rule 96 (opciones -> CTE_REAL .)
    ENTRE           reduce using rule 96 (opciones -> CTE_REAL .)
    POR             reduce using rule 96 (opciones -> CTE_REAL .)
    IGUALC          reduce using rule 96 (opciones -> CTE_REAL .)
    MENOR           reduce using rule 96 (opciones -> CTE_REAL .)
    MENORIGUAL      reduce using rule 96 (opciones -> CTE_REAL .)
    MAYOR           reduce using rule 96 (opciones -> CTE_REAL .)
    MAYORIGUAL      reduce using rule 96 (opciones -> CTE_REAL .)
    NOTIGUAL        reduce using rule 96 (opciones -> CTE_REAL .)
    AND             reduce using rule 96 (opciones -> CTE_REAL .)
    OR              reduce using rule 96 (opciones -> CTE_REAL .)
    CODER           reduce using rule 96 (opciones -> CTE_REAL .)
    PDER            reduce using rule 96 (opciones -> CTE_REAL .)
    COMA            reduce using rule 96 (opciones -> CTE_REAL .)
    PYC             reduce using rule 96 (opciones -> CTE_REAL .)


state 95

    (94) opciones -> CTE_CHAR .

    MAS             reduce using rule 94 (opciones -> CTE_CHAR .)
    MENOS           reduce using rule 94 (opciones -> CTE_CHAR .)
    MOD             reduce using rule 94 (opciones -> CTE_CHAR .)
    ENTRE           reduce using rule 94 (opciones -> CTE_CHAR .)
    POR             reduce using rule 94 (opciones -> CTE_CHAR .)
    IGUALC          reduce using rule 94 (opciones -> CTE_CHAR .)
    MENOR           reduce using rule 94 (opciones -> CTE_CHAR .)
    MENORIGUAL      reduce using rule 94 (opciones -> CTE_CHAR .)
    MAYOR           reduce using rule 94 (opciones -> CTE_CHAR .)
    MAYORIGUAL      reduce using rule 94 (opciones -> CTE_CHAR .)
    NOTIGUAL        reduce using rule 94 (opciones -> CTE_CHAR .)
    AND             reduce using rule 94 (opciones -> CTE_CHAR .)
    OR              reduce using rule 94 (opciones -> CTE_CHAR .)
    CODER           reduce using rule 94 (opciones -> CTE_CHAR .)
    PDER            reduce using rule 94 (opciones -> CTE_CHAR .)
    COMA            reduce using rule 94 (opciones -> CTE_CHAR .)
    PYC             reduce using rule 94 (opciones -> CTE_CHAR .)


state 96

    (86) exp -> opciones . ope exp
    (87) exp -> opciones .
    (104) ope -> . MAS
    (105) ope -> . MENOS
    (106) ope -> . MOD
    (107) ope -> . ENTRE
    (108) ope -> . POR
    (109) ope -> . IGUALC
    (110) ope -> . MENOR
    (111) ope -> . MENORIGUAL
    (112) ope -> . MAYOR
    (113) ope -> . MAYORIGUAL
    (114) ope -> . NOTIGUAL
    (115) ope -> . AND
    (116) ope -> . OR

    COMA            reduce using rule 87 (exp -> opciones .)
    PYC             reduce using rule 87 (exp -> opciones .)
    CODER           reduce using rule 87 (exp -> opciones .)
    PDER            reduce using rule 87 (exp -> opciones .)
    MAS             shift and go to state 122
    MENOS           shift and go to state 129
    MOD             shift and go to state 134
    ENTRE           shift and go to state 124
    POR             shift and go to state 125
    IGUALC          shift and go to state 132
    MENOR           shift and go to state 128
    MENORIGUAL      shift and go to state 131
    MAYOR           shift and go to state 133
    MAYORIGUAL      shift and go to state 130
    NOTIGUAL        shift and go to state 123
    AND             shift and go to state 121
    OR              shift and go to state 126

    ope                            shift and go to state 127

state 97

    (93) opciones -> CTE_STR .

    MAS             reduce using rule 93 (opciones -> CTE_STR .)
    MENOS           reduce using rule 93 (opciones -> CTE_STR .)
    MOD             reduce using rule 93 (opciones -> CTE_STR .)
    ENTRE           reduce using rule 93 (opciones -> CTE_STR .)
    POR             reduce using rule 93 (opciones -> CTE_STR .)
    IGUALC          reduce using rule 93 (opciones -> CTE_STR .)
    MENOR           reduce using rule 93 (opciones -> CTE_STR .)
    MENORIGUAL      reduce using rule 93 (opciones -> CTE_STR .)
    MAYOR           reduce using rule 93 (opciones -> CTE_STR .)
    MAYORIGUAL      reduce using rule 93 (opciones -> CTE_STR .)
    NOTIGUAL        reduce using rule 93 (opciones -> CTE_STR .)
    AND             reduce using rule 93 (opciones -> CTE_STR .)
    OR              reduce using rule 93 (opciones -> CTE_STR .)
    CODER           reduce using rule 93 (opciones -> CTE_STR .)
    PDER            reduce using rule 93 (opciones -> CTE_STR .)
    COMA            reduce using rule 93 (opciones -> CTE_STR .)
    PYC             reduce using rule 93 (opciones -> CTE_STR .)


state 98

    (98) opciones -> atom . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 135

state 99

    (99) opciones -> llamada_func . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 136

state 100

    (122) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (124) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> ID . checarAtributo
    (127) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (74) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID . checarFuncion PIZQ PDER
    (78) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (81) definirInvocador -> .
    (131) checarAtributo -> .
    (80) checarFuncion -> .

    PUNTO           shift and go to state 139
    COIZQ           reduce using rule 81 (definirInvocador -> .)
    MAS             reduce using rule 131 (checarAtributo -> .)
    MENOS           reduce using rule 131 (checarAtributo -> .)
    MOD             reduce using rule 131 (checarAtributo -> .)
    ENTRE           reduce using rule 131 (checarAtributo -> .)
    POR             reduce using rule 131 (checarAtributo -> .)
    IGUALC          reduce using rule 131 (checarAtributo -> .)
    MENOR           reduce using rule 131 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 131 (checarAtributo -> .)
    MAYOR           reduce using rule 131 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 131 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 131 (checarAtributo -> .)
    AND             reduce using rule 131 (checarAtributo -> .)
    OR              reduce using rule 131 (checarAtributo -> .)
    COMA            reduce using rule 131 (checarAtributo -> .)
    PYC             reduce using rule 131 (checarAtributo -> .)
    CODER           reduce using rule 131 (checarAtributo -> .)
    PDER            reduce using rule 131 (checarAtributo -> .)
    PIZQ            reduce using rule 80 (checarFuncion -> .)

    definirInvocador               shift and go to state 137
    checarAtributo                 shift and go to state 138
    checarFuncion                  shift and go to state 140

state 101

    (85) cte_bool -> FALSE .

    MAS             reduce using rule 85 (cte_bool -> FALSE .)
    MENOS           reduce using rule 85 (cte_bool -> FALSE .)
    MOD             reduce using rule 85 (cte_bool -> FALSE .)
    ENTRE           reduce using rule 85 (cte_bool -> FALSE .)
    POR             reduce using rule 85 (cte_bool -> FALSE .)
    IGUALC          reduce using rule 85 (cte_bool -> FALSE .)
    MENOR           reduce using rule 85 (cte_bool -> FALSE .)
    MENORIGUAL      reduce using rule 85 (cte_bool -> FALSE .)
    MAYOR           reduce using rule 85 (cte_bool -> FALSE .)
    MAYORIGUAL      reduce using rule 85 (cte_bool -> FALSE .)
    NOTIGUAL        reduce using rule 85 (cte_bool -> FALSE .)
    AND             reduce using rule 85 (cte_bool -> FALSE .)
    OR              reduce using rule 85 (cte_bool -> FALSE .)
    COMA            reduce using rule 85 (cte_bool -> FALSE .)
    PYC             reduce using rule 85 (cte_bool -> FALSE .)
    CODER           reduce using rule 85 (cte_bool -> FALSE .)
    PDER            reduce using rule 85 (cte_bool -> FALSE .)


state 102

    (128) atom -> THIS . PUNTO definirInvocador ID checarAtributo
    (129) atom -> THIS . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    PUNTO           shift and go to state 141


state 103

    (90) exp -> MENOS . PIZQ exp PDER ope exp
    (92) exp -> MENOS . PIZQ exp PDER
    (100) opciones -> MENOS . CTE_NUMERAL
    (101) opciones -> MENOS . CTE_REAL
    (102) opciones -> MENOS . atom limpiarInvocador
    (103) opciones -> MENOS . llamada_func limpiarInvocador
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 142
    CTE_NUMERAL     shift and go to state 146
    CTE_REAL        shift and go to state 143
    ID              shift and go to state 100
    THIS            shift and go to state 102

    atom                           shift and go to state 144
    llamada_func                   shift and go to state 145

state 104

    (31) ciclo_tipo -> ID declararVariable IGUAL exp .

    COMA            reduce using rule 31 (ciclo_tipo -> ID declararVariable IGUAL exp .)
    PYC             reduce using rule 31 (ciclo_tipo -> ID declararVariable IGUAL exp .)


state 105

    (91) exp -> NOT . exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 147
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 106

    (28) ciclo_tipo -> ID declararVariable COIZQ exp . CODER
    (32) ciclo_tipo -> ID declararVariable COIZQ exp . CODER IGUAL exp

    CODER           shift and go to state 148


state 107

    (56) params_ciclo -> tipo . ID meterParametros

    ID              shift and go to state 149


state 108

    (54) params -> PIZQ params_ciclo . PDER
    (57) params_ciclo -> params_ciclo . COMA tipo ID meterParametros

    PDER            shift and go to state 150
    COMA            shift and go to state 151


state 109

    (55) params -> PIZQ PDER .

    LLIZQ           reduce using rule 55 (params -> PIZQ PDER .)


state 110

    (59) cuerpo_func -> LLIZQ . ciclo_vars_func ciclo_estatuto LLDER
    (60) cuerpo_func -> LLIZQ . ciclo_vars_func LLDER
    (61) cuerpo_func -> LLIZQ . ciclo_estatuto LLDER
    (62) cuerpo_func -> LLIZQ . LLDER
    (63) ciclo_vars_func -> . vars
    (64) ciclo_vars_func -> . ciclo_vars_func vars
    (65) ciclo_estatuto -> . estatuto
    (66) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID ciclo_id
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 162
    ID              shift and go to state 165
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    RETURN          shift and go to state 152
    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    THIS            shift and go to state 102
    IF              shift and go to state 166

    vars                           shift and go to state 153
    var_op                         shift and go to state 36
    tipo                           shift and go to state 157
    estatuto                       shift and go to state 158
    ciclo_vars_func                shift and go to state 159
    condicion                      shift and go to state 160
    ciclo_cond                     shift and go to state 169
    return                         shift and go to state 156
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    asignacion                     shift and go to state 167
    ciclo_estatuto                 shift and go to state 168
    lectura                        shift and go to state 161
    while                          shift and go to state 170
    escritura                      shift and go to state 172

state 111

    (49) func -> acceso tipo ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 49 (func -> acceso tipo ID declararMetodo params cuerpo_func .)


state 112

    (37) ciclo_id -> ciclo_id COMA ID declararVariable .
    (38) ciclo_id -> ciclo_id COMA ID declararVariable . COIZQ exp CODER
    (40) ciclo_id -> ciclo_id COMA ID declararVariable . IGUAL atom limpiarInvocador

    COMA            reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    PYC             reduce using rule 37 (ciclo_id -> ciclo_id COMA ID declararVariable .)
    COIZQ           shift and go to state 174
    IGUAL           shift and go to state 173


state 113

    (39) ciclo_id -> ID declararVariable IGUAL atom . limpiarInvocador
    (11) limpiarInvocador -> .

    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 175

state 114

    (122) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (124) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> ID . checarAtributo
    (127) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (81) definirInvocador -> .
    (131) checarAtributo -> .

    PUNTO           shift and go to state 177
    COIZQ           reduce using rule 81 (definirInvocador -> .)
    COMA            reduce using rule 131 (checarAtributo -> .)
    PYC             reduce using rule 131 (checarAtributo -> .)
    PDER            reduce using rule 131 (checarAtributo -> .)

    definirInvocador               shift and go to state 176
    checarAtributo                 shift and go to state 138

state 115

    (36) ciclo_id -> ID declararVariable COIZQ exp . CODER

    CODER           shift and go to state 178


state 116

    (50) func -> acceso WITHOUT ID declararMetodo params cuerpo_func .

    HIDDEN          reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    VISIBLE         reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)
    LLDER           reduce using rule 50 (func -> acceso WITHOUT ID declararMetodo params cuerpo_func .)


state 117

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER . prueba cuerpo_func
    (53) prueba -> .

    LLIZQ           reduce using rule 53 (prueba -> .)

    prueba                         shift and go to state 179

state 118

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL . exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    atom                           shift and go to state 98
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 180
    llamada_func                   shift and go to state 99

state 119

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ . exp CODER IGUAL exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    atom                           shift and go to state 98
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 181
    llamada_func                   shift and go to state 99

state 120

    (88) exp -> PIZQ exp . PDER
    (89) exp -> PIZQ exp . PDER ope exp

    PDER            shift and go to state 182


state 121

    (115) ope -> AND .

    PIZQ            reduce using rule 115 (ope -> AND .)
    MENOS           reduce using rule 115 (ope -> AND .)
    NOT             reduce using rule 115 (ope -> AND .)
    CTE_STR         reduce using rule 115 (ope -> AND .)
    CTE_CHAR        reduce using rule 115 (ope -> AND .)
    CTE_NUMERAL     reduce using rule 115 (ope -> AND .)
    CTE_REAL        reduce using rule 115 (ope -> AND .)
    TRUE            reduce using rule 115 (ope -> AND .)
    FALSE           reduce using rule 115 (ope -> AND .)
    ID              reduce using rule 115 (ope -> AND .)
    THIS            reduce using rule 115 (ope -> AND .)


state 122

    (104) ope -> MAS .

    PIZQ            reduce using rule 104 (ope -> MAS .)
    MENOS           reduce using rule 104 (ope -> MAS .)
    NOT             reduce using rule 104 (ope -> MAS .)
    CTE_STR         reduce using rule 104 (ope -> MAS .)
    CTE_CHAR        reduce using rule 104 (ope -> MAS .)
    CTE_NUMERAL     reduce using rule 104 (ope -> MAS .)
    CTE_REAL        reduce using rule 104 (ope -> MAS .)
    TRUE            reduce using rule 104 (ope -> MAS .)
    FALSE           reduce using rule 104 (ope -> MAS .)
    ID              reduce using rule 104 (ope -> MAS .)
    THIS            reduce using rule 104 (ope -> MAS .)


state 123

    (114) ope -> NOTIGUAL .

    PIZQ            reduce using rule 114 (ope -> NOTIGUAL .)
    MENOS           reduce using rule 114 (ope -> NOTIGUAL .)
    NOT             reduce using rule 114 (ope -> NOTIGUAL .)
    CTE_STR         reduce using rule 114 (ope -> NOTIGUAL .)
    CTE_CHAR        reduce using rule 114 (ope -> NOTIGUAL .)
    CTE_NUMERAL     reduce using rule 114 (ope -> NOTIGUAL .)
    CTE_REAL        reduce using rule 114 (ope -> NOTIGUAL .)
    TRUE            reduce using rule 114 (ope -> NOTIGUAL .)
    FALSE           reduce using rule 114 (ope -> NOTIGUAL .)
    ID              reduce using rule 114 (ope -> NOTIGUAL .)
    THIS            reduce using rule 114 (ope -> NOTIGUAL .)


state 124

    (107) ope -> ENTRE .

    PIZQ            reduce using rule 107 (ope -> ENTRE .)
    MENOS           reduce using rule 107 (ope -> ENTRE .)
    NOT             reduce using rule 107 (ope -> ENTRE .)
    CTE_STR         reduce using rule 107 (ope -> ENTRE .)
    CTE_CHAR        reduce using rule 107 (ope -> ENTRE .)
    CTE_NUMERAL     reduce using rule 107 (ope -> ENTRE .)
    CTE_REAL        reduce using rule 107 (ope -> ENTRE .)
    TRUE            reduce using rule 107 (ope -> ENTRE .)
    FALSE           reduce using rule 107 (ope -> ENTRE .)
    ID              reduce using rule 107 (ope -> ENTRE .)
    THIS            reduce using rule 107 (ope -> ENTRE .)


state 125

    (108) ope -> POR .

    PIZQ            reduce using rule 108 (ope -> POR .)
    MENOS           reduce using rule 108 (ope -> POR .)
    NOT             reduce using rule 108 (ope -> POR .)
    CTE_STR         reduce using rule 108 (ope -> POR .)
    CTE_CHAR        reduce using rule 108 (ope -> POR .)
    CTE_NUMERAL     reduce using rule 108 (ope -> POR .)
    CTE_REAL        reduce using rule 108 (ope -> POR .)
    TRUE            reduce using rule 108 (ope -> POR .)
    FALSE           reduce using rule 108 (ope -> POR .)
    ID              reduce using rule 108 (ope -> POR .)
    THIS            reduce using rule 108 (ope -> POR .)


state 126

    (116) ope -> OR .

    PIZQ            reduce using rule 116 (ope -> OR .)
    MENOS           reduce using rule 116 (ope -> OR .)
    NOT             reduce using rule 116 (ope -> OR .)
    CTE_STR         reduce using rule 116 (ope -> OR .)
    CTE_CHAR        reduce using rule 116 (ope -> OR .)
    CTE_NUMERAL     reduce using rule 116 (ope -> OR .)
    CTE_REAL        reduce using rule 116 (ope -> OR .)
    TRUE            reduce using rule 116 (ope -> OR .)
    FALSE           reduce using rule 116 (ope -> OR .)
    ID              reduce using rule 116 (ope -> OR .)
    THIS            reduce using rule 116 (ope -> OR .)


state 127

    (86) exp -> opciones ope . exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 183
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 128

    (110) ope -> MENOR .

    PIZQ            reduce using rule 110 (ope -> MENOR .)
    MENOS           reduce using rule 110 (ope -> MENOR .)
    NOT             reduce using rule 110 (ope -> MENOR .)
    CTE_STR         reduce using rule 110 (ope -> MENOR .)
    CTE_CHAR        reduce using rule 110 (ope -> MENOR .)
    CTE_NUMERAL     reduce using rule 110 (ope -> MENOR .)
    CTE_REAL        reduce using rule 110 (ope -> MENOR .)
    TRUE            reduce using rule 110 (ope -> MENOR .)
    FALSE           reduce using rule 110 (ope -> MENOR .)
    ID              reduce using rule 110 (ope -> MENOR .)
    THIS            reduce using rule 110 (ope -> MENOR .)


state 129

    (105) ope -> MENOS .

    PIZQ            reduce using rule 105 (ope -> MENOS .)
    MENOS           reduce using rule 105 (ope -> MENOS .)
    NOT             reduce using rule 105 (ope -> MENOS .)
    CTE_STR         reduce using rule 105 (ope -> MENOS .)
    CTE_CHAR        reduce using rule 105 (ope -> MENOS .)
    CTE_NUMERAL     reduce using rule 105 (ope -> MENOS .)
    CTE_REAL        reduce using rule 105 (ope -> MENOS .)
    TRUE            reduce using rule 105 (ope -> MENOS .)
    FALSE           reduce using rule 105 (ope -> MENOS .)
    ID              reduce using rule 105 (ope -> MENOS .)
    THIS            reduce using rule 105 (ope -> MENOS .)


state 130

    (113) ope -> MAYORIGUAL .

    PIZQ            reduce using rule 113 (ope -> MAYORIGUAL .)
    MENOS           reduce using rule 113 (ope -> MAYORIGUAL .)
    NOT             reduce using rule 113 (ope -> MAYORIGUAL .)
    CTE_STR         reduce using rule 113 (ope -> MAYORIGUAL .)
    CTE_CHAR        reduce using rule 113 (ope -> MAYORIGUAL .)
    CTE_NUMERAL     reduce using rule 113 (ope -> MAYORIGUAL .)
    CTE_REAL        reduce using rule 113 (ope -> MAYORIGUAL .)
    TRUE            reduce using rule 113 (ope -> MAYORIGUAL .)
    FALSE           reduce using rule 113 (ope -> MAYORIGUAL .)
    ID              reduce using rule 113 (ope -> MAYORIGUAL .)
    THIS            reduce using rule 113 (ope -> MAYORIGUAL .)


state 131

    (111) ope -> MENORIGUAL .

    PIZQ            reduce using rule 111 (ope -> MENORIGUAL .)
    MENOS           reduce using rule 111 (ope -> MENORIGUAL .)
    NOT             reduce using rule 111 (ope -> MENORIGUAL .)
    CTE_STR         reduce using rule 111 (ope -> MENORIGUAL .)
    CTE_CHAR        reduce using rule 111 (ope -> MENORIGUAL .)
    CTE_NUMERAL     reduce using rule 111 (ope -> MENORIGUAL .)
    CTE_REAL        reduce using rule 111 (ope -> MENORIGUAL .)
    TRUE            reduce using rule 111 (ope -> MENORIGUAL .)
    FALSE           reduce using rule 111 (ope -> MENORIGUAL .)
    ID              reduce using rule 111 (ope -> MENORIGUAL .)
    THIS            reduce using rule 111 (ope -> MENORIGUAL .)


state 132

    (109) ope -> IGUALC .

    PIZQ            reduce using rule 109 (ope -> IGUALC .)
    MENOS           reduce using rule 109 (ope -> IGUALC .)
    NOT             reduce using rule 109 (ope -> IGUALC .)
    CTE_STR         reduce using rule 109 (ope -> IGUALC .)
    CTE_CHAR        reduce using rule 109 (ope -> IGUALC .)
    CTE_NUMERAL     reduce using rule 109 (ope -> IGUALC .)
    CTE_REAL        reduce using rule 109 (ope -> IGUALC .)
    TRUE            reduce using rule 109 (ope -> IGUALC .)
    FALSE           reduce using rule 109 (ope -> IGUALC .)
    ID              reduce using rule 109 (ope -> IGUALC .)
    THIS            reduce using rule 109 (ope -> IGUALC .)


state 133

    (112) ope -> MAYOR .

    PIZQ            reduce using rule 112 (ope -> MAYOR .)
    MENOS           reduce using rule 112 (ope -> MAYOR .)
    NOT             reduce using rule 112 (ope -> MAYOR .)
    CTE_STR         reduce using rule 112 (ope -> MAYOR .)
    CTE_CHAR        reduce using rule 112 (ope -> MAYOR .)
    CTE_NUMERAL     reduce using rule 112 (ope -> MAYOR .)
    CTE_REAL        reduce using rule 112 (ope -> MAYOR .)
    TRUE            reduce using rule 112 (ope -> MAYOR .)
    FALSE           reduce using rule 112 (ope -> MAYOR .)
    ID              reduce using rule 112 (ope -> MAYOR .)
    THIS            reduce using rule 112 (ope -> MAYOR .)


state 134

    (106) ope -> MOD .

    PIZQ            reduce using rule 106 (ope -> MOD .)
    MENOS           reduce using rule 106 (ope -> MOD .)
    NOT             reduce using rule 106 (ope -> MOD .)
    CTE_STR         reduce using rule 106 (ope -> MOD .)
    CTE_CHAR        reduce using rule 106 (ope -> MOD .)
    CTE_NUMERAL     reduce using rule 106 (ope -> MOD .)
    CTE_REAL        reduce using rule 106 (ope -> MOD .)
    TRUE            reduce using rule 106 (ope -> MOD .)
    FALSE           reduce using rule 106 (ope -> MOD .)
    ID              reduce using rule 106 (ope -> MOD .)
    THIS            reduce using rule 106 (ope -> MOD .)


state 135

    (98) opciones -> atom limpiarInvocador .

    MAS             reduce using rule 98 (opciones -> atom limpiarInvocador .)
    MENOS           reduce using rule 98 (opciones -> atom limpiarInvocador .)
    MOD             reduce using rule 98 (opciones -> atom limpiarInvocador .)
    ENTRE           reduce using rule 98 (opciones -> atom limpiarInvocador .)
    POR             reduce using rule 98 (opciones -> atom limpiarInvocador .)
    IGUALC          reduce using rule 98 (opciones -> atom limpiarInvocador .)
    MENOR           reduce using rule 98 (opciones -> atom limpiarInvocador .)
    MENORIGUAL      reduce using rule 98 (opciones -> atom limpiarInvocador .)
    MAYOR           reduce using rule 98 (opciones -> atom limpiarInvocador .)
    MAYORIGUAL      reduce using rule 98 (opciones -> atom limpiarInvocador .)
    NOTIGUAL        reduce using rule 98 (opciones -> atom limpiarInvocador .)
    AND             reduce using rule 98 (opciones -> atom limpiarInvocador .)
    OR              reduce using rule 98 (opciones -> atom limpiarInvocador .)
    CODER           reduce using rule 98 (opciones -> atom limpiarInvocador .)
    PDER            reduce using rule 98 (opciones -> atom limpiarInvocador .)
    COMA            reduce using rule 98 (opciones -> atom limpiarInvocador .)
    PYC             reduce using rule 98 (opciones -> atom limpiarInvocador .)


state 136

    (99) opciones -> llamada_func limpiarInvocador .

    MAS             reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    MENOS           reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    MOD             reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    ENTRE           reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    POR             reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    IGUALC          reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    MENOR           reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    MENORIGUAL      reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    MAYOR           reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    MAYORIGUAL      reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    NOTIGUAL        reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    AND             reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    OR              reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    CODER           reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    PDER            reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    COMA            reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)
    PYC             reduce using rule 99 (opciones -> llamada_func limpiarInvocador .)


state 137

    (124) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2
    (76) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    COIZQ           shift and go to state 184


state 138

    (126) atom -> ID checarAtributo .

    IGUAL           reduce using rule 126 (atom -> ID checarAtributo .)
    MAS             reduce using rule 126 (atom -> ID checarAtributo .)
    MENOS           reduce using rule 126 (atom -> ID checarAtributo .)
    MOD             reduce using rule 126 (atom -> ID checarAtributo .)
    ENTRE           reduce using rule 126 (atom -> ID checarAtributo .)
    POR             reduce using rule 126 (atom -> ID checarAtributo .)
    IGUALC          reduce using rule 126 (atom -> ID checarAtributo .)
    MENOR           reduce using rule 126 (atom -> ID checarAtributo .)
    MENORIGUAL      reduce using rule 126 (atom -> ID checarAtributo .)
    MAYOR           reduce using rule 126 (atom -> ID checarAtributo .)
    MAYORIGUAL      reduce using rule 126 (atom -> ID checarAtributo .)
    NOTIGUAL        reduce using rule 126 (atom -> ID checarAtributo .)
    AND             reduce using rule 126 (atom -> ID checarAtributo .)
    OR              reduce using rule 126 (atom -> ID checarAtributo .)
    COMA            reduce using rule 126 (atom -> ID checarAtributo .)
    PYC             reduce using rule 126 (atom -> ID checarAtributo .)
    PDER            reduce using rule 126 (atom -> ID checarAtributo .)
    CODER           reduce using rule 126 (atom -> ID checarAtributo .)


state 139

    (122) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (75) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ PDER
    (81) definirInvocador -> .

    ID              reduce using rule 81 (definirInvocador -> .)

    definirInvocador               shift and go to state 185

state 140

    (74) llamada_func -> ID checarFuncion . PIZQ exp_ciclo PDER
    (77) llamada_func -> ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 186


state 141

    (128) atom -> THIS PUNTO . definirInvocador ID checarAtributo
    (129) atom -> THIS PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (81) definirInvocador -> .

    ID              reduce using rule 81 (definirInvocador -> .)

    definirInvocador               shift and go to state 187

state 142

    (90) exp -> MENOS PIZQ . exp PDER ope exp
    (92) exp -> MENOS PIZQ . exp PDER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 188
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 143

    (101) opciones -> MENOS CTE_REAL .

    MAS             reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    MENOS           reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    MOD             reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    ENTRE           reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    POR             reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    IGUALC          reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    MENOR           reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    MENORIGUAL      reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    MAYOR           reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    MAYORIGUAL      reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    NOTIGUAL        reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    AND             reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    OR              reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    CODER           reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    PDER            reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    COMA            reduce using rule 101 (opciones -> MENOS CTE_REAL .)
    PYC             reduce using rule 101 (opciones -> MENOS CTE_REAL .)


state 144

    (102) opciones -> MENOS atom . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 189

state 145

    (103) opciones -> MENOS llamada_func . limpiarInvocador
    (11) limpiarInvocador -> .

    MAS             reduce using rule 11 (limpiarInvocador -> .)
    MENOS           reduce using rule 11 (limpiarInvocador -> .)
    MOD             reduce using rule 11 (limpiarInvocador -> .)
    ENTRE           reduce using rule 11 (limpiarInvocador -> .)
    POR             reduce using rule 11 (limpiarInvocador -> .)
    IGUALC          reduce using rule 11 (limpiarInvocador -> .)
    MENOR           reduce using rule 11 (limpiarInvocador -> .)
    MENORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    MAYOR           reduce using rule 11 (limpiarInvocador -> .)
    MAYORIGUAL      reduce using rule 11 (limpiarInvocador -> .)
    NOTIGUAL        reduce using rule 11 (limpiarInvocador -> .)
    AND             reduce using rule 11 (limpiarInvocador -> .)
    OR              reduce using rule 11 (limpiarInvocador -> .)
    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)
    CODER           reduce using rule 11 (limpiarInvocador -> .)
    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 190

state 146

    (100) opciones -> MENOS CTE_NUMERAL .

    MAS             reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    MENOS           reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    MOD             reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    ENTRE           reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    POR             reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    IGUALC          reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    MENOR           reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    MENORIGUAL      reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    MAYOR           reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    MAYORIGUAL      reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    NOTIGUAL        reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    AND             reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    OR              reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    CODER           reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    PDER            reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    COMA            reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)
    PYC             reduce using rule 100 (opciones -> MENOS CTE_NUMERAL .)


state 147

    (91) exp -> NOT exp .

    COMA            reduce using rule 91 (exp -> NOT exp .)
    PYC             reduce using rule 91 (exp -> NOT exp .)
    CODER           reduce using rule 91 (exp -> NOT exp .)
    PDER            reduce using rule 91 (exp -> NOT exp .)


state 148

    (28) ciclo_tipo -> ID declararVariable COIZQ exp CODER .
    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 28 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 28 (ciclo_tipo -> ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 191


state 149

    (56) params_ciclo -> tipo ID . meterParametros
    (58) meterParametros -> .

    PDER            reduce using rule 58 (meterParametros -> .)
    COMA            reduce using rule 58 (meterParametros -> .)

    meterParametros                shift and go to state 192

state 150

    (54) params -> PIZQ params_ciclo PDER .

    LLIZQ           reduce using rule 54 (params -> PIZQ params_ciclo PDER .)


state 151

    (57) params_ciclo -> params_ciclo COMA . tipo ID meterParametros
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING

    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37

    tipo                           shift and go to state 193

state 152

    (117) return -> RETURN . exp PYC
    (118) return -> RETURN . PYC
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PYC             shift and go to state 195
    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 194
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 153

    (63) ciclo_vars_func -> vars .

    LLDER           reduce using rule 63 (ciclo_vars_func -> vars .)
    ID              reduce using rule 63 (ciclo_vars_func -> vars .)
    WHILE           reduce using rule 63 (ciclo_vars_func -> vars .)
    OUTPUT          reduce using rule 63 (ciclo_vars_func -> vars .)
    INPUT           reduce using rule 63 (ciclo_vars_func -> vars .)
    RETURN          reduce using rule 63 (ciclo_vars_func -> vars .)
    NUMERAL         reduce using rule 63 (ciclo_vars_func -> vars .)
    REAL            reduce using rule 63 (ciclo_vars_func -> vars .)
    BOOL            reduce using rule 63 (ciclo_vars_func -> vars .)
    CHAR            reduce using rule 63 (ciclo_vars_func -> vars .)
    STRING          reduce using rule 63 (ciclo_vars_func -> vars .)
    THIS            reduce using rule 63 (ciclo_vars_func -> vars .)
    IF              reduce using rule 63 (ciclo_vars_func -> vars .)


state 154

    (121) asignacion -> atom . limpiarInvocador IGUAL exp PYC
    (11) limpiarInvocador -> .

    IGUAL           reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 196

state 155

    (119) while -> WHILE . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> WHILE . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 197


state 156

    (73) estatuto -> return .

    LLDER           reduce using rule 73 (estatuto -> return .)
    WHILE           reduce using rule 73 (estatuto -> return .)
    OUTPUT          reduce using rule 73 (estatuto -> return .)
    INPUT           reduce using rule 73 (estatuto -> return .)
    ID              reduce using rule 73 (estatuto -> return .)
    RETURN          reduce using rule 73 (estatuto -> return .)
    THIS            reduce using rule 73 (estatuto -> return .)
    IF              reduce using rule 73 (estatuto -> return .)


state 157

    (24) var_op -> tipo . ciclo_tipo
    (27) ciclo_tipo -> . ID declararVariable
    (28) ciclo_tipo -> . ID declararVariable COIZQ exp CODER
    (29) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable
    (30) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> . ID declararVariable IGUAL exp
    (32) ciclo_tipo -> . ID declararVariable COIZQ exp CODER IGUAL exp
    (33) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable IGUAL exp
    (34) ciclo_tipo -> . ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp

    ID              shift and go to state 198

    ciclo_tipo                     shift and go to state 50

state 158

    (65) ciclo_estatuto -> estatuto .

    LLDER           reduce using rule 65 (ciclo_estatuto -> estatuto .)
    WHILE           reduce using rule 65 (ciclo_estatuto -> estatuto .)
    OUTPUT          reduce using rule 65 (ciclo_estatuto -> estatuto .)
    INPUT           reduce using rule 65 (ciclo_estatuto -> estatuto .)
    ID              reduce using rule 65 (ciclo_estatuto -> estatuto .)
    RETURN          reduce using rule 65 (ciclo_estatuto -> estatuto .)
    THIS            reduce using rule 65 (ciclo_estatuto -> estatuto .)
    IF              reduce using rule 65 (ciclo_estatuto -> estatuto .)


state 159

    (59) cuerpo_func -> LLIZQ ciclo_vars_func . ciclo_estatuto LLDER
    (60) cuerpo_func -> LLIZQ ciclo_vars_func . LLDER
    (64) ciclo_vars_func -> ciclo_vars_func . vars
    (65) ciclo_estatuto -> . estatuto
    (66) ciclo_estatuto -> . ciclo_estatuto estatuto
    (23) vars -> . var_op PYC
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (24) var_op -> . tipo ciclo_tipo
    (25) var_op -> . ID ciclo_id
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (42) tipo -> . NUMERAL
    (43) tipo -> . REAL
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 200
    ID              shift and go to state 165
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    RETURN          shift and go to state 152
    NUMERAL         shift and go to state 29
    REAL            shift and go to state 28
    BOOL            shift and go to state 35
    CHAR            shift and go to state 33
    STRING          shift and go to state 37
    THIS            shift and go to state 102
    IF              shift and go to state 166

    vars                           shift and go to state 199
    var_op                         shift and go to state 36
    tipo                           shift and go to state 157
    estatuto                       shift and go to state 158
    condicion                      shift and go to state 160
    ciclo_cond                     shift and go to state 169
    return                         shift and go to state 156
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    asignacion                     shift and go to state 167
    ciclo_estatuto                 shift and go to state 201
    lectura                        shift and go to state 161
    while                          shift and go to state 170
    escritura                      shift and go to state 172

state 160

    (69) estatuto -> condicion .

    LLDER           reduce using rule 69 (estatuto -> condicion .)
    WHILE           reduce using rule 69 (estatuto -> condicion .)
    OUTPUT          reduce using rule 69 (estatuto -> condicion .)
    INPUT           reduce using rule 69 (estatuto -> condicion .)
    ID              reduce using rule 69 (estatuto -> condicion .)
    RETURN          reduce using rule 69 (estatuto -> condicion .)
    THIS            reduce using rule 69 (estatuto -> condicion .)
    IF              reduce using rule 69 (estatuto -> condicion .)


state 161

    (71) estatuto -> lectura .

    LLDER           reduce using rule 71 (estatuto -> lectura .)
    WHILE           reduce using rule 71 (estatuto -> lectura .)
    OUTPUT          reduce using rule 71 (estatuto -> lectura .)
    INPUT           reduce using rule 71 (estatuto -> lectura .)
    ID              reduce using rule 71 (estatuto -> lectura .)
    RETURN          reduce using rule 71 (estatuto -> lectura .)
    THIS            reduce using rule 71 (estatuto -> lectura .)
    IF              reduce using rule 71 (estatuto -> lectura .)


state 162

    (62) cuerpo_func -> LLIZQ LLDER .

    HIDDEN          reduce using rule 62 (cuerpo_func -> LLIZQ LLDER .)
    VISIBLE         reduce using rule 62 (cuerpo_func -> LLIZQ LLDER .)
    LLDER           reduce using rule 62 (cuerpo_func -> LLIZQ LLDER .)


state 163

    (138) lectura -> INPUT . PIZQ atom limpiarInvocador PDER PYC

    PIZQ            shift and go to state 202


state 164

    (72) estatuto -> llamada_func . limpiarInvocador PYC
    (11) limpiarInvocador -> .

    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 203

state 165

    (25) var_op -> ID . ciclo_id
    (74) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID . checarFuncion PIZQ PDER
    (78) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (122) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (124) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> ID . checarAtributo
    (127) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (35) ciclo_id -> . ID declararVariable
    (36) ciclo_id -> . ID declararVariable COIZQ exp CODER
    (37) ciclo_id -> . ciclo_id COMA ID declararVariable
    (38) ciclo_id -> . ciclo_id COMA ID declararVariable COIZQ exp CODER
    (39) ciclo_id -> . ID declararVariable IGUAL atom limpiarInvocador
    (40) ciclo_id -> . ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador
    (80) checarFuncion -> .
    (81) definirInvocador -> .
    (131) checarAtributo -> .

    PUNTO           shift and go to state 205
    ID              shift and go to state 53
    PIZQ            reduce using rule 80 (checarFuncion -> .)
    COIZQ           reduce using rule 81 (definirInvocador -> .)
    IGUAL           reduce using rule 131 (checarAtributo -> .)

    definirInvocador               shift and go to state 204
    checarAtributo                 shift and go to state 138
    ciclo_id                       shift and go to state 52
    checarFuncion                  shift and go to state 140

state 166

    (134) ciclo_cond -> IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 206


state 167

    (68) estatuto -> asignacion .

    LLDER           reduce using rule 68 (estatuto -> asignacion .)
    WHILE           reduce using rule 68 (estatuto -> asignacion .)
    OUTPUT          reduce using rule 68 (estatuto -> asignacion .)
    INPUT           reduce using rule 68 (estatuto -> asignacion .)
    ID              reduce using rule 68 (estatuto -> asignacion .)
    RETURN          reduce using rule 68 (estatuto -> asignacion .)
    THIS            reduce using rule 68 (estatuto -> asignacion .)
    IF              reduce using rule 68 (estatuto -> asignacion .)


state 168

    (61) cuerpo_func -> LLIZQ ciclo_estatuto . LLDER
    (66) ciclo_estatuto -> ciclo_estatuto . estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 208
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    estatuto                       shift and go to state 207
    ciclo_cond                     shift and go to state 169
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    lectura                        shift and go to state 161
    escritura                      shift and go to state 172

state 169

    (132) condicion -> ciclo_cond . ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> ciclo_cond . ELSE LLIZQ LLDER
    (136) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> ciclo_cond . ELSE IF PIZQ exp PDER LLIZQ LLDER

    ELSE            shift and go to state 210


state 170

    (67) estatuto -> while .

    LLDER           reduce using rule 67 (estatuto -> while .)
    WHILE           reduce using rule 67 (estatuto -> while .)
    OUTPUT          reduce using rule 67 (estatuto -> while .)
    INPUT           reduce using rule 67 (estatuto -> while .)
    ID              reduce using rule 67 (estatuto -> while .)
    RETURN          reduce using rule 67 (estatuto -> while .)
    THIS            reduce using rule 67 (estatuto -> while .)
    IF              reduce using rule 67 (estatuto -> while .)


state 171

    (139) escritura -> OUTPUT . PIZQ exp PDER PYC

    PIZQ            shift and go to state 211


state 172

    (70) estatuto -> escritura .

    LLDER           reduce using rule 70 (estatuto -> escritura .)
    WHILE           reduce using rule 70 (estatuto -> escritura .)
    OUTPUT          reduce using rule 70 (estatuto -> escritura .)
    INPUT           reduce using rule 70 (estatuto -> escritura .)
    ID              reduce using rule 70 (estatuto -> escritura .)
    RETURN          reduce using rule 70 (estatuto -> escritura .)
    THIS            reduce using rule 70 (estatuto -> escritura .)
    IF              reduce using rule 70 (estatuto -> escritura .)


state 173

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL . atom limpiarInvocador
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 114
    THIS            shift and go to state 102

    atom                           shift and go to state 212

state 174

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ . exp CODER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 213
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 175

    (39) ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .

    COMA            reduce using rule 39 (ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .)
    PYC             reduce using rule 39 (ciclo_id -> ID declararVariable IGUAL atom limpiarInvocador .)


state 176

    (124) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2

    COIZQ           shift and go to state 214


state 177

    (122) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (81) definirInvocador -> .

    ID              reduce using rule 81 (definirInvocador -> .)

    definirInvocador               shift and go to state 215

state 178

    (36) ciclo_id -> ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 36 (ciclo_id -> ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 36 (ciclo_id -> ID declararVariable COIZQ exp CODER .)


state 179

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER prueba . cuerpo_func
    (59) cuerpo_func -> . LLIZQ ciclo_vars_func ciclo_estatuto LLDER
    (60) cuerpo_func -> . LLIZQ ciclo_vars_func LLDER
    (61) cuerpo_func -> . LLIZQ ciclo_estatuto LLDER
    (62) cuerpo_func -> . LLIZQ LLDER

    LLIZQ           shift and go to state 110

    cuerpo_func                    shift and go to state 216

state 180

    (33) ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .

    COMA            reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)
    PYC             reduce using rule 33 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable IGUAL exp .)


state 181

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp . CODER IGUAL exp

    CODER           shift and go to state 217


state 182

    (88) exp -> PIZQ exp PDER .
    (89) exp -> PIZQ exp PDER . ope exp
    (104) ope -> . MAS
    (105) ope -> . MENOS
    (106) ope -> . MOD
    (107) ope -> . ENTRE
    (108) ope -> . POR
    (109) ope -> . IGUALC
    (110) ope -> . MENOR
    (111) ope -> . MENORIGUAL
    (112) ope -> . MAYOR
    (113) ope -> . MAYORIGUAL
    (114) ope -> . NOTIGUAL
    (115) ope -> . AND
    (116) ope -> . OR

    COMA            reduce using rule 88 (exp -> PIZQ exp PDER .)
    PYC             reduce using rule 88 (exp -> PIZQ exp PDER .)
    CODER           reduce using rule 88 (exp -> PIZQ exp PDER .)
    PDER            reduce using rule 88 (exp -> PIZQ exp PDER .)
    MAS             shift and go to state 122
    MENOS           shift and go to state 129
    MOD             shift and go to state 134
    ENTRE           shift and go to state 124
    POR             shift and go to state 125
    IGUALC          shift and go to state 132
    MENOR           shift and go to state 128
    MENORIGUAL      shift and go to state 131
    MAYOR           shift and go to state 133
    MAYORIGUAL      shift and go to state 130
    NOTIGUAL        shift and go to state 123
    AND             shift and go to state 121
    OR              shift and go to state 126

    ope                            shift and go to state 218

state 183

    (86) exp -> opciones ope exp .

    COMA            reduce using rule 86 (exp -> opciones ope exp .)
    PYC             reduce using rule 86 (exp -> opciones ope exp .)
    CODER           reduce using rule 86 (exp -> opciones ope exp .)
    PDER            reduce using rule 86 (exp -> opciones ope exp .)


state 184

    (124) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (76) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ PDER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 219
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 185

    (122) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (123) atom -> ID PUNTO definirInvocador . ID checarAtributo
    (75) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ PDER

    ID              shift and go to state 220


state 186

    (74) llamada_func -> ID checarFuncion PIZQ . exp_ciclo PDER
    (77) llamada_func -> ID checarFuncion PIZQ . PDER
    (82) exp_ciclo -> . exp
    (83) exp_ciclo -> . exp_ciclo COMA exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 221
    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    exp_ciclo                      shift and go to state 222
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 223
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 187

    (128) atom -> THIS PUNTO definirInvocador . ID checarAtributo
    (129) atom -> THIS PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 224


state 188

    (90) exp -> MENOS PIZQ exp . PDER ope exp
    (92) exp -> MENOS PIZQ exp . PDER

    PDER            shift and go to state 225


state 189

    (102) opciones -> MENOS atom limpiarInvocador .

    MAS             reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    MENOS           reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    MOD             reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    ENTRE           reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    POR             reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    IGUALC          reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    MENOR           reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    MENORIGUAL      reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    MAYOR           reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    MAYORIGUAL      reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    NOTIGUAL        reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    AND             reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    OR              reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    CODER           reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    PDER            reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    COMA            reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)
    PYC             reduce using rule 102 (opciones -> MENOS atom limpiarInvocador .)


state 190

    (103) opciones -> MENOS llamada_func limpiarInvocador .

    MAS             reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    MENOS           reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    MOD             reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    ENTRE           reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    POR             reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    IGUALC          reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    MENOR           reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    MENORIGUAL      reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    MAYOR           reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    MAYORIGUAL      reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    NOTIGUAL        reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    AND             reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    OR              reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    CODER           reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    PDER            reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    COMA            reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)
    PYC             reduce using rule 103 (opciones -> MENOS llamada_func limpiarInvocador .)


state 191

    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL . exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 226
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 192

    (56) params_ciclo -> tipo ID meterParametros .

    PDER            reduce using rule 56 (params_ciclo -> tipo ID meterParametros .)
    COMA            reduce using rule 56 (params_ciclo -> tipo ID meterParametros .)


state 193

    (57) params_ciclo -> params_ciclo COMA tipo . ID meterParametros

    ID              shift and go to state 227


state 194

    (117) return -> RETURN exp . PYC

    PYC             shift and go to state 228


state 195

    (118) return -> RETURN PYC .

    LLDER           reduce using rule 118 (return -> RETURN PYC .)
    WHILE           reduce using rule 118 (return -> RETURN PYC .)
    OUTPUT          reduce using rule 118 (return -> RETURN PYC .)
    INPUT           reduce using rule 118 (return -> RETURN PYC .)
    ID              reduce using rule 118 (return -> RETURN PYC .)
    RETURN          reduce using rule 118 (return -> RETURN PYC .)
    THIS            reduce using rule 118 (return -> RETURN PYC .)
    IF              reduce using rule 118 (return -> RETURN PYC .)


state 196

    (121) asignacion -> atom limpiarInvocador . IGUAL exp PYC

    IGUAL           shift and go to state 229


state 197

    (119) while -> WHILE PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> WHILE PIZQ . exp PDER LLIZQ LLDER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 230
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 198

    (27) ciclo_tipo -> ID . declararVariable
    (28) ciclo_tipo -> ID . declararVariable COIZQ exp CODER
    (31) ciclo_tipo -> ID . declararVariable IGUAL exp
    (32) ciclo_tipo -> ID . declararVariable COIZQ exp CODER IGUAL exp
    (41) declararVariable -> .

    COIZQ           reduce using rule 41 (declararVariable -> .)
    IGUAL           reduce using rule 41 (declararVariable -> .)
    COMA            reduce using rule 41 (declararVariable -> .)
    PYC             reduce using rule 41 (declararVariable -> .)

    declararVariable               shift and go to state 68

state 199

    (64) ciclo_vars_func -> ciclo_vars_func vars .

    LLDER           reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    ID              reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    WHILE           reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    OUTPUT          reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    INPUT           reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    RETURN          reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    NUMERAL         reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    REAL            reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    BOOL            reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    CHAR            reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    STRING          reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    THIS            reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)
    IF              reduce using rule 64 (ciclo_vars_func -> ciclo_vars_func vars .)


state 200

    (60) cuerpo_func -> LLIZQ ciclo_vars_func LLDER .

    HIDDEN          reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    VISIBLE         reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)
    LLDER           reduce using rule 60 (cuerpo_func -> LLIZQ ciclo_vars_func LLDER .)


state 201

    (59) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto . LLDER
    (66) ciclo_estatuto -> ciclo_estatuto . estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 231
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    estatuto                       shift and go to state 207
    ciclo_cond                     shift and go to state 169
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    lectura                        shift and go to state 161
    escritura                      shift and go to state 172

state 202

    (138) lectura -> INPUT PIZQ . atom limpiarInvocador PDER PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER

    ID              shift and go to state 114
    THIS            shift and go to state 102

    atom                           shift and go to state 232

state 203

    (72) estatuto -> llamada_func limpiarInvocador . PYC

    PYC             shift and go to state 233


state 204

    (76) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (124) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador . COIZQ exp CODER PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador . COIZQ exp CODER checarAtributo2

    COIZQ           shift and go to state 234


state 205

    (75) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO . definirInvocador ID checarFuncion PIZQ PDER
    (122) atom -> ID PUNTO . definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> ID PUNTO . definirInvocador ID checarAtributo
    (81) definirInvocador -> .

    ID              reduce using rule 81 (definirInvocador -> .)

    definirInvocador               shift and go to state 235

state 206

    (134) ciclo_cond -> IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> IF PIZQ . exp PDER LLIZQ LLDER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 236
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 207

    (66) ciclo_estatuto -> ciclo_estatuto estatuto .

    LLDER           reduce using rule 66 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    WHILE           reduce using rule 66 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    OUTPUT          reduce using rule 66 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    INPUT           reduce using rule 66 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    ID              reduce using rule 66 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    RETURN          reduce using rule 66 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    THIS            reduce using rule 66 (ciclo_estatuto -> ciclo_estatuto estatuto .)
    IF              reduce using rule 66 (ciclo_estatuto -> ciclo_estatuto estatuto .)


state 208

    (61) cuerpo_func -> LLIZQ ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 61 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 61 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)
    LLDER           reduce using rule 61 (cuerpo_func -> LLIZQ ciclo_estatuto LLDER .)


state 209

    (74) llamada_func -> ID . checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> ID . checarFuncion PIZQ PDER
    (78) llamada_func -> ID . PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (122) atom -> ID . PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> ID . PUNTO definirInvocador ID checarAtributo
    (124) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID . definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> ID . checarAtributo
    (127) atom -> ID . definirInvocador COIZQ exp CODER checarAtributo2
    (80) checarFuncion -> .
    (81) definirInvocador -> .
    (131) checarAtributo -> .

    PUNTO           shift and go to state 205
    PIZQ            reduce using rule 80 (checarFuncion -> .)
    COIZQ           reduce using rule 81 (definirInvocador -> .)
    IGUAL           reduce using rule 131 (checarAtributo -> .)

    definirInvocador               shift and go to state 204
    checarAtributo                 shift and go to state 138
    checarFuncion                  shift and go to state 140

state 210

    (132) condicion -> ciclo_cond ELSE . LLIZQ ciclo_estatuto LLDER
    (133) condicion -> ciclo_cond ELSE . LLIZQ LLDER
    (136) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> ciclo_cond ELSE . IF PIZQ exp PDER LLIZQ LLDER

    LLIZQ           shift and go to state 237
    IF              shift and go to state 238


state 211

    (139) escritura -> OUTPUT PIZQ . exp PDER PYC
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 239
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 212

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom . limpiarInvocador
    (11) limpiarInvocador -> .

    COMA            reduce using rule 11 (limpiarInvocador -> .)
    PYC             reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 240

state 213

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp . CODER

    CODER           shift and go to state 241


state 214

    (124) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 242
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 215

    (122) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (123) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 243


state 216

    (52) main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func .

    LLDER           reduce using rule 52 (main -> acceso WITHOUT MAIN declararMetodo PIZQ PDER prueba cuerpo_func .)


state 217

    (30) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .
    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER . IGUAL exp

    COMA            reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 30 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER .)
    IGUAL           shift and go to state 244


state 218

    (89) exp -> PIZQ exp PDER ope . exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 245
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 219

    (124) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2
    (76) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ PDER

    CODER           shift and go to state 246


state 220

    (122) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (123) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (75) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ PDER
    (131) checarAtributo -> .
    (80) checarFuncion -> .

    COIZQ           reduce using rule 131 (checarAtributo -> .)
    MAS             reduce using rule 131 (checarAtributo -> .)
    MENOS           reduce using rule 131 (checarAtributo -> .)
    MOD             reduce using rule 131 (checarAtributo -> .)
    ENTRE           reduce using rule 131 (checarAtributo -> .)
    POR             reduce using rule 131 (checarAtributo -> .)
    IGUALC          reduce using rule 131 (checarAtributo -> .)
    MENOR           reduce using rule 131 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 131 (checarAtributo -> .)
    MAYOR           reduce using rule 131 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 131 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 131 (checarAtributo -> .)
    AND             reduce using rule 131 (checarAtributo -> .)
    OR              reduce using rule 131 (checarAtributo -> .)
    COMA            reduce using rule 131 (checarAtributo -> .)
    PYC             reduce using rule 131 (checarAtributo -> .)
    CODER           reduce using rule 131 (checarAtributo -> .)
    PDER            reduce using rule 131 (checarAtributo -> .)
    PIZQ            reduce using rule 80 (checarFuncion -> .)

    checarFuncion                  shift and go to state 248
    checarAtributo                 shift and go to state 247

state 221

    (77) llamada_func -> ID checarFuncion PIZQ PDER .

    PYC             reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAS             reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 77 (llamada_func -> ID checarFuncion PIZQ PDER .)


state 222

    (74) llamada_func -> ID checarFuncion PIZQ exp_ciclo . PDER
    (83) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 250
    COMA            shift and go to state 249


state 223

    (82) exp_ciclo -> exp .

    PDER            reduce using rule 82 (exp_ciclo -> exp .)
    COMA            reduce using rule 82 (exp_ciclo -> exp .)


state 224

    (128) atom -> THIS PUNTO definirInvocador ID . checarAtributo
    (129) atom -> THIS PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (131) checarAtributo -> .

    COIZQ           reduce using rule 131 (checarAtributo -> .)
    MAS             reduce using rule 131 (checarAtributo -> .)
    MENOS           reduce using rule 131 (checarAtributo -> .)
    MOD             reduce using rule 131 (checarAtributo -> .)
    ENTRE           reduce using rule 131 (checarAtributo -> .)
    POR             reduce using rule 131 (checarAtributo -> .)
    IGUALC          reduce using rule 131 (checarAtributo -> .)
    MENOR           reduce using rule 131 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 131 (checarAtributo -> .)
    MAYOR           reduce using rule 131 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 131 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 131 (checarAtributo -> .)
    AND             reduce using rule 131 (checarAtributo -> .)
    OR              reduce using rule 131 (checarAtributo -> .)
    COMA            reduce using rule 131 (checarAtributo -> .)
    PYC             reduce using rule 131 (checarAtributo -> .)
    CODER           reduce using rule 131 (checarAtributo -> .)
    PDER            reduce using rule 131 (checarAtributo -> .)
    IGUAL           reduce using rule 131 (checarAtributo -> .)

    checarAtributo                 shift and go to state 251

state 225

    (90) exp -> MENOS PIZQ exp PDER . ope exp
    (92) exp -> MENOS PIZQ exp PDER .
    (104) ope -> . MAS
    (105) ope -> . MENOS
    (106) ope -> . MOD
    (107) ope -> . ENTRE
    (108) ope -> . POR
    (109) ope -> . IGUALC
    (110) ope -> . MENOR
    (111) ope -> . MENORIGUAL
    (112) ope -> . MAYOR
    (113) ope -> . MAYORIGUAL
    (114) ope -> . NOTIGUAL
    (115) ope -> . AND
    (116) ope -> . OR

    COMA            reduce using rule 92 (exp -> MENOS PIZQ exp PDER .)
    PYC             reduce using rule 92 (exp -> MENOS PIZQ exp PDER .)
    CODER           reduce using rule 92 (exp -> MENOS PIZQ exp PDER .)
    PDER            reduce using rule 92 (exp -> MENOS PIZQ exp PDER .)
    MAS             shift and go to state 122
    MENOS           shift and go to state 129
    MOD             shift and go to state 134
    ENTRE           shift and go to state 124
    POR             shift and go to state 125
    IGUALC          shift and go to state 132
    MENOR           shift and go to state 128
    MENORIGUAL      shift and go to state 131
    MAYOR           shift and go to state 133
    MAYORIGUAL      shift and go to state 130
    NOTIGUAL        shift and go to state 123
    AND             shift and go to state 121
    OR              shift and go to state 126

    ope                            shift and go to state 252

state 226

    (32) ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .

    COMA            reduce using rule 32 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 32 (ciclo_tipo -> ID declararVariable COIZQ exp CODER IGUAL exp .)


state 227

    (57) params_ciclo -> params_ciclo COMA tipo ID . meterParametros
    (58) meterParametros -> .

    PDER            reduce using rule 58 (meterParametros -> .)
    COMA            reduce using rule 58 (meterParametros -> .)

    meterParametros                shift and go to state 253

state 228

    (117) return -> RETURN exp PYC .

    LLDER           reduce using rule 117 (return -> RETURN exp PYC .)
    WHILE           reduce using rule 117 (return -> RETURN exp PYC .)
    OUTPUT          reduce using rule 117 (return -> RETURN exp PYC .)
    INPUT           reduce using rule 117 (return -> RETURN exp PYC .)
    ID              reduce using rule 117 (return -> RETURN exp PYC .)
    RETURN          reduce using rule 117 (return -> RETURN exp PYC .)
    THIS            reduce using rule 117 (return -> RETURN exp PYC .)
    IF              reduce using rule 117 (return -> RETURN exp PYC .)


state 229

    (121) asignacion -> atom limpiarInvocador IGUAL . exp PYC
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 254
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 230

    (119) while -> WHILE PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> WHILE PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 255


state 231

    (59) cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .

    HIDDEN          reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    VISIBLE         reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)
    LLDER           reduce using rule 59 (cuerpo_func -> LLIZQ ciclo_vars_func ciclo_estatuto LLDER .)


state 232

    (138) lectura -> INPUT PIZQ atom . limpiarInvocador PDER PYC
    (11) limpiarInvocador -> .

    PDER            reduce using rule 11 (limpiarInvocador -> .)

    limpiarInvocador               shift and go to state 256

state 233

    (72) estatuto -> llamada_func limpiarInvocador PYC .

    LLDER           reduce using rule 72 (estatuto -> llamada_func limpiarInvocador PYC .)
    WHILE           reduce using rule 72 (estatuto -> llamada_func limpiarInvocador PYC .)
    OUTPUT          reduce using rule 72 (estatuto -> llamada_func limpiarInvocador PYC .)
    INPUT           reduce using rule 72 (estatuto -> llamada_func limpiarInvocador PYC .)
    ID              reduce using rule 72 (estatuto -> llamada_func limpiarInvocador PYC .)
    RETURN          reduce using rule 72 (estatuto -> llamada_func limpiarInvocador PYC .)
    THIS            reduce using rule 72 (estatuto -> llamada_func limpiarInvocador PYC .)
    IF              reduce using rule 72 (estatuto -> llamada_func limpiarInvocador PYC .)


state 234

    (76) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarFuncion PIZQ PDER
    (124) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ . exp CODER PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador COIZQ . exp CODER checarAtributo2
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 257
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 235

    (75) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO definirInvocador . ID checarFuncion PIZQ PDER
    (122) atom -> ID PUNTO definirInvocador . ID checarAtributo COIZQ exp CODER
    (123) atom -> ID PUNTO definirInvocador . ID checarAtributo

    ID              shift and go to state 258


state 236

    (134) ciclo_cond -> IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> IF PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 259


state 237

    (132) condicion -> ciclo_cond ELSE LLIZQ . ciclo_estatuto LLDER
    (133) condicion -> ciclo_cond ELSE LLIZQ . LLDER
    (65) ciclo_estatuto -> . estatuto
    (66) ciclo_estatuto -> . ciclo_estatuto estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 260
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    ciclo_estatuto                 shift and go to state 261
    estatuto                       shift and go to state 158
    lectura                        shift and go to state 161
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    ciclo_cond                     shift and go to state 169
    escritura                      shift and go to state 172

state 238

    (136) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> ciclo_cond ELSE IF . PIZQ exp PDER LLIZQ LLDER

    PIZQ            shift and go to state 262


state 239

    (139) escritura -> OUTPUT PIZQ exp . PDER PYC

    PDER            shift and go to state 263


state 240

    (40) ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .

    COMA            reduce using rule 40 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .)
    PYC             reduce using rule 40 (ciclo_id -> ciclo_id COMA ID declararVariable IGUAL atom limpiarInvocador .)


state 241

    (38) ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .

    COMA            reduce using rule 38 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)
    PYC             reduce using rule 38 (ciclo_id -> ciclo_id COMA ID declararVariable COIZQ exp CODER .)


state 242

    (124) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2

    CODER           shift and go to state 264


state 243

    (122) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (123) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (131) checarAtributo -> .

    COIZQ           reduce using rule 131 (checarAtributo -> .)
    COMA            reduce using rule 131 (checarAtributo -> .)
    PYC             reduce using rule 131 (checarAtributo -> .)
    PDER            reduce using rule 131 (checarAtributo -> .)

    checarAtributo                 shift and go to state 247

state 244

    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL . exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    atom                           shift and go to state 98
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 265
    llamada_func                   shift and go to state 99

state 245

    (89) exp -> PIZQ exp PDER ope exp .

    COMA            reduce using rule 89 (exp -> PIZQ exp PDER ope exp .)
    PYC             reduce using rule 89 (exp -> PIZQ exp PDER ope exp .)
    CODER           reduce using rule 89 (exp -> PIZQ exp PDER ope exp .)
    PDER            reduce using rule 89 (exp -> PIZQ exp PDER ope exp .)


state 246

    (124) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (76) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ PDER
    (130) checarAtributo2 -> .

    PUNTO           shift and go to state 267
    MAS             reduce using rule 130 (checarAtributo2 -> .)
    MENOS           reduce using rule 130 (checarAtributo2 -> .)
    MOD             reduce using rule 130 (checarAtributo2 -> .)
    ENTRE           reduce using rule 130 (checarAtributo2 -> .)
    POR             reduce using rule 130 (checarAtributo2 -> .)
    IGUALC          reduce using rule 130 (checarAtributo2 -> .)
    MENOR           reduce using rule 130 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 130 (checarAtributo2 -> .)
    MAYOR           reduce using rule 130 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 130 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 130 (checarAtributo2 -> .)
    AND             reduce using rule 130 (checarAtributo2 -> .)
    OR              reduce using rule 130 (checarAtributo2 -> .)
    COMA            reduce using rule 130 (checarAtributo2 -> .)
    PYC             reduce using rule 130 (checarAtributo2 -> .)
    CODER           reduce using rule 130 (checarAtributo2 -> .)
    PDER            reduce using rule 130 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 266

state 247

    (122) atom -> ID PUNTO definirInvocador ID checarAtributo . COIZQ exp CODER
    (123) atom -> ID PUNTO definirInvocador ID checarAtributo .

    COIZQ           shift and go to state 268
    IGUAL           reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAS             reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 123 (atom -> ID PUNTO definirInvocador ID checarAtributo .)


state 248

    (75) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO definirInvocador ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 269


state 249

    (83) exp_ciclo -> exp_ciclo COMA . exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 270
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 250

    (74) llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .

    PYC             reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAS             reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 74 (llamada_func -> ID checarFuncion PIZQ exp_ciclo PDER .)


state 251

    (128) atom -> THIS PUNTO definirInvocador ID checarAtributo .
    (129) atom -> THIS PUNTO definirInvocador ID checarAtributo . COIZQ exp CODER

    IGUAL           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAS             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOS           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MOD             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    ENTRE           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    POR             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    IGUALC          reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENOR           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MENORIGUAL      reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYOR           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    MAYORIGUAL      reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    NOTIGUAL        reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    AND             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    OR              reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COMA            reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PYC             reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    PDER            reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    CODER           reduce using rule 128 (atom -> THIS PUNTO definirInvocador ID checarAtributo .)
    COIZQ           shift and go to state 271


state 252

    (90) exp -> MENOS PIZQ exp PDER ope . exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 272
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 253

    (57) params_ciclo -> params_ciclo COMA tipo ID meterParametros .

    PDER            reduce using rule 57 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)
    COMA            reduce using rule 57 (params_ciclo -> params_ciclo COMA tipo ID meterParametros .)


state 254

    (121) asignacion -> atom limpiarInvocador IGUAL exp . PYC

    PYC             shift and go to state 273


state 255

    (119) while -> WHILE PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (120) while -> WHILE PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 274


state 256

    (138) lectura -> INPUT PIZQ atom limpiarInvocador . PDER PYC

    PDER            shift and go to state 275


state 257

    (76) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarFuncion PIZQ PDER
    (124) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp . CODER PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador COIZQ exp . CODER checarAtributo2

    CODER           shift and go to state 276


state 258

    (75) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ exp_ciclo PDER
    (78) llamada_func -> ID PUNTO definirInvocador ID . checarFuncion PIZQ PDER
    (122) atom -> ID PUNTO definirInvocador ID . checarAtributo COIZQ exp CODER
    (123) atom -> ID PUNTO definirInvocador ID . checarAtributo
    (80) checarFuncion -> .
    (131) checarAtributo -> .

    PIZQ            reduce using rule 80 (checarFuncion -> .)
    COIZQ           reduce using rule 131 (checarAtributo -> .)
    IGUAL           reduce using rule 131 (checarAtributo -> .)

    checarFuncion                  shift and go to state 248
    checarAtributo                 shift and go to state 247

state 259

    (134) ciclo_cond -> IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 277


state 260

    (133) condicion -> ciclo_cond ELSE LLIZQ LLDER .

    LLDER           reduce using rule 133 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    WHILE           reduce using rule 133 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    OUTPUT          reduce using rule 133 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    INPUT           reduce using rule 133 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    ID              reduce using rule 133 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    RETURN          reduce using rule 133 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    THIS            reduce using rule 133 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)
    IF              reduce using rule 133 (condicion -> ciclo_cond ELSE LLIZQ LLDER .)


state 261

    (132) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto . LLDER
    (66) ciclo_estatuto -> ciclo_estatuto . estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 278
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    estatuto                       shift and go to state 207
    lectura                        shift and go to state 161
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    ciclo_cond                     shift and go to state 169
    escritura                      shift and go to state 172

state 262

    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> ciclo_cond ELSE IF PIZQ . exp PDER LLIZQ LLDER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 279
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 263

    (139) escritura -> OUTPUT PIZQ exp PDER . PYC

    PYC             shift and go to state 280


state 264

    (124) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (130) checarAtributo2 -> .

    PUNTO           shift and go to state 281
    COMA            reduce using rule 130 (checarAtributo2 -> .)
    PYC             reduce using rule 130 (checarAtributo2 -> .)
    PDER            reduce using rule 130 (checarAtributo2 -> .)
    MAS             reduce using rule 130 (checarAtributo2 -> .)
    MENOS           reduce using rule 130 (checarAtributo2 -> .)
    MOD             reduce using rule 130 (checarAtributo2 -> .)
    ENTRE           reduce using rule 130 (checarAtributo2 -> .)
    POR             reduce using rule 130 (checarAtributo2 -> .)
    IGUALC          reduce using rule 130 (checarAtributo2 -> .)
    MENOR           reduce using rule 130 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 130 (checarAtributo2 -> .)
    MAYOR           reduce using rule 130 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 130 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 130 (checarAtributo2 -> .)
    AND             reduce using rule 130 (checarAtributo2 -> .)
    OR              reduce using rule 130 (checarAtributo2 -> .)
    CODER           reduce using rule 130 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 266

state 265

    (34) ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .

    COMA            reduce using rule 34 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)
    PYC             reduce using rule 34 (ciclo_tipo -> ciclo_tipo COMA ID declararVariable COIZQ exp CODER IGUAL exp .)


state 266

    (127) atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .

    IGUAL           reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAS             reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENOS           reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MOD             reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    ENTRE           reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    POR             reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    IGUALC          reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENOR           reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MENORIGUAL      reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAYOR           reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    MAYORIGUAL      reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    NOTIGUAL        reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    AND             reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    OR              reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    COMA            reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    PYC             reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    PDER            reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)
    CODER           reduce using rule 127 (atom -> ID definirInvocador COIZQ exp CODER checarAtributo2 .)


state 267

    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo
    (76) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ PDER

    ID              shift and go to state 282


state 268

    (122) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ . exp CODER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 283
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 269

    (75) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ . exp_ciclo PDER
    (78) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ . PDER
    (82) exp_ciclo -> . exp
    (83) exp_ciclo -> . exp_ciclo COMA exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 284
    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    exp_ciclo                      shift and go to state 285
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 223
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 270

    (83) exp_ciclo -> exp_ciclo COMA exp .

    PDER            reduce using rule 83 (exp_ciclo -> exp_ciclo COMA exp .)
    COMA            reduce using rule 83 (exp_ciclo -> exp_ciclo COMA exp .)


state 271

    (129) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ . exp CODER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 286
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 272

    (90) exp -> MENOS PIZQ exp PDER ope exp .

    COMA            reduce using rule 90 (exp -> MENOS PIZQ exp PDER ope exp .)
    PYC             reduce using rule 90 (exp -> MENOS PIZQ exp PDER ope exp .)
    CODER           reduce using rule 90 (exp -> MENOS PIZQ exp PDER ope exp .)
    PDER            reduce using rule 90 (exp -> MENOS PIZQ exp PDER ope exp .)


state 273

    (121) asignacion -> atom limpiarInvocador IGUAL exp PYC .

    LLDER           reduce using rule 121 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    WHILE           reduce using rule 121 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    OUTPUT          reduce using rule 121 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    INPUT           reduce using rule 121 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    ID              reduce using rule 121 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    RETURN          reduce using rule 121 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    THIS            reduce using rule 121 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)
    IF              reduce using rule 121 (asignacion -> atom limpiarInvocador IGUAL exp PYC .)


state 274

    (119) while -> WHILE PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (120) while -> WHILE PIZQ exp PDER LLIZQ . LLDER
    (65) ciclo_estatuto -> . estatuto
    (66) ciclo_estatuto -> . ciclo_estatuto estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 287
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    ciclo_estatuto                 shift and go to state 288
    estatuto                       shift and go to state 158
    ciclo_cond                     shift and go to state 169
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    lectura                        shift and go to state 161
    escritura                      shift and go to state 172

state 275

    (138) lectura -> INPUT PIZQ atom limpiarInvocador PDER . PYC

    PYC             shift and go to state 289


state 276

    (76) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarFuncion PIZQ PDER
    (124) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER . PUNTO ID checarAtributo
    (127) atom -> ID definirInvocador COIZQ exp CODER . checarAtributo2
    (130) checarAtributo2 -> .

    PUNTO           shift and go to state 290
    IGUAL           reduce using rule 130 (checarAtributo2 -> .)
    MAS             reduce using rule 130 (checarAtributo2 -> .)
    MENOS           reduce using rule 130 (checarAtributo2 -> .)
    MOD             reduce using rule 130 (checarAtributo2 -> .)
    ENTRE           reduce using rule 130 (checarAtributo2 -> .)
    POR             reduce using rule 130 (checarAtributo2 -> .)
    IGUALC          reduce using rule 130 (checarAtributo2 -> .)
    MENOR           reduce using rule 130 (checarAtributo2 -> .)
    MENORIGUAL      reduce using rule 130 (checarAtributo2 -> .)
    MAYOR           reduce using rule 130 (checarAtributo2 -> .)
    MAYORIGUAL      reduce using rule 130 (checarAtributo2 -> .)
    NOTIGUAL        reduce using rule 130 (checarAtributo2 -> .)
    AND             reduce using rule 130 (checarAtributo2 -> .)
    OR              reduce using rule 130 (checarAtributo2 -> .)
    CODER           reduce using rule 130 (checarAtributo2 -> .)

    checarAtributo2                shift and go to state 266

state 277

    (134) ciclo_cond -> IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (135) ciclo_cond -> IF PIZQ exp PDER LLIZQ . LLDER
    (65) ciclo_estatuto -> . estatuto
    (66) ciclo_estatuto -> . ciclo_estatuto estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 291
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    ciclo_estatuto                 shift and go to state 292
    estatuto                       shift and go to state 158
    ciclo_cond                     shift and go to state 169
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    lectura                        shift and go to state 161
    escritura                      shift and go to state 172

state 278

    (132) condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 132 (condicion -> ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER .)


state 279

    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp . PDER LLIZQ LLDER

    PDER            shift and go to state 293


state 280

    (139) escritura -> OUTPUT PIZQ exp PDER PYC .

    LLDER           reduce using rule 139 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    WHILE           reduce using rule 139 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    OUTPUT          reduce using rule 139 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    INPUT           reduce using rule 139 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    ID              reduce using rule 139 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    RETURN          reduce using rule 139 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    THIS            reduce using rule 139 (escritura -> OUTPUT PIZQ exp PDER PYC .)
    IF              reduce using rule 139 (escritura -> OUTPUT PIZQ exp PDER PYC .)


state 281

    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo

    ID              shift and go to state 294


state 282

    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (76) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ PDER
    (131) checarAtributo -> .
    (80) checarFuncion -> .

    COIZQ           reduce using rule 131 (checarAtributo -> .)
    MAS             reduce using rule 131 (checarAtributo -> .)
    MENOS           reduce using rule 131 (checarAtributo -> .)
    MOD             reduce using rule 131 (checarAtributo -> .)
    ENTRE           reduce using rule 131 (checarAtributo -> .)
    POR             reduce using rule 131 (checarAtributo -> .)
    IGUALC          reduce using rule 131 (checarAtributo -> .)
    MENOR           reduce using rule 131 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 131 (checarAtributo -> .)
    MAYOR           reduce using rule 131 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 131 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 131 (checarAtributo -> .)
    AND             reduce using rule 131 (checarAtributo -> .)
    OR              reduce using rule 131 (checarAtributo -> .)
    COMA            reduce using rule 131 (checarAtributo -> .)
    PYC             reduce using rule 131 (checarAtributo -> .)
    CODER           reduce using rule 131 (checarAtributo -> .)
    PDER            reduce using rule 131 (checarAtributo -> .)
    PIZQ            reduce using rule 80 (checarFuncion -> .)

    checarFuncion                  shift and go to state 296
    checarAtributo                 shift and go to state 295

state 283

    (122) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp . CODER

    CODER           shift and go to state 297


state 284

    (78) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .

    PYC             reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAS             reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 78 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ PDER .)


state 285

    (75) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo . PDER
    (83) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 298
    COMA            shift and go to state 249


state 286

    (129) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp . CODER

    CODER           shift and go to state 299


state 287

    (120) while -> WHILE PIZQ exp PDER LLIZQ LLDER .

    LLDER           reduce using rule 120 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    WHILE           reduce using rule 120 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    OUTPUT          reduce using rule 120 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    INPUT           reduce using rule 120 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    ID              reduce using rule 120 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    RETURN          reduce using rule 120 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    THIS            reduce using rule 120 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)
    IF              reduce using rule 120 (while -> WHILE PIZQ exp PDER LLIZQ LLDER .)


state 288

    (119) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (66) ciclo_estatuto -> ciclo_estatuto . estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 300
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    estatuto                       shift and go to state 207
    ciclo_cond                     shift and go to state 169
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    lectura                        shift and go to state 161
    escritura                      shift and go to state 172

state 289

    (138) lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .

    LLDER           reduce using rule 138 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    WHILE           reduce using rule 138 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    OUTPUT          reduce using rule 138 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    INPUT           reduce using rule 138 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    ID              reduce using rule 138 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    RETURN          reduce using rule 138 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    THIS            reduce using rule 138 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)
    IF              reduce using rule 138 (lectura -> INPUT PIZQ atom limpiarInvocador PDER PYC .)


state 290

    (76) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarFuncion PIZQ PDER
    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER PUNTO . ID checarAtributo

    ID              shift and go to state 301


state 291

    (135) ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 135 (ciclo_cond -> IF PIZQ exp PDER LLIZQ LLDER .)


state 292

    (134) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (66) ciclo_estatuto -> ciclo_estatuto . estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 302
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    estatuto                       shift and go to state 207
    ciclo_cond                     shift and go to state 169
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    lectura                        shift and go to state 161
    escritura                      shift and go to state 172

state 293

    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER . LLIZQ LLDER

    LLIZQ           shift and go to state 303


state 294

    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (131) checarAtributo -> .

    COIZQ           reduce using rule 131 (checarAtributo -> .)
    COMA            reduce using rule 131 (checarAtributo -> .)
    PYC             reduce using rule 131 (checarAtributo -> .)
    PDER            reduce using rule 131 (checarAtributo -> .)
    MAS             reduce using rule 131 (checarAtributo -> .)
    MENOS           reduce using rule 131 (checarAtributo -> .)
    MOD             reduce using rule 131 (checarAtributo -> .)
    ENTRE           reduce using rule 131 (checarAtributo -> .)
    POR             reduce using rule 131 (checarAtributo -> .)
    IGUALC          reduce using rule 131 (checarAtributo -> .)
    MENOR           reduce using rule 131 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 131 (checarAtributo -> .)
    MAYOR           reduce using rule 131 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 131 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 131 (checarAtributo -> .)
    AND             reduce using rule 131 (checarAtributo -> .)
    OR              reduce using rule 131 (checarAtributo -> .)
    CODER           reduce using rule 131 (checarAtributo -> .)

    checarAtributo                 shift and go to state 295

state 295

    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo . COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .

    COIZQ           shift and go to state 304
    IGUAL           reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAS             reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENOS           reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MOD             reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    ENTRE           reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    POR             reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    IGUALC          reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENOR           reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MENORIGUAL      reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAYOR           reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    MAYORIGUAL      reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    NOTIGUAL        reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    AND             reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    OR              reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    COMA            reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    PYC             reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    PDER            reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)
    CODER           reduce using rule 125 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo .)


state 296

    (76) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion . PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion . PIZQ PDER

    PIZQ            shift and go to state 305


state 297

    (122) atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .

    IGUAL           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAS             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 122 (atom -> ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)


state 298

    (75) llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .

    PYC             reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAS             reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 75 (llamada_func -> ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER .)


state 299

    (129) atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .

    IGUAL           reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAS             reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 129 (atom -> THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER .)


state 300

    (119) while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    LLDER           reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    WHILE           reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    OUTPUT          reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    INPUT           reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    ID              reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    RETURN          reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    THIS            reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)
    IF              reduce using rule 119 (while -> WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 301

    (76) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarFuncion PIZQ PDER
    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo COIZQ exp CODER
    (125) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID . checarAtributo
    (80) checarFuncion -> .
    (131) checarAtributo -> .

    PIZQ            reduce using rule 80 (checarFuncion -> .)
    COIZQ           reduce using rule 131 (checarAtributo -> .)
    IGUAL           reduce using rule 131 (checarAtributo -> .)
    MAS             reduce using rule 131 (checarAtributo -> .)
    MENOS           reduce using rule 131 (checarAtributo -> .)
    MOD             reduce using rule 131 (checarAtributo -> .)
    ENTRE           reduce using rule 131 (checarAtributo -> .)
    POR             reduce using rule 131 (checarAtributo -> .)
    IGUALC          reduce using rule 131 (checarAtributo -> .)
    MENOR           reduce using rule 131 (checarAtributo -> .)
    MENORIGUAL      reduce using rule 131 (checarAtributo -> .)
    MAYOR           reduce using rule 131 (checarAtributo -> .)
    MAYORIGUAL      reduce using rule 131 (checarAtributo -> .)
    NOTIGUAL        reduce using rule 131 (checarAtributo -> .)
    AND             reduce using rule 131 (checarAtributo -> .)
    OR              reduce using rule 131 (checarAtributo -> .)
    CODER           reduce using rule 131 (checarAtributo -> .)

    checarFuncion                  shift and go to state 296
    checarAtributo                 shift and go to state 295

state 302

    (134) ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 134 (ciclo_cond -> IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 303

    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . ciclo_estatuto LLDER
    (137) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ . LLDER
    (65) ciclo_estatuto -> . estatuto
    (66) ciclo_estatuto -> . ciclo_estatuto estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 306
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    ciclo_estatuto                 shift and go to state 307
    estatuto                       shift and go to state 158
    lectura                        shift and go to state 161
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    ciclo_cond                     shift and go to state 169
    escritura                      shift and go to state 172

state 304

    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ . exp CODER
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 308
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 305

    (76) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ . exp_ciclo PDER
    (79) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ . PDER
    (82) exp_ciclo -> . exp
    (83) exp_ciclo -> . exp_ciclo COMA exp
    (86) exp -> . opciones ope exp
    (87) exp -> . opciones
    (88) exp -> . PIZQ exp PDER
    (89) exp -> . PIZQ exp PDER ope exp
    (90) exp -> . MENOS PIZQ exp PDER ope exp
    (91) exp -> . NOT exp
    (92) exp -> . MENOS PIZQ exp PDER
    (93) opciones -> . CTE_STR
    (94) opciones -> . CTE_CHAR
    (95) opciones -> . CTE_NUMERAL
    (96) opciones -> . CTE_REAL
    (97) opciones -> . cte_bool
    (98) opciones -> . atom limpiarInvocador
    (99) opciones -> . llamada_func limpiarInvocador
    (100) opciones -> . MENOS CTE_NUMERAL
    (101) opciones -> . MENOS CTE_REAL
    (102) opciones -> . MENOS atom limpiarInvocador
    (103) opciones -> . MENOS llamada_func limpiarInvocador
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER

    PDER            shift and go to state 309
    PIZQ            shift and go to state 90
    MENOS           shift and go to state 103
    NOT             shift and go to state 105
    CTE_STR         shift and go to state 97
    CTE_CHAR        shift and go to state 95
    CTE_NUMERAL     shift and go to state 93
    CTE_REAL        shift and go to state 94
    TRUE            shift and go to state 92
    FALSE           shift and go to state 101
    ID              shift and go to state 100
    THIS            shift and go to state 102

    opciones                       shift and go to state 96
    exp_ciclo                      shift and go to state 310
    cte_bool                       shift and go to state 91
    exp                            shift and go to state 223
    atom                           shift and go to state 98
    llamada_func                   shift and go to state 99

state 306

    (137) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .

    ELSE            reduce using rule 137 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER .)


state 307

    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto . LLDER
    (66) ciclo_estatuto -> ciclo_estatuto . estatuto
    (67) estatuto -> . while
    (68) estatuto -> . asignacion
    (69) estatuto -> . condicion
    (70) estatuto -> . escritura
    (71) estatuto -> . lectura
    (72) estatuto -> . llamada_func limpiarInvocador PYC
    (73) estatuto -> . return
    (119) while -> . WHILE PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (120) while -> . WHILE PIZQ exp PDER LLIZQ LLDER
    (121) asignacion -> . atom limpiarInvocador IGUAL exp PYC
    (132) condicion -> . ciclo_cond ELSE LLIZQ ciclo_estatuto LLDER
    (133) condicion -> . ciclo_cond ELSE LLIZQ LLDER
    (139) escritura -> . OUTPUT PIZQ exp PDER PYC
    (138) lectura -> . INPUT PIZQ atom limpiarInvocador PDER PYC
    (74) llamada_func -> . ID checarFuncion PIZQ exp_ciclo PDER
    (75) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ exp_ciclo PDER
    (76) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER
    (77) llamada_func -> . ID checarFuncion PIZQ PDER
    (78) llamada_func -> . ID PUNTO definirInvocador ID checarFuncion PIZQ PDER
    (79) llamada_func -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER
    (117) return -> . RETURN exp PYC
    (118) return -> . RETURN PYC
    (122) atom -> . ID PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (123) atom -> . ID PUNTO definirInvocador ID checarAtributo
    (124) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER
    (125) atom -> . ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo
    (126) atom -> . ID checarAtributo
    (127) atom -> . ID definirInvocador COIZQ exp CODER checarAtributo2
    (128) atom -> . THIS PUNTO definirInvocador ID checarAtributo
    (129) atom -> . THIS PUNTO definirInvocador ID checarAtributo COIZQ exp CODER
    (134) ciclo_cond -> . IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (135) ciclo_cond -> . IF PIZQ exp PDER LLIZQ LLDER
    (136) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER
    (137) ciclo_cond -> . ciclo_cond ELSE IF PIZQ exp PDER LLIZQ LLDER

    LLDER           shift and go to state 311
    WHILE           shift and go to state 155
    OUTPUT          shift and go to state 171
    INPUT           shift and go to state 163
    ID              shift and go to state 209
    RETURN          shift and go to state 152
    THIS            shift and go to state 102
    IF              shift and go to state 166

    return                         shift and go to state 156
    asignacion                     shift and go to state 167
    estatuto                       shift and go to state 207
    lectura                        shift and go to state 161
    while                          shift and go to state 170
    condicion                      shift and go to state 160
    atom                           shift and go to state 154
    llamada_func                   shift and go to state 164
    ciclo_cond                     shift and go to state 169
    escritura                      shift and go to state 172

state 308

    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp . CODER

    CODER           shift and go to state 312


state 309

    (79) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .

    PYC             reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAS             reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENOS           reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MOD             reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    ENTRE           reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    POR             reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    IGUALC          reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENOR           reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MENORIGUAL      reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAYOR           reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    MAYORIGUAL      reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    NOTIGUAL        reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    AND             reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    OR              reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    COMA            reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    PDER            reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)
    CODER           reduce using rule 79 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ PDER .)


state 310

    (76) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo . PDER
    (83) exp_ciclo -> exp_ciclo . COMA exp

    PDER            shift and go to state 313
    COMA            shift and go to state 249


state 311

    (136) ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .

    ELSE            reduce using rule 136 (ciclo_cond -> ciclo_cond ELSE IF PIZQ exp PDER LLIZQ ciclo_estatuto LLDER .)


state 312

    (124) atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .

    IGUAL           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAS             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENOS           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MOD             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    ENTRE           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    POR             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    IGUALC          reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENOR           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MENORIGUAL      reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAYOR           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    MAYORIGUAL      reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    NOTIGUAL        reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    AND             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    OR              reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    COMA            reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    PYC             reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    PDER            reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)
    CODER           reduce using rule 124 (atom -> ID definirInvocador COIZQ exp CODER PUNTO ID checarAtributo COIZQ exp CODER .)


state 313

    (76) llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .

    PYC             reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAS             reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOS           reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MOD             reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    ENTRE           reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    POR             reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    IGUALC          reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENOR           reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MENORIGUAL      reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYOR           reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    MAYORIGUAL      reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    NOTIGUAL        reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    AND             reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    OR              reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    COMA            reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    PDER            reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)
    CODER           reduce using rule 76 (llamada_func -> ID definirInvocador COIZQ exp CODER PUNTO ID checarFuncion PIZQ exp_ciclo PDER .)

